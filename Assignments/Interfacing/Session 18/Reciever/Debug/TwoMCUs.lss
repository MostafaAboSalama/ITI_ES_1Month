
TwoMCUs.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00005bd6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000013a  00800060  00005bd6  00005c6a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000017  0080019a  0080019a  00005da4  2**0
                  ALLOC
  3 .debug_aranges 000004e0  00000000  00000000  00005da4  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 0000080a  00000000  00000000  00006284  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00004b34  00000000  00000000  00006a8e  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00002141  00000000  00000000  0000b5c2  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00003d92  00000000  00000000  0000d703  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000640  00000000  00000000  00011498  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000ba3  00000000  00000000  00011ad8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00002420  00000000  00000000  0001267b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_macinfo 0000e192  00000000  00000000  00014a9b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000002e0  00000000  00000000  00022c2d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 10 27 	jmp	0x4e20	; 0x4e20 <__vector_1>
       8:	0c 94 3d 27 	jmp	0x4e7a	; 0x4e7a <__vector_2>
       c:	0c 94 6a 27 	jmp	0x4ed4	; 0x4ed4 <__vector_3>
      10:	0c 94 5f 25 	jmp	0x4abe	; 0x4abe <__vector_4>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 cf 24 	jmp	0x499e	; 0x499e <__vector_6>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d4 e0       	ldi	r29, 0x04	; 4
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e6 ed       	ldi	r30, 0xD6	; 214
      68:	fb e5       	ldi	r31, 0x5B	; 91
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	aa 39       	cpi	r26, 0x9A	; 154
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	11 e0       	ldi	r17, 0x01	; 1
      78:	aa e9       	ldi	r26, 0x9A	; 154
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a1 3b       	cpi	r26, 0xB1	; 177
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 bc 15 	call	0x2b78	; 0x2b78 <main>
      8a:	0c 94 e9 2d 	jmp	0x5bd2	; 0x5bd2 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__ashldi3>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	df 93       	push	r29
      9a:	cf 93       	push	r28
      9c:	cd b7       	in	r28, 0x3d	; 61
      9e:	de b7       	in	r29, 0x3e	; 62
      a0:	60 97       	sbiw	r28, 0x10	; 16
      a2:	0f b6       	in	r0, 0x3f	; 63
      a4:	f8 94       	cli
      a6:	de bf       	out	0x3e, r29	; 62
      a8:	0f be       	out	0x3f, r0	; 63
      aa:	cd bf       	out	0x3d, r28	; 61
      ac:	a8 2f       	mov	r26, r24
      ae:	00 23       	and	r16, r16
      b0:	09 f4       	brne	.+2      	; 0xb4 <__ashldi3+0x22>
      b2:	61 c0       	rjmp	.+194    	; 0x176 <__ashldi3+0xe4>
      b4:	7e 01       	movw	r14, r28
      b6:	08 94       	sec
      b8:	e1 1c       	adc	r14, r1
      ba:	f1 1c       	adc	r15, r1
      bc:	88 e0       	ldi	r24, 0x08	; 8
      be:	f7 01       	movw	r30, r14
      c0:	11 92       	st	Z+, r1
      c2:	8a 95       	dec	r24
      c4:	e9 f7       	brne	.-6      	; 0xc0 <__ashldi3+0x2e>
      c6:	29 83       	std	Y+1, r18	; 0x01
      c8:	3a 83       	std	Y+2, r19	; 0x02
      ca:	4b 83       	std	Y+3, r20	; 0x03
      cc:	5c 83       	std	Y+4, r21	; 0x04
      ce:	6d 83       	std	Y+5, r22	; 0x05
      d0:	7e 83       	std	Y+6, r23	; 0x06
      d2:	af 83       	std	Y+7, r26	; 0x07
      d4:	98 87       	std	Y+8, r25	; 0x08
      d6:	80 e2       	ldi	r24, 0x20	; 32
      d8:	80 1b       	sub	r24, r16
      da:	e8 2f       	mov	r30, r24
      dc:	ff 27       	eor	r31, r31
      de:	e7 fd       	sbrc	r30, 7
      e0:	f0 95       	com	r31
      e2:	49 81       	ldd	r20, Y+1	; 0x01
      e4:	5a 81       	ldd	r21, Y+2	; 0x02
      e6:	6b 81       	ldd	r22, Y+3	; 0x03
      e8:	7c 81       	ldd	r23, Y+4	; 0x04
      ea:	18 16       	cp	r1, r24
      ec:	84 f0       	brlt	.+32     	; 0x10e <__ashldi3+0x7c>
      ee:	19 86       	std	Y+9, r1	; 0x09
      f0:	1a 86       	std	Y+10, r1	; 0x0a
      f2:	1b 86       	std	Y+11, r1	; 0x0b
      f4:	1c 86       	std	Y+12, r1	; 0x0c
      f6:	88 27       	eor	r24, r24
      f8:	99 27       	eor	r25, r25
      fa:	8e 1b       	sub	r24, r30
      fc:	9f 0b       	sbc	r25, r31
      fe:	04 c0       	rjmp	.+8      	; 0x108 <__ashldi3+0x76>
     100:	44 0f       	add	r20, r20
     102:	55 1f       	adc	r21, r21
     104:	66 1f       	adc	r22, r22
     106:	77 1f       	adc	r23, r23
     108:	8a 95       	dec	r24
     10a:	d2 f7       	brpl	.-12     	; 0x100 <__ashldi3+0x6e>
     10c:	28 c0       	rjmp	.+80     	; 0x15e <__ashldi3+0xcc>
     10e:	20 2f       	mov	r18, r16
     110:	33 27       	eor	r19, r19
     112:	27 fd       	sbrc	r18, 7
     114:	30 95       	com	r19
     116:	db 01       	movw	r26, r22
     118:	ca 01       	movw	r24, r20
     11a:	02 2e       	mov	r0, r18
     11c:	04 c0       	rjmp	.+8      	; 0x126 <__ashldi3+0x94>
     11e:	88 0f       	add	r24, r24
     120:	99 1f       	adc	r25, r25
     122:	aa 1f       	adc	r26, r26
     124:	bb 1f       	adc	r27, r27
     126:	0a 94       	dec	r0
     128:	d2 f7       	brpl	.-12     	; 0x11e <__ashldi3+0x8c>
     12a:	89 87       	std	Y+9, r24	; 0x09
     12c:	9a 87       	std	Y+10, r25	; 0x0a
     12e:	ab 87       	std	Y+11, r26	; 0x0b
     130:	bc 87       	std	Y+12, r27	; 0x0c
     132:	04 c0       	rjmp	.+8      	; 0x13c <__ashldi3+0xaa>
     134:	76 95       	lsr	r23
     136:	67 95       	ror	r22
     138:	57 95       	ror	r21
     13a:	47 95       	ror	r20
     13c:	ea 95       	dec	r30
     13e:	d2 f7       	brpl	.-12     	; 0x134 <__ashldi3+0xa2>
     140:	8d 81       	ldd	r24, Y+5	; 0x05
     142:	9e 81       	ldd	r25, Y+6	; 0x06
     144:	af 81       	ldd	r26, Y+7	; 0x07
     146:	b8 85       	ldd	r27, Y+8	; 0x08
     148:	04 c0       	rjmp	.+8      	; 0x152 <__ashldi3+0xc0>
     14a:	88 0f       	add	r24, r24
     14c:	99 1f       	adc	r25, r25
     14e:	aa 1f       	adc	r26, r26
     150:	bb 1f       	adc	r27, r27
     152:	2a 95       	dec	r18
     154:	d2 f7       	brpl	.-12     	; 0x14a <__ashldi3+0xb8>
     156:	48 2b       	or	r20, r24
     158:	59 2b       	or	r21, r25
     15a:	6a 2b       	or	r22, r26
     15c:	7b 2b       	or	r23, r27
     15e:	4d 87       	std	Y+13, r20	; 0x0d
     160:	5e 87       	std	Y+14, r21	; 0x0e
     162:	6f 87       	std	Y+15, r22	; 0x0f
     164:	78 8b       	std	Y+16, r23	; 0x10
     166:	29 85       	ldd	r18, Y+9	; 0x09
     168:	3a 85       	ldd	r19, Y+10	; 0x0a
     16a:	4b 85       	ldd	r20, Y+11	; 0x0b
     16c:	5c 85       	ldd	r21, Y+12	; 0x0c
     16e:	6d 85       	ldd	r22, Y+13	; 0x0d
     170:	7e 85       	ldd	r23, Y+14	; 0x0e
     172:	af 85       	ldd	r26, Y+15	; 0x0f
     174:	98 89       	ldd	r25, Y+16	; 0x10
     176:	8a 2f       	mov	r24, r26
     178:	60 96       	adiw	r28, 0x10	; 16
     17a:	0f b6       	in	r0, 0x3f	; 63
     17c:	f8 94       	cli
     17e:	de bf       	out	0x3e, r29	; 62
     180:	0f be       	out	0x3f, r0	; 63
     182:	cd bf       	out	0x3d, r28	; 61
     184:	cf 91       	pop	r28
     186:	df 91       	pop	r29
     188:	0f 91       	pop	r16
     18a:	ff 90       	pop	r15
     18c:	ef 90       	pop	r14
     18e:	08 95       	ret

00000190 <__fixunssfsi>:
     190:	ef 92       	push	r14
     192:	ff 92       	push	r15
     194:	0f 93       	push	r16
     196:	1f 93       	push	r17
     198:	7b 01       	movw	r14, r22
     19a:	8c 01       	movw	r16, r24
     19c:	20 e0       	ldi	r18, 0x00	; 0
     19e:	30 e0       	ldi	r19, 0x00	; 0
     1a0:	40 e0       	ldi	r20, 0x00	; 0
     1a2:	5f e4       	ldi	r21, 0x4F	; 79
     1a4:	0e 94 01 12 	call	0x2402	; 0x2402 <__gesf2>
     1a8:	88 23       	and	r24, r24
     1aa:	8c f0       	brlt	.+34     	; 0x1ce <__fixunssfsi+0x3e>
     1ac:	c8 01       	movw	r24, r16
     1ae:	b7 01       	movw	r22, r14
     1b0:	20 e0       	ldi	r18, 0x00	; 0
     1b2:	30 e0       	ldi	r19, 0x00	; 0
     1b4:	40 e0       	ldi	r20, 0x00	; 0
     1b6:	5f e4       	ldi	r21, 0x4F	; 79
     1b8:	0e 94 cd 0f 	call	0x1f9a	; 0x1f9a <__subsf3>
     1bc:	0e 94 61 12 	call	0x24c2	; 0x24c2 <__fixsfsi>
     1c0:	9b 01       	movw	r18, r22
     1c2:	ac 01       	movw	r20, r24
     1c4:	20 50       	subi	r18, 0x00	; 0
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 48       	sbci	r21, 0x80	; 128
     1cc:	06 c0       	rjmp	.+12     	; 0x1da <__fixunssfsi+0x4a>
     1ce:	c8 01       	movw	r24, r16
     1d0:	b7 01       	movw	r22, r14
     1d2:	0e 94 61 12 	call	0x24c2	; 0x24c2 <__fixsfsi>
     1d6:	9b 01       	movw	r18, r22
     1d8:	ac 01       	movw	r20, r24
     1da:	b9 01       	movw	r22, r18
     1dc:	ca 01       	movw	r24, r20
     1de:	1f 91       	pop	r17
     1e0:	0f 91       	pop	r16
     1e2:	ff 90       	pop	r15
     1e4:	ef 90       	pop	r14
     1e6:	08 95       	ret

000001e8 <__fixunssfdi>:
     1e8:	a0 e0       	ldi	r26, 0x00	; 0
     1ea:	b0 e0       	ldi	r27, 0x00	; 0
     1ec:	ea ef       	ldi	r30, 0xFA	; 250
     1ee:	f0 e0       	ldi	r31, 0x00	; 0
     1f0:	0c 94 b2 2d 	jmp	0x5b64	; 0x5b64 <__prologue_saves__>
     1f4:	7b 01       	movw	r14, r22
     1f6:	8c 01       	movw	r16, r24
     1f8:	20 e0       	ldi	r18, 0x00	; 0
     1fa:	30 e0       	ldi	r19, 0x00	; 0
     1fc:	40 e8       	ldi	r20, 0x80	; 128
     1fe:	5f e3       	ldi	r21, 0x3F	; 63
     200:	0e 94 31 12 	call	0x2462	; 0x2462 <__ltsf2>
     204:	88 23       	and	r24, r24
     206:	4c f4       	brge	.+18     	; 0x21a <__fixunssfdi+0x32>
     208:	aa 24       	eor	r10, r10
     20a:	bb 24       	eor	r11, r11
     20c:	cc 24       	eor	r12, r12
     20e:	dd 24       	eor	r13, r13
     210:	ee 24       	eor	r14, r14
     212:	ff 24       	eor	r15, r15
     214:	00 e0       	ldi	r16, 0x00	; 0
     216:	10 e0       	ldi	r17, 0x00	; 0
     218:	86 c0       	rjmp	.+268    	; 0x326 <__fixunssfdi+0x13e>
     21a:	c8 01       	movw	r24, r16
     21c:	b7 01       	movw	r22, r14
     21e:	20 e0       	ldi	r18, 0x00	; 0
     220:	30 e0       	ldi	r19, 0x00	; 0
     222:	40 e8       	ldi	r20, 0x80	; 128
     224:	5f e4       	ldi	r21, 0x4F	; 79
     226:	0e 94 31 12 	call	0x2462	; 0x2462 <__ltsf2>
     22a:	88 23       	and	r24, r24
     22c:	54 f4       	brge	.+20     	; 0x242 <__fixunssfdi+0x5a>
     22e:	c8 01       	movw	r24, r16
     230:	b7 01       	movw	r22, r14
     232:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
     236:	5b 01       	movw	r10, r22
     238:	6c 01       	movw	r12, r24
     23a:	ee 24       	eor	r14, r14
     23c:	ff 24       	eor	r15, r15
     23e:	87 01       	movw	r16, r14
     240:	72 c0       	rjmp	.+228    	; 0x326 <__fixunssfdi+0x13e>
     242:	c8 01       	movw	r24, r16
     244:	b7 01       	movw	r22, r14
     246:	20 e0       	ldi	r18, 0x00	; 0
     248:	30 e0       	ldi	r19, 0x00	; 0
     24a:	40 e8       	ldi	r20, 0x80	; 128
     24c:	5f e5       	ldi	r21, 0x5F	; 95
     24e:	0e 94 31 12 	call	0x2462	; 0x2462 <__ltsf2>
     252:	87 fd       	sbrc	r24, 7
     254:	0f c0       	rjmp	.+30     	; 0x274 <__fixunssfdi+0x8c>
     256:	aa 24       	eor	r10, r10
     258:	aa 94       	dec	r10
     25a:	bb 24       	eor	r11, r11
     25c:	ba 94       	dec	r11
     25e:	cc 24       	eor	r12, r12
     260:	ca 94       	dec	r12
     262:	dd 24       	eor	r13, r13
     264:	da 94       	dec	r13
     266:	ee 24       	eor	r14, r14
     268:	ea 94       	dec	r14
     26a:	ff 24       	eor	r15, r15
     26c:	fa 94       	dec	r15
     26e:	0f ef       	ldi	r16, 0xFF	; 255
     270:	1f ef       	ldi	r17, 0xFF	; 255
     272:	59 c0       	rjmp	.+178    	; 0x326 <__fixunssfdi+0x13e>
     274:	c8 01       	movw	r24, r16
     276:	b7 01       	movw	r22, r14
     278:	20 e0       	ldi	r18, 0x00	; 0
     27a:	30 e0       	ldi	r19, 0x00	; 0
     27c:	40 e8       	ldi	r20, 0x80	; 128
     27e:	5f e2       	ldi	r21, 0x2F	; 47
     280:	0e 94 2b 10 	call	0x2056	; 0x2056 <__mulsf3>
     284:	7b 01       	movw	r14, r22
     286:	8c 01       	movw	r16, r24
     288:	22 24       	eor	r2, r2
     28a:	33 24       	eor	r3, r3
     28c:	21 01       	movw	r4, r2
     28e:	90 e1       	ldi	r25, 0x10	; 16
     290:	a9 2e       	mov	r10, r25
     292:	b1 2c       	mov	r11, r1
     294:	c1 2c       	mov	r12, r1
     296:	d1 2c       	mov	r13, r1
     298:	c0 e0       	ldi	r28, 0x00	; 0
     29a:	d0 e0       	ldi	r29, 0x00	; 0
     29c:	61 e0       	ldi	r22, 0x01	; 1
     29e:	70 e0       	ldi	r23, 0x00	; 0
     2a0:	80 e0       	ldi	r24, 0x00	; 0
     2a2:	90 e0       	ldi	r25, 0x00	; 0
     2a4:	0a 2c       	mov	r0, r10
     2a6:	04 c0       	rjmp	.+8      	; 0x2b0 <__fixunssfdi+0xc8>
     2a8:	66 0f       	add	r22, r22
     2aa:	77 1f       	adc	r23, r23
     2ac:	88 1f       	adc	r24, r24
     2ae:	99 1f       	adc	r25, r25
     2b0:	0a 94       	dec	r0
     2b2:	d2 f7       	brpl	.-12     	; 0x2a8 <__fixunssfdi+0xc0>
     2b4:	0e 94 b5 12 	call	0x256a	; 0x256a <__floatunsisf>
     2b8:	3b 01       	movw	r6, r22
     2ba:	4c 01       	movw	r8, r24
     2bc:	c8 01       	movw	r24, r16
     2be:	b7 01       	movw	r22, r14
     2c0:	a4 01       	movw	r20, r8
     2c2:	93 01       	movw	r18, r6
     2c4:	0e 94 01 12 	call	0x2402	; 0x2402 <__gesf2>
     2c8:	88 23       	and	r24, r24
     2ca:	64 f0       	brlt	.+24     	; 0x2e4 <__fixunssfdi+0xfc>
     2cc:	2a 28       	or	r2, r10
     2ce:	3b 28       	or	r3, r11
     2d0:	4c 28       	or	r4, r12
     2d2:	5d 28       	or	r5, r13
     2d4:	c8 01       	movw	r24, r16
     2d6:	b7 01       	movw	r22, r14
     2d8:	a4 01       	movw	r20, r8
     2da:	93 01       	movw	r18, r6
     2dc:	0e 94 25 11 	call	0x224a	; 0x224a <__divsf3>
     2e0:	7b 01       	movw	r14, r22
     2e2:	8c 01       	movw	r16, r24
     2e4:	d6 94       	lsr	r13
     2e6:	c7 94       	ror	r12
     2e8:	b7 94       	ror	r11
     2ea:	a7 94       	ror	r10
     2ec:	21 96       	adiw	r28, 0x01	; 1
     2ee:	c5 30       	cpi	r28, 0x05	; 5
     2f0:	d1 05       	cpc	r29, r1
     2f2:	a1 f6       	brne	.-88     	; 0x29c <__fixunssfdi+0xb4>
     2f4:	c8 01       	movw	r24, r16
     2f6:	b7 01       	movw	r22, r14
     2f8:	20 e0       	ldi	r18, 0x00	; 0
     2fa:	30 e0       	ldi	r19, 0x00	; 0
     2fc:	40 e8       	ldi	r20, 0x80	; 128
     2fe:	5f e4       	ldi	r21, 0x4F	; 79
     300:	0e 94 2b 10 	call	0x2056	; 0x2056 <__mulsf3>
     304:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
     308:	5b 01       	movw	r10, r22
     30a:	6c 01       	movw	r12, r24
     30c:	9b 01       	movw	r18, r22
     30e:	a6 01       	movw	r20, r12
     310:	60 e0       	ldi	r22, 0x00	; 0
     312:	70 e0       	ldi	r23, 0x00	; 0
     314:	80 e0       	ldi	r24, 0x00	; 0
     316:	90 e0       	ldi	r25, 0x00	; 0
     318:	02 2d       	mov	r16, r2
     31a:	0e 94 49 00 	call	0x92	; 0x92 <__ashldi3>
     31e:	59 01       	movw	r10, r18
     320:	6a 01       	movw	r12, r20
     322:	7b 01       	movw	r14, r22
     324:	8c 01       	movw	r16, r24
     326:	95 01       	movw	r18, r10
     328:	a6 01       	movw	r20, r12
     32a:	b7 01       	movw	r22, r14
     32c:	c8 01       	movw	r24, r16
     32e:	cd b7       	in	r28, 0x3d	; 61
     330:	de b7       	in	r29, 0x3e	; 62
     332:	e2 e1       	ldi	r30, 0x12	; 18
     334:	0c 94 ce 2d 	jmp	0x5b9c	; 0x5b9c <__epilogue_restores__>

00000338 <__udivdi3>:
     338:	ae e5       	ldi	r26, 0x5E	; 94
     33a:	b0 e0       	ldi	r27, 0x00	; 0
     33c:	e2 ea       	ldi	r30, 0xA2	; 162
     33e:	f1 e0       	ldi	r31, 0x01	; 1
     340:	0c 94 b2 2d 	jmp	0x5b64	; 0x5b64 <__prologue_saves__>
     344:	a8 e0       	ldi	r26, 0x08	; 8
     346:	4e 01       	movw	r8, r28
     348:	08 94       	sec
     34a:	81 1c       	adc	r8, r1
     34c:	91 1c       	adc	r9, r1
     34e:	f4 01       	movw	r30, r8
     350:	6a 2e       	mov	r6, r26
     352:	11 92       	st	Z+, r1
     354:	6a 94       	dec	r6
     356:	e9 f7       	brne	.-6      	; 0x352 <__udivdi3+0x1a>
     358:	29 83       	std	Y+1, r18	; 0x01
     35a:	3a 83       	std	Y+2, r19	; 0x02
     35c:	4b 83       	std	Y+3, r20	; 0x03
     35e:	5c 83       	std	Y+4, r21	; 0x04
     360:	6d 83       	std	Y+5, r22	; 0x05
     362:	7e 83       	std	Y+6, r23	; 0x06
     364:	8f 83       	std	Y+7, r24	; 0x07
     366:	98 87       	std	Y+8, r25	; 0x08
     368:	ce 01       	movw	r24, r28
     36a:	09 96       	adiw	r24, 0x09	; 9
     36c:	fc 01       	movw	r30, r24
     36e:	11 92       	st	Z+, r1
     370:	aa 95       	dec	r26
     372:	e9 f7       	brne	.-6      	; 0x36e <__udivdi3+0x36>
     374:	a9 86       	std	Y+9, r10	; 0x09
     376:	ba 86       	std	Y+10, r11	; 0x0a
     378:	cb 86       	std	Y+11, r12	; 0x0b
     37a:	dc 86       	std	Y+12, r13	; 0x0c
     37c:	ed 86       	std	Y+13, r14	; 0x0d
     37e:	fe 86       	std	Y+14, r15	; 0x0e
     380:	0f 87       	std	Y+15, r16	; 0x0f
     382:	18 8b       	std	Y+16, r17	; 0x10
     384:	29 84       	ldd	r2, Y+9	; 0x09
     386:	3a 84       	ldd	r3, Y+10	; 0x0a
     388:	4b 84       	ldd	r4, Y+11	; 0x0b
     38a:	5c 84       	ldd	r5, Y+12	; 0x0c
     38c:	ed 84       	ldd	r14, Y+13	; 0x0d
     38e:	fe 84       	ldd	r15, Y+14	; 0x0e
     390:	0f 85       	ldd	r16, Y+15	; 0x0f
     392:	18 89       	ldd	r17, Y+16	; 0x10
     394:	69 80       	ldd	r6, Y+1	; 0x01
     396:	7a 80       	ldd	r7, Y+2	; 0x02
     398:	8b 80       	ldd	r8, Y+3	; 0x03
     39a:	9c 80       	ldd	r9, Y+4	; 0x04
     39c:	6d a6       	std	Y+45, r6	; 0x2d
     39e:	7e a6       	std	Y+46, r7	; 0x2e
     3a0:	8f a6       	std	Y+47, r8	; 0x2f
     3a2:	98 aa       	std	Y+48, r9	; 0x30
     3a4:	6d 80       	ldd	r6, Y+5	; 0x05
     3a6:	7e 80       	ldd	r7, Y+6	; 0x06
     3a8:	8f 80       	ldd	r8, Y+7	; 0x07
     3aa:	98 84       	ldd	r9, Y+8	; 0x08
     3ac:	e1 14       	cp	r14, r1
     3ae:	f1 04       	cpc	r15, r1
     3b0:	01 05       	cpc	r16, r1
     3b2:	11 05       	cpc	r17, r1
     3b4:	09 f0       	breq	.+2      	; 0x3b8 <__udivdi3+0x80>
     3b6:	b3 c3       	rjmp	.+1894   	; 0xb1e <__stack+0x6bf>
     3b8:	62 14       	cp	r6, r2
     3ba:	73 04       	cpc	r7, r3
     3bc:	84 04       	cpc	r8, r4
     3be:	95 04       	cpc	r9, r5
     3c0:	08 f0       	brcs	.+2      	; 0x3c4 <__udivdi3+0x8c>
     3c2:	3d c1       	rjmp	.+634    	; 0x63e <__stack+0x1df>
     3c4:	00 e0       	ldi	r16, 0x00	; 0
     3c6:	20 16       	cp	r2, r16
     3c8:	00 e0       	ldi	r16, 0x00	; 0
     3ca:	30 06       	cpc	r3, r16
     3cc:	01 e0       	ldi	r16, 0x01	; 1
     3ce:	40 06       	cpc	r4, r16
     3d0:	00 e0       	ldi	r16, 0x00	; 0
     3d2:	50 06       	cpc	r5, r16
     3d4:	88 f4       	brcc	.+34     	; 0x3f8 <__udivdi3+0xc0>
     3d6:	1f ef       	ldi	r17, 0xFF	; 255
     3d8:	21 16       	cp	r2, r17
     3da:	31 04       	cpc	r3, r1
     3dc:	41 04       	cpc	r4, r1
     3de:	51 04       	cpc	r5, r1
     3e0:	39 f0       	breq	.+14     	; 0x3f0 <__udivdi3+0xb8>
     3e2:	30 f0       	brcs	.+12     	; 0x3f0 <__udivdi3+0xb8>
     3e4:	48 e0       	ldi	r20, 0x08	; 8
     3e6:	e4 2e       	mov	r14, r20
     3e8:	f1 2c       	mov	r15, r1
     3ea:	01 2d       	mov	r16, r1
     3ec:	11 2d       	mov	r17, r1
     3ee:	18 c0       	rjmp	.+48     	; 0x420 <__udivdi3+0xe8>
     3f0:	ee 24       	eor	r14, r14
     3f2:	ff 24       	eor	r15, r15
     3f4:	87 01       	movw	r16, r14
     3f6:	14 c0       	rjmp	.+40     	; 0x420 <__udivdi3+0xe8>
     3f8:	20 e0       	ldi	r18, 0x00	; 0
     3fa:	22 16       	cp	r2, r18
     3fc:	20 e0       	ldi	r18, 0x00	; 0
     3fe:	32 06       	cpc	r3, r18
     400:	20 e0       	ldi	r18, 0x00	; 0
     402:	42 06       	cpc	r4, r18
     404:	21 e0       	ldi	r18, 0x01	; 1
     406:	52 06       	cpc	r5, r18
     408:	30 f0       	brcs	.+12     	; 0x416 <__udivdi3+0xde>
     40a:	38 e1       	ldi	r19, 0x18	; 24
     40c:	e3 2e       	mov	r14, r19
     40e:	f1 2c       	mov	r15, r1
     410:	01 2d       	mov	r16, r1
     412:	11 2d       	mov	r17, r1
     414:	05 c0       	rjmp	.+10     	; 0x420 <__udivdi3+0xe8>
     416:	20 e1       	ldi	r18, 0x10	; 16
     418:	e2 2e       	mov	r14, r18
     41a:	f1 2c       	mov	r15, r1
     41c:	01 2d       	mov	r16, r1
     41e:	11 2d       	mov	r17, r1
     420:	d2 01       	movw	r26, r4
     422:	c1 01       	movw	r24, r2
     424:	0e 2c       	mov	r0, r14
     426:	04 c0       	rjmp	.+8      	; 0x430 <__udivdi3+0xf8>
     428:	b6 95       	lsr	r27
     42a:	a7 95       	ror	r26
     42c:	97 95       	ror	r25
     42e:	87 95       	ror	r24
     430:	0a 94       	dec	r0
     432:	d2 f7       	brpl	.-12     	; 0x428 <__udivdi3+0xf0>
     434:	83 58       	subi	r24, 0x83	; 131
     436:	9f 4f       	sbci	r25, 0xFF	; 255
     438:	dc 01       	movw	r26, r24
     43a:	2c 91       	ld	r18, X
     43c:	80 e2       	ldi	r24, 0x20	; 32
     43e:	90 e0       	ldi	r25, 0x00	; 0
     440:	a0 e0       	ldi	r26, 0x00	; 0
     442:	b0 e0       	ldi	r27, 0x00	; 0
     444:	8e 19       	sub	r24, r14
     446:	9f 09       	sbc	r25, r15
     448:	a0 0b       	sbc	r26, r16
     44a:	b1 0b       	sbc	r27, r17
     44c:	7c 01       	movw	r14, r24
     44e:	8d 01       	movw	r16, r26
     450:	e2 1a       	sub	r14, r18
     452:	f1 08       	sbc	r15, r1
     454:	01 09       	sbc	r16, r1
     456:	11 09       	sbc	r17, r1
     458:	e1 14       	cp	r14, r1
     45a:	f1 04       	cpc	r15, r1
     45c:	01 05       	cpc	r16, r1
     45e:	11 05       	cpc	r17, r1
     460:	a1 f1       	breq	.+104    	; 0x4ca <__stack+0x6b>
     462:	0e 2c       	mov	r0, r14
     464:	04 c0       	rjmp	.+8      	; 0x46e <__stack+0xf>
     466:	22 0c       	add	r2, r2
     468:	33 1c       	adc	r3, r3
     46a:	44 1c       	adc	r4, r4
     46c:	55 1c       	adc	r5, r5
     46e:	0a 94       	dec	r0
     470:	d2 f7       	brpl	.-12     	; 0x466 <__stack+0x7>
     472:	a4 01       	movw	r20, r8
     474:	93 01       	movw	r18, r6
     476:	0e 2c       	mov	r0, r14
     478:	04 c0       	rjmp	.+8      	; 0x482 <__stack+0x23>
     47a:	22 0f       	add	r18, r18
     47c:	33 1f       	adc	r19, r19
     47e:	44 1f       	adc	r20, r20
     480:	55 1f       	adc	r21, r21
     482:	0a 94       	dec	r0
     484:	d2 f7       	brpl	.-12     	; 0x47a <__stack+0x1b>
     486:	80 e2       	ldi	r24, 0x20	; 32
     488:	90 e0       	ldi	r25, 0x00	; 0
     48a:	8e 19       	sub	r24, r14
     48c:	9f 09       	sbc	r25, r15
     48e:	6d a4       	ldd	r6, Y+45	; 0x2d
     490:	7e a4       	ldd	r7, Y+46	; 0x2e
     492:	8f a4       	ldd	r8, Y+47	; 0x2f
     494:	98 a8       	ldd	r9, Y+48	; 0x30
     496:	04 c0       	rjmp	.+8      	; 0x4a0 <__stack+0x41>
     498:	96 94       	lsr	r9
     49a:	87 94       	ror	r8
     49c:	77 94       	ror	r7
     49e:	67 94       	ror	r6
     4a0:	8a 95       	dec	r24
     4a2:	d2 f7       	brpl	.-12     	; 0x498 <__stack+0x39>
     4a4:	62 2a       	or	r6, r18
     4a6:	73 2a       	or	r7, r19
     4a8:	84 2a       	or	r8, r20
     4aa:	95 2a       	or	r9, r21
     4ac:	ad a4       	ldd	r10, Y+45	; 0x2d
     4ae:	be a4       	ldd	r11, Y+46	; 0x2e
     4b0:	cf a4       	ldd	r12, Y+47	; 0x2f
     4b2:	d8 a8       	ldd	r13, Y+48	; 0x30
     4b4:	04 c0       	rjmp	.+8      	; 0x4be <__stack+0x5f>
     4b6:	aa 0c       	add	r10, r10
     4b8:	bb 1c       	adc	r11, r11
     4ba:	cc 1c       	adc	r12, r12
     4bc:	dd 1c       	adc	r13, r13
     4be:	ea 94       	dec	r14
     4c0:	d2 f7       	brpl	.-12     	; 0x4b6 <__stack+0x57>
     4c2:	ad a6       	std	Y+45, r10	; 0x2d
     4c4:	be a6       	std	Y+46, r11	; 0x2e
     4c6:	cf a6       	std	Y+47, r12	; 0x2f
     4c8:	d8 aa       	std	Y+48, r13	; 0x30
     4ca:	62 01       	movw	r12, r4
     4cc:	ee 24       	eor	r14, r14
     4ce:	ff 24       	eor	r15, r15
     4d0:	cd aa       	std	Y+53, r12	; 0x35
     4d2:	de aa       	std	Y+54, r13	; 0x36
     4d4:	ef aa       	std	Y+55, r14	; 0x37
     4d6:	f8 ae       	std	Y+56, r15	; 0x38
     4d8:	92 01       	movw	r18, r4
     4da:	81 01       	movw	r16, r2
     4dc:	20 70       	andi	r18, 0x00	; 0
     4de:	30 70       	andi	r19, 0x00	; 0
     4e0:	09 af       	std	Y+57, r16	; 0x39
     4e2:	1a af       	std	Y+58, r17	; 0x3a
     4e4:	2b af       	std	Y+59, r18	; 0x3b
     4e6:	3c af       	std	Y+60, r19	; 0x3c
     4e8:	c4 01       	movw	r24, r8
     4ea:	b3 01       	movw	r22, r6
     4ec:	a7 01       	movw	r20, r14
     4ee:	96 01       	movw	r18, r12
     4f0:	0e 94 90 2d 	call	0x5b20	; 0x5b20 <__udivmodsi4>
     4f4:	7b 01       	movw	r14, r22
     4f6:	8c 01       	movw	r16, r24
     4f8:	c4 01       	movw	r24, r8
     4fa:	b3 01       	movw	r22, r6
     4fc:	2d a9       	ldd	r18, Y+53	; 0x35
     4fe:	3e a9       	ldd	r19, Y+54	; 0x36
     500:	4f a9       	ldd	r20, Y+55	; 0x37
     502:	58 ad       	ldd	r21, Y+56	; 0x38
     504:	0e 94 90 2d 	call	0x5b20	; 0x5b20 <__udivmodsi4>
     508:	c9 01       	movw	r24, r18
     50a:	da 01       	movw	r26, r20
     50c:	3c 01       	movw	r6, r24
     50e:	4d 01       	movw	r8, r26
     510:	c4 01       	movw	r24, r8
     512:	b3 01       	movw	r22, r6
     514:	29 ad       	ldd	r18, Y+57	; 0x39
     516:	3a ad       	ldd	r19, Y+58	; 0x3a
     518:	4b ad       	ldd	r20, Y+59	; 0x3b
     51a:	5c ad       	ldd	r21, Y+60	; 0x3c
     51c:	0e 94 71 2d 	call	0x5ae2	; 0x5ae2 <__mulsi3>
     520:	9b 01       	movw	r18, r22
     522:	ac 01       	movw	r20, r24
     524:	87 01       	movw	r16, r14
     526:	ff 24       	eor	r15, r15
     528:	ee 24       	eor	r14, r14
     52a:	ad a4       	ldd	r10, Y+45	; 0x2d
     52c:	be a4       	ldd	r11, Y+46	; 0x2e
     52e:	cf a4       	ldd	r12, Y+47	; 0x2f
     530:	d8 a8       	ldd	r13, Y+48	; 0x30
     532:	c6 01       	movw	r24, r12
     534:	aa 27       	eor	r26, r26
     536:	bb 27       	eor	r27, r27
     538:	57 01       	movw	r10, r14
     53a:	68 01       	movw	r12, r16
     53c:	a8 2a       	or	r10, r24
     53e:	b9 2a       	or	r11, r25
     540:	ca 2a       	or	r12, r26
     542:	db 2a       	or	r13, r27
     544:	a2 16       	cp	r10, r18
     546:	b3 06       	cpc	r11, r19
     548:	c4 06       	cpc	r12, r20
     54a:	d5 06       	cpc	r13, r21
     54c:	e0 f4       	brcc	.+56     	; 0x586 <__stack+0x127>
     54e:	08 94       	sec
     550:	61 08       	sbc	r6, r1
     552:	71 08       	sbc	r7, r1
     554:	81 08       	sbc	r8, r1
     556:	91 08       	sbc	r9, r1
     558:	a2 0c       	add	r10, r2
     55a:	b3 1c       	adc	r11, r3
     55c:	c4 1c       	adc	r12, r4
     55e:	d5 1c       	adc	r13, r5
     560:	a2 14       	cp	r10, r2
     562:	b3 04       	cpc	r11, r3
     564:	c4 04       	cpc	r12, r4
     566:	d5 04       	cpc	r13, r5
     568:	70 f0       	brcs	.+28     	; 0x586 <__stack+0x127>
     56a:	a2 16       	cp	r10, r18
     56c:	b3 06       	cpc	r11, r19
     56e:	c4 06       	cpc	r12, r20
     570:	d5 06       	cpc	r13, r21
     572:	48 f4       	brcc	.+18     	; 0x586 <__stack+0x127>
     574:	08 94       	sec
     576:	61 08       	sbc	r6, r1
     578:	71 08       	sbc	r7, r1
     57a:	81 08       	sbc	r8, r1
     57c:	91 08       	sbc	r9, r1
     57e:	a2 0c       	add	r10, r2
     580:	b3 1c       	adc	r11, r3
     582:	c4 1c       	adc	r12, r4
     584:	d5 1c       	adc	r13, r5
     586:	a2 1a       	sub	r10, r18
     588:	b3 0a       	sbc	r11, r19
     58a:	c4 0a       	sbc	r12, r20
     58c:	d5 0a       	sbc	r13, r21
     58e:	c6 01       	movw	r24, r12
     590:	b5 01       	movw	r22, r10
     592:	2d a9       	ldd	r18, Y+53	; 0x35
     594:	3e a9       	ldd	r19, Y+54	; 0x36
     596:	4f a9       	ldd	r20, Y+55	; 0x37
     598:	58 ad       	ldd	r21, Y+56	; 0x38
     59a:	0e 94 90 2d 	call	0x5b20	; 0x5b20 <__udivmodsi4>
     59e:	7b 01       	movw	r14, r22
     5a0:	8c 01       	movw	r16, r24
     5a2:	c6 01       	movw	r24, r12
     5a4:	b5 01       	movw	r22, r10
     5a6:	2d a9       	ldd	r18, Y+53	; 0x35
     5a8:	3e a9       	ldd	r19, Y+54	; 0x36
     5aa:	4f a9       	ldd	r20, Y+55	; 0x37
     5ac:	58 ad       	ldd	r21, Y+56	; 0x38
     5ae:	0e 94 90 2d 	call	0x5b20	; 0x5b20 <__udivmodsi4>
     5b2:	c9 01       	movw	r24, r18
     5b4:	da 01       	movw	r26, r20
     5b6:	5c 01       	movw	r10, r24
     5b8:	6d 01       	movw	r12, r26
     5ba:	c6 01       	movw	r24, r12
     5bc:	b5 01       	movw	r22, r10
     5be:	29 ad       	ldd	r18, Y+57	; 0x39
     5c0:	3a ad       	ldd	r19, Y+58	; 0x3a
     5c2:	4b ad       	ldd	r20, Y+59	; 0x3b
     5c4:	5c ad       	ldd	r21, Y+60	; 0x3c
     5c6:	0e 94 71 2d 	call	0x5ae2	; 0x5ae2 <__mulsi3>
     5ca:	9b 01       	movw	r18, r22
     5cc:	ac 01       	movw	r20, r24
     5ce:	87 01       	movw	r16, r14
     5d0:	ff 24       	eor	r15, r15
     5d2:	ee 24       	eor	r14, r14
     5d4:	8d a5       	ldd	r24, Y+45	; 0x2d
     5d6:	9e a5       	ldd	r25, Y+46	; 0x2e
     5d8:	af a5       	ldd	r26, Y+47	; 0x2f
     5da:	b8 a9       	ldd	r27, Y+48	; 0x30
     5dc:	a0 70       	andi	r26, 0x00	; 0
     5de:	b0 70       	andi	r27, 0x00	; 0
     5e0:	e8 2a       	or	r14, r24
     5e2:	f9 2a       	or	r15, r25
     5e4:	0a 2b       	or	r16, r26
     5e6:	1b 2b       	or	r17, r27
     5e8:	e2 16       	cp	r14, r18
     5ea:	f3 06       	cpc	r15, r19
     5ec:	04 07       	cpc	r16, r20
     5ee:	15 07       	cpc	r17, r21
     5f0:	c0 f4       	brcc	.+48     	; 0x622 <__stack+0x1c3>
     5f2:	08 94       	sec
     5f4:	a1 08       	sbc	r10, r1
     5f6:	b1 08       	sbc	r11, r1
     5f8:	c1 08       	sbc	r12, r1
     5fa:	d1 08       	sbc	r13, r1
     5fc:	e2 0c       	add	r14, r2
     5fe:	f3 1c       	adc	r15, r3
     600:	04 1d       	adc	r16, r4
     602:	15 1d       	adc	r17, r5
     604:	e2 14       	cp	r14, r2
     606:	f3 04       	cpc	r15, r3
     608:	04 05       	cpc	r16, r4
     60a:	15 05       	cpc	r17, r5
     60c:	50 f0       	brcs	.+20     	; 0x622 <__stack+0x1c3>
     60e:	e2 16       	cp	r14, r18
     610:	f3 06       	cpc	r15, r19
     612:	04 07       	cpc	r16, r20
     614:	15 07       	cpc	r17, r21
     616:	28 f4       	brcc	.+10     	; 0x622 <__stack+0x1c3>
     618:	08 94       	sec
     61a:	a1 08       	sbc	r10, r1
     61c:	b1 08       	sbc	r11, r1
     61e:	c1 08       	sbc	r12, r1
     620:	d1 08       	sbc	r13, r1
     622:	d3 01       	movw	r26, r6
     624:	99 27       	eor	r25, r25
     626:	88 27       	eor	r24, r24
     628:	86 01       	movw	r16, r12
     62a:	75 01       	movw	r14, r10
     62c:	e8 2a       	or	r14, r24
     62e:	f9 2a       	or	r15, r25
     630:	0a 2b       	or	r16, r26
     632:	1b 2b       	or	r17, r27
     634:	e9 aa       	std	Y+49, r14	; 0x31
     636:	fa aa       	std	Y+50, r15	; 0x32
     638:	0b ab       	std	Y+51, r16	; 0x33
     63a:	1c ab       	std	Y+52, r17	; 0x34
     63c:	cf c4       	rjmp	.+2462   	; 0xfdc <__stack+0xb7d>
     63e:	21 14       	cp	r2, r1
     640:	31 04       	cpc	r3, r1
     642:	41 04       	cpc	r4, r1
     644:	51 04       	cpc	r5, r1
     646:	71 f4       	brne	.+28     	; 0x664 <__stack+0x205>
     648:	61 e0       	ldi	r22, 0x01	; 1
     64a:	70 e0       	ldi	r23, 0x00	; 0
     64c:	80 e0       	ldi	r24, 0x00	; 0
     64e:	90 e0       	ldi	r25, 0x00	; 0
     650:	20 e0       	ldi	r18, 0x00	; 0
     652:	30 e0       	ldi	r19, 0x00	; 0
     654:	40 e0       	ldi	r20, 0x00	; 0
     656:	50 e0       	ldi	r21, 0x00	; 0
     658:	0e 94 90 2d 	call	0x5b20	; 0x5b20 <__udivmodsi4>
     65c:	c9 01       	movw	r24, r18
     65e:	da 01       	movw	r26, r20
     660:	1c 01       	movw	r2, r24
     662:	2d 01       	movw	r4, r26
     664:	00 e0       	ldi	r16, 0x00	; 0
     666:	20 16       	cp	r2, r16
     668:	00 e0       	ldi	r16, 0x00	; 0
     66a:	30 06       	cpc	r3, r16
     66c:	01 e0       	ldi	r16, 0x01	; 1
     66e:	40 06       	cpc	r4, r16
     670:	00 e0       	ldi	r16, 0x00	; 0
     672:	50 06       	cpc	r5, r16
     674:	88 f4       	brcc	.+34     	; 0x698 <__stack+0x239>
     676:	1f ef       	ldi	r17, 0xFF	; 255
     678:	21 16       	cp	r2, r17
     67a:	31 04       	cpc	r3, r1
     67c:	41 04       	cpc	r4, r1
     67e:	51 04       	cpc	r5, r1
     680:	31 f0       	breq	.+12     	; 0x68e <__stack+0x22f>
     682:	28 f0       	brcs	.+10     	; 0x68e <__stack+0x22f>
     684:	48 e0       	ldi	r20, 0x08	; 8
     686:	50 e0       	ldi	r21, 0x00	; 0
     688:	60 e0       	ldi	r22, 0x00	; 0
     68a:	70 e0       	ldi	r23, 0x00	; 0
     68c:	17 c0       	rjmp	.+46     	; 0x6bc <__stack+0x25d>
     68e:	40 e0       	ldi	r20, 0x00	; 0
     690:	50 e0       	ldi	r21, 0x00	; 0
     692:	60 e0       	ldi	r22, 0x00	; 0
     694:	70 e0       	ldi	r23, 0x00	; 0
     696:	12 c0       	rjmp	.+36     	; 0x6bc <__stack+0x25d>
     698:	20 e0       	ldi	r18, 0x00	; 0
     69a:	22 16       	cp	r2, r18
     69c:	20 e0       	ldi	r18, 0x00	; 0
     69e:	32 06       	cpc	r3, r18
     6a0:	20 e0       	ldi	r18, 0x00	; 0
     6a2:	42 06       	cpc	r4, r18
     6a4:	21 e0       	ldi	r18, 0x01	; 1
     6a6:	52 06       	cpc	r5, r18
     6a8:	28 f0       	brcs	.+10     	; 0x6b4 <__stack+0x255>
     6aa:	48 e1       	ldi	r20, 0x18	; 24
     6ac:	50 e0       	ldi	r21, 0x00	; 0
     6ae:	60 e0       	ldi	r22, 0x00	; 0
     6b0:	70 e0       	ldi	r23, 0x00	; 0
     6b2:	04 c0       	rjmp	.+8      	; 0x6bc <__stack+0x25d>
     6b4:	40 e1       	ldi	r20, 0x10	; 16
     6b6:	50 e0       	ldi	r21, 0x00	; 0
     6b8:	60 e0       	ldi	r22, 0x00	; 0
     6ba:	70 e0       	ldi	r23, 0x00	; 0
     6bc:	d2 01       	movw	r26, r4
     6be:	c1 01       	movw	r24, r2
     6c0:	04 2e       	mov	r0, r20
     6c2:	04 c0       	rjmp	.+8      	; 0x6cc <__stack+0x26d>
     6c4:	b6 95       	lsr	r27
     6c6:	a7 95       	ror	r26
     6c8:	97 95       	ror	r25
     6ca:	87 95       	ror	r24
     6cc:	0a 94       	dec	r0
     6ce:	d2 f7       	brpl	.-12     	; 0x6c4 <__stack+0x265>
     6d0:	83 58       	subi	r24, 0x83	; 131
     6d2:	9f 4f       	sbci	r25, 0xFF	; 255
     6d4:	dc 01       	movw	r26, r24
     6d6:	2c 91       	ld	r18, X
     6d8:	e0 e2       	ldi	r30, 0x20	; 32
     6da:	ee 2e       	mov	r14, r30
     6dc:	f1 2c       	mov	r15, r1
     6de:	01 2d       	mov	r16, r1
     6e0:	11 2d       	mov	r17, r1
     6e2:	d8 01       	movw	r26, r16
     6e4:	c7 01       	movw	r24, r14
     6e6:	84 1b       	sub	r24, r20
     6e8:	95 0b       	sbc	r25, r21
     6ea:	a6 0b       	sbc	r26, r22
     6ec:	b7 0b       	sbc	r27, r23
     6ee:	82 1b       	sub	r24, r18
     6f0:	91 09       	sbc	r25, r1
     6f2:	a1 09       	sbc	r26, r1
     6f4:	b1 09       	sbc	r27, r1
     6f6:	00 97       	sbiw	r24, 0x00	; 0
     6f8:	a1 05       	cpc	r26, r1
     6fa:	b1 05       	cpc	r27, r1
     6fc:	61 f4       	brne	.+24     	; 0x716 <__stack+0x2b7>
     6fe:	64 01       	movw	r12, r8
     700:	53 01       	movw	r10, r6
     702:	a2 18       	sub	r10, r2
     704:	b3 08       	sbc	r11, r3
     706:	c4 08       	sbc	r12, r4
     708:	d5 08       	sbc	r13, r5
     70a:	31 e0       	ldi	r19, 0x01	; 1
     70c:	63 2e       	mov	r6, r19
     70e:	71 2c       	mov	r7, r1
     710:	81 2c       	mov	r8, r1
     712:	91 2c       	mov	r9, r1
     714:	1e c1       	rjmp	.+572    	; 0x952 <__stack+0x4f3>
     716:	6f 96       	adiw	r28, 0x1f	; 31
     718:	8f af       	std	Y+63, r24	; 0x3f
     71a:	6f 97       	sbiw	r28, 0x1f	; 31
     71c:	08 2e       	mov	r0, r24
     71e:	04 c0       	rjmp	.+8      	; 0x728 <__stack+0x2c9>
     720:	22 0c       	add	r2, r2
     722:	33 1c       	adc	r3, r3
     724:	44 1c       	adc	r4, r4
     726:	55 1c       	adc	r5, r5
     728:	0a 94       	dec	r0
     72a:	d2 f7       	brpl	.-12     	; 0x720 <__stack+0x2c1>
     72c:	ee 2d       	mov	r30, r14
     72e:	e8 1b       	sub	r30, r24
     730:	64 01       	movw	r12, r8
     732:	53 01       	movw	r10, r6
     734:	0e 2e       	mov	r0, r30
     736:	04 c0       	rjmp	.+8      	; 0x740 <__stack+0x2e1>
     738:	d6 94       	lsr	r13
     73a:	c7 94       	ror	r12
     73c:	b7 94       	ror	r11
     73e:	a7 94       	ror	r10
     740:	0a 94       	dec	r0
     742:	d2 f7       	brpl	.-12     	; 0x738 <__stack+0x2d9>
     744:	a4 01       	movw	r20, r8
     746:	93 01       	movw	r18, r6
     748:	6f 96       	adiw	r28, 0x1f	; 31
     74a:	0f ac       	ldd	r0, Y+63	; 0x3f
     74c:	6f 97       	sbiw	r28, 0x1f	; 31
     74e:	04 c0       	rjmp	.+8      	; 0x758 <__stack+0x2f9>
     750:	22 0f       	add	r18, r18
     752:	33 1f       	adc	r19, r19
     754:	44 1f       	adc	r20, r20
     756:	55 1f       	adc	r21, r21
     758:	0a 94       	dec	r0
     75a:	d2 f7       	brpl	.-12     	; 0x750 <__stack+0x2f1>
     75c:	6d a4       	ldd	r6, Y+45	; 0x2d
     75e:	7e a4       	ldd	r7, Y+46	; 0x2e
     760:	8f a4       	ldd	r8, Y+47	; 0x2f
     762:	98 a8       	ldd	r9, Y+48	; 0x30
     764:	0e 2e       	mov	r0, r30
     766:	04 c0       	rjmp	.+8      	; 0x770 <__stack+0x311>
     768:	96 94       	lsr	r9
     76a:	87 94       	ror	r8
     76c:	77 94       	ror	r7
     76e:	67 94       	ror	r6
     770:	0a 94       	dec	r0
     772:	d2 f7       	brpl	.-12     	; 0x768 <__stack+0x309>
     774:	84 01       	movw	r16, r8
     776:	73 01       	movw	r14, r6
     778:	e2 2a       	or	r14, r18
     77a:	f3 2a       	or	r15, r19
     77c:	04 2b       	or	r16, r20
     77e:	15 2b       	or	r17, r21
     780:	e9 a6       	std	Y+41, r14	; 0x29
     782:	fa a6       	std	Y+42, r15	; 0x2a
     784:	0b a7       	std	Y+43, r16	; 0x2b
     786:	1c a7       	std	Y+44, r17	; 0x2c
     788:	32 01       	movw	r6, r4
     78a:	88 24       	eor	r8, r8
     78c:	99 24       	eor	r9, r9
     78e:	92 01       	movw	r18, r4
     790:	81 01       	movw	r16, r2
     792:	20 70       	andi	r18, 0x00	; 0
     794:	30 70       	andi	r19, 0x00	; 0
     796:	21 96       	adiw	r28, 0x01	; 1
     798:	0c af       	std	Y+60, r16	; 0x3c
     79a:	1d af       	std	Y+61, r17	; 0x3d
     79c:	2e af       	std	Y+62, r18	; 0x3e
     79e:	3f af       	std	Y+63, r19	; 0x3f
     7a0:	21 97       	sbiw	r28, 0x01	; 1
     7a2:	c6 01       	movw	r24, r12
     7a4:	b5 01       	movw	r22, r10
     7a6:	a4 01       	movw	r20, r8
     7a8:	93 01       	movw	r18, r6
     7aa:	0e 94 90 2d 	call	0x5b20	; 0x5b20 <__udivmodsi4>
     7ae:	7b 01       	movw	r14, r22
     7b0:	8c 01       	movw	r16, r24
     7b2:	c6 01       	movw	r24, r12
     7b4:	b5 01       	movw	r22, r10
     7b6:	a4 01       	movw	r20, r8
     7b8:	93 01       	movw	r18, r6
     7ba:	0e 94 90 2d 	call	0x5b20	; 0x5b20 <__udivmodsi4>
     7be:	c9 01       	movw	r24, r18
     7c0:	da 01       	movw	r26, r20
     7c2:	25 96       	adiw	r28, 0x05	; 5
     7c4:	8c af       	std	Y+60, r24	; 0x3c
     7c6:	9d af       	std	Y+61, r25	; 0x3d
     7c8:	ae af       	std	Y+62, r26	; 0x3e
     7ca:	bf af       	std	Y+63, r27	; 0x3f
     7cc:	25 97       	sbiw	r28, 0x05	; 5
     7ce:	bc 01       	movw	r22, r24
     7d0:	cd 01       	movw	r24, r26
     7d2:	21 96       	adiw	r28, 0x01	; 1
     7d4:	2c ad       	ldd	r18, Y+60	; 0x3c
     7d6:	3d ad       	ldd	r19, Y+61	; 0x3d
     7d8:	4e ad       	ldd	r20, Y+62	; 0x3e
     7da:	5f ad       	ldd	r21, Y+63	; 0x3f
     7dc:	21 97       	sbiw	r28, 0x01	; 1
     7de:	0e 94 71 2d 	call	0x5ae2	; 0x5ae2 <__mulsi3>
     7e2:	9b 01       	movw	r18, r22
     7e4:	ac 01       	movw	r20, r24
     7e6:	87 01       	movw	r16, r14
     7e8:	ff 24       	eor	r15, r15
     7ea:	ee 24       	eor	r14, r14
     7ec:	a9 a4       	ldd	r10, Y+41	; 0x29
     7ee:	ba a4       	ldd	r11, Y+42	; 0x2a
     7f0:	cb a4       	ldd	r12, Y+43	; 0x2b
     7f2:	dc a4       	ldd	r13, Y+44	; 0x2c
     7f4:	c6 01       	movw	r24, r12
     7f6:	aa 27       	eor	r26, r26
     7f8:	bb 27       	eor	r27, r27
     7fa:	5c 01       	movw	r10, r24
     7fc:	6d 01       	movw	r12, r26
     7fe:	ae 28       	or	r10, r14
     800:	bf 28       	or	r11, r15
     802:	c0 2a       	or	r12, r16
     804:	d1 2a       	or	r13, r17
     806:	a2 16       	cp	r10, r18
     808:	b3 06       	cpc	r11, r19
     80a:	c4 06       	cpc	r12, r20
     80c:	d5 06       	cpc	r13, r21
     80e:	60 f5       	brcc	.+88     	; 0x868 <__stack+0x409>
     810:	25 96       	adiw	r28, 0x05	; 5
     812:	6c ad       	ldd	r22, Y+60	; 0x3c
     814:	7d ad       	ldd	r23, Y+61	; 0x3d
     816:	8e ad       	ldd	r24, Y+62	; 0x3e
     818:	9f ad       	ldd	r25, Y+63	; 0x3f
     81a:	25 97       	sbiw	r28, 0x05	; 5
     81c:	61 50       	subi	r22, 0x01	; 1
     81e:	70 40       	sbci	r23, 0x00	; 0
     820:	80 40       	sbci	r24, 0x00	; 0
     822:	90 40       	sbci	r25, 0x00	; 0
     824:	25 96       	adiw	r28, 0x05	; 5
     826:	6c af       	std	Y+60, r22	; 0x3c
     828:	7d af       	std	Y+61, r23	; 0x3d
     82a:	8e af       	std	Y+62, r24	; 0x3e
     82c:	9f af       	std	Y+63, r25	; 0x3f
     82e:	25 97       	sbiw	r28, 0x05	; 5
     830:	a2 0c       	add	r10, r2
     832:	b3 1c       	adc	r11, r3
     834:	c4 1c       	adc	r12, r4
     836:	d5 1c       	adc	r13, r5
     838:	a2 14       	cp	r10, r2
     83a:	b3 04       	cpc	r11, r3
     83c:	c4 04       	cpc	r12, r4
     83e:	d5 04       	cpc	r13, r5
     840:	98 f0       	brcs	.+38     	; 0x868 <__stack+0x409>
     842:	a2 16       	cp	r10, r18
     844:	b3 06       	cpc	r11, r19
     846:	c4 06       	cpc	r12, r20
     848:	d5 06       	cpc	r13, r21
     84a:	70 f4       	brcc	.+28     	; 0x868 <__stack+0x409>
     84c:	61 50       	subi	r22, 0x01	; 1
     84e:	70 40       	sbci	r23, 0x00	; 0
     850:	80 40       	sbci	r24, 0x00	; 0
     852:	90 40       	sbci	r25, 0x00	; 0
     854:	25 96       	adiw	r28, 0x05	; 5
     856:	6c af       	std	Y+60, r22	; 0x3c
     858:	7d af       	std	Y+61, r23	; 0x3d
     85a:	8e af       	std	Y+62, r24	; 0x3e
     85c:	9f af       	std	Y+63, r25	; 0x3f
     85e:	25 97       	sbiw	r28, 0x05	; 5
     860:	a2 0c       	add	r10, r2
     862:	b3 1c       	adc	r11, r3
     864:	c4 1c       	adc	r12, r4
     866:	d5 1c       	adc	r13, r5
     868:	a2 1a       	sub	r10, r18
     86a:	b3 0a       	sbc	r11, r19
     86c:	c4 0a       	sbc	r12, r20
     86e:	d5 0a       	sbc	r13, r21
     870:	c6 01       	movw	r24, r12
     872:	b5 01       	movw	r22, r10
     874:	a4 01       	movw	r20, r8
     876:	93 01       	movw	r18, r6
     878:	0e 94 90 2d 	call	0x5b20	; 0x5b20 <__udivmodsi4>
     87c:	7b 01       	movw	r14, r22
     87e:	8c 01       	movw	r16, r24
     880:	c6 01       	movw	r24, r12
     882:	b5 01       	movw	r22, r10
     884:	a4 01       	movw	r20, r8
     886:	93 01       	movw	r18, r6
     888:	0e 94 90 2d 	call	0x5b20	; 0x5b20 <__udivmodsi4>
     88c:	c9 01       	movw	r24, r18
     88e:	da 01       	movw	r26, r20
     890:	3c 01       	movw	r6, r24
     892:	4d 01       	movw	r8, r26
     894:	c4 01       	movw	r24, r8
     896:	b3 01       	movw	r22, r6
     898:	21 96       	adiw	r28, 0x01	; 1
     89a:	2c ad       	ldd	r18, Y+60	; 0x3c
     89c:	3d ad       	ldd	r19, Y+61	; 0x3d
     89e:	4e ad       	ldd	r20, Y+62	; 0x3e
     8a0:	5f ad       	ldd	r21, Y+63	; 0x3f
     8a2:	21 97       	sbiw	r28, 0x01	; 1
     8a4:	0e 94 71 2d 	call	0x5ae2	; 0x5ae2 <__mulsi3>
     8a8:	9b 01       	movw	r18, r22
     8aa:	ac 01       	movw	r20, r24
     8ac:	87 01       	movw	r16, r14
     8ae:	ff 24       	eor	r15, r15
     8b0:	ee 24       	eor	r14, r14
     8b2:	89 a5       	ldd	r24, Y+41	; 0x29
     8b4:	9a a5       	ldd	r25, Y+42	; 0x2a
     8b6:	ab a5       	ldd	r26, Y+43	; 0x2b
     8b8:	bc a5       	ldd	r27, Y+44	; 0x2c
     8ba:	a0 70       	andi	r26, 0x00	; 0
     8bc:	b0 70       	andi	r27, 0x00	; 0
     8be:	57 01       	movw	r10, r14
     8c0:	68 01       	movw	r12, r16
     8c2:	a8 2a       	or	r10, r24
     8c4:	b9 2a       	or	r11, r25
     8c6:	ca 2a       	or	r12, r26
     8c8:	db 2a       	or	r13, r27
     8ca:	a2 16       	cp	r10, r18
     8cc:	b3 06       	cpc	r11, r19
     8ce:	c4 06       	cpc	r12, r20
     8d0:	d5 06       	cpc	r13, r21
     8d2:	e0 f4       	brcc	.+56     	; 0x90c <__stack+0x4ad>
     8d4:	08 94       	sec
     8d6:	61 08       	sbc	r6, r1
     8d8:	71 08       	sbc	r7, r1
     8da:	81 08       	sbc	r8, r1
     8dc:	91 08       	sbc	r9, r1
     8de:	a2 0c       	add	r10, r2
     8e0:	b3 1c       	adc	r11, r3
     8e2:	c4 1c       	adc	r12, r4
     8e4:	d5 1c       	adc	r13, r5
     8e6:	a2 14       	cp	r10, r2
     8e8:	b3 04       	cpc	r11, r3
     8ea:	c4 04       	cpc	r12, r4
     8ec:	d5 04       	cpc	r13, r5
     8ee:	70 f0       	brcs	.+28     	; 0x90c <__stack+0x4ad>
     8f0:	a2 16       	cp	r10, r18
     8f2:	b3 06       	cpc	r11, r19
     8f4:	c4 06       	cpc	r12, r20
     8f6:	d5 06       	cpc	r13, r21
     8f8:	48 f4       	brcc	.+18     	; 0x90c <__stack+0x4ad>
     8fa:	08 94       	sec
     8fc:	61 08       	sbc	r6, r1
     8fe:	71 08       	sbc	r7, r1
     900:	81 08       	sbc	r8, r1
     902:	91 08       	sbc	r9, r1
     904:	a2 0c       	add	r10, r2
     906:	b3 1c       	adc	r11, r3
     908:	c4 1c       	adc	r12, r4
     90a:	d5 1c       	adc	r13, r5
     90c:	8d a5       	ldd	r24, Y+45	; 0x2d
     90e:	9e a5       	ldd	r25, Y+46	; 0x2e
     910:	af a5       	ldd	r26, Y+47	; 0x2f
     912:	b8 a9       	ldd	r27, Y+48	; 0x30
     914:	6f 96       	adiw	r28, 0x1f	; 31
     916:	0f ac       	ldd	r0, Y+63	; 0x3f
     918:	6f 97       	sbiw	r28, 0x1f	; 31
     91a:	04 c0       	rjmp	.+8      	; 0x924 <__stack+0x4c5>
     91c:	88 0f       	add	r24, r24
     91e:	99 1f       	adc	r25, r25
     920:	aa 1f       	adc	r26, r26
     922:	bb 1f       	adc	r27, r27
     924:	0a 94       	dec	r0
     926:	d2 f7       	brpl	.-12     	; 0x91c <__stack+0x4bd>
     928:	8d a7       	std	Y+45, r24	; 0x2d
     92a:	9e a7       	std	Y+46, r25	; 0x2e
     92c:	af a7       	std	Y+47, r26	; 0x2f
     92e:	b8 ab       	std	Y+48, r27	; 0x30
     930:	a2 1a       	sub	r10, r18
     932:	b3 0a       	sbc	r11, r19
     934:	c4 0a       	sbc	r12, r20
     936:	d5 0a       	sbc	r13, r21
     938:	25 96       	adiw	r28, 0x05	; 5
     93a:	ec ac       	ldd	r14, Y+60	; 0x3c
     93c:	fd ac       	ldd	r15, Y+61	; 0x3d
     93e:	0e ad       	ldd	r16, Y+62	; 0x3e
     940:	1f ad       	ldd	r17, Y+63	; 0x3f
     942:	25 97       	sbiw	r28, 0x05	; 5
     944:	d7 01       	movw	r26, r14
     946:	99 27       	eor	r25, r25
     948:	88 27       	eor	r24, r24
     94a:	68 2a       	or	r6, r24
     94c:	79 2a       	or	r7, r25
     94e:	8a 2a       	or	r8, r26
     950:	9b 2a       	or	r9, r27
     952:	82 01       	movw	r16, r4
     954:	22 27       	eor	r18, r18
     956:	33 27       	eor	r19, r19
     958:	29 96       	adiw	r28, 0x09	; 9
     95a:	0c af       	std	Y+60, r16	; 0x3c
     95c:	1d af       	std	Y+61, r17	; 0x3d
     95e:	2e af       	std	Y+62, r18	; 0x3e
     960:	3f af       	std	Y+63, r19	; 0x3f
     962:	29 97       	sbiw	r28, 0x09	; 9
     964:	a2 01       	movw	r20, r4
     966:	91 01       	movw	r18, r2
     968:	40 70       	andi	r20, 0x00	; 0
     96a:	50 70       	andi	r21, 0x00	; 0
     96c:	2d 96       	adiw	r28, 0x0d	; 13
     96e:	2c af       	std	Y+60, r18	; 0x3c
     970:	3d af       	std	Y+61, r19	; 0x3d
     972:	4e af       	std	Y+62, r20	; 0x3e
     974:	5f af       	std	Y+63, r21	; 0x3f
     976:	2d 97       	sbiw	r28, 0x0d	; 13
     978:	c6 01       	movw	r24, r12
     97a:	b5 01       	movw	r22, r10
     97c:	29 96       	adiw	r28, 0x09	; 9
     97e:	2c ad       	ldd	r18, Y+60	; 0x3c
     980:	3d ad       	ldd	r19, Y+61	; 0x3d
     982:	4e ad       	ldd	r20, Y+62	; 0x3e
     984:	5f ad       	ldd	r21, Y+63	; 0x3f
     986:	29 97       	sbiw	r28, 0x09	; 9
     988:	0e 94 90 2d 	call	0x5b20	; 0x5b20 <__udivmodsi4>
     98c:	7b 01       	movw	r14, r22
     98e:	8c 01       	movw	r16, r24
     990:	c6 01       	movw	r24, r12
     992:	b5 01       	movw	r22, r10
     994:	29 96       	adiw	r28, 0x09	; 9
     996:	2c ad       	ldd	r18, Y+60	; 0x3c
     998:	3d ad       	ldd	r19, Y+61	; 0x3d
     99a:	4e ad       	ldd	r20, Y+62	; 0x3e
     99c:	5f ad       	ldd	r21, Y+63	; 0x3f
     99e:	29 97       	sbiw	r28, 0x09	; 9
     9a0:	0e 94 90 2d 	call	0x5b20	; 0x5b20 <__udivmodsi4>
     9a4:	c9 01       	movw	r24, r18
     9a6:	da 01       	movw	r26, r20
     9a8:	61 96       	adiw	r28, 0x11	; 17
     9aa:	8c af       	std	Y+60, r24	; 0x3c
     9ac:	9d af       	std	Y+61, r25	; 0x3d
     9ae:	ae af       	std	Y+62, r26	; 0x3e
     9b0:	bf af       	std	Y+63, r27	; 0x3f
     9b2:	61 97       	sbiw	r28, 0x11	; 17
     9b4:	bc 01       	movw	r22, r24
     9b6:	cd 01       	movw	r24, r26
     9b8:	2d 96       	adiw	r28, 0x0d	; 13
     9ba:	2c ad       	ldd	r18, Y+60	; 0x3c
     9bc:	3d ad       	ldd	r19, Y+61	; 0x3d
     9be:	4e ad       	ldd	r20, Y+62	; 0x3e
     9c0:	5f ad       	ldd	r21, Y+63	; 0x3f
     9c2:	2d 97       	sbiw	r28, 0x0d	; 13
     9c4:	0e 94 71 2d 	call	0x5ae2	; 0x5ae2 <__mulsi3>
     9c8:	9b 01       	movw	r18, r22
     9ca:	ac 01       	movw	r20, r24
     9cc:	87 01       	movw	r16, r14
     9ce:	ff 24       	eor	r15, r15
     9d0:	ee 24       	eor	r14, r14
     9d2:	ad a4       	ldd	r10, Y+45	; 0x2d
     9d4:	be a4       	ldd	r11, Y+46	; 0x2e
     9d6:	cf a4       	ldd	r12, Y+47	; 0x2f
     9d8:	d8 a8       	ldd	r13, Y+48	; 0x30
     9da:	c6 01       	movw	r24, r12
     9dc:	aa 27       	eor	r26, r26
     9de:	bb 27       	eor	r27, r27
     9e0:	57 01       	movw	r10, r14
     9e2:	68 01       	movw	r12, r16
     9e4:	a8 2a       	or	r10, r24
     9e6:	b9 2a       	or	r11, r25
     9e8:	ca 2a       	or	r12, r26
     9ea:	db 2a       	or	r13, r27
     9ec:	a2 16       	cp	r10, r18
     9ee:	b3 06       	cpc	r11, r19
     9f0:	c4 06       	cpc	r12, r20
     9f2:	d5 06       	cpc	r13, r21
     9f4:	60 f5       	brcc	.+88     	; 0xa4e <__stack+0x5ef>
     9f6:	61 96       	adiw	r28, 0x11	; 17
     9f8:	6c ad       	ldd	r22, Y+60	; 0x3c
     9fa:	7d ad       	ldd	r23, Y+61	; 0x3d
     9fc:	8e ad       	ldd	r24, Y+62	; 0x3e
     9fe:	9f ad       	ldd	r25, Y+63	; 0x3f
     a00:	61 97       	sbiw	r28, 0x11	; 17
     a02:	61 50       	subi	r22, 0x01	; 1
     a04:	70 40       	sbci	r23, 0x00	; 0
     a06:	80 40       	sbci	r24, 0x00	; 0
     a08:	90 40       	sbci	r25, 0x00	; 0
     a0a:	61 96       	adiw	r28, 0x11	; 17
     a0c:	6c af       	std	Y+60, r22	; 0x3c
     a0e:	7d af       	std	Y+61, r23	; 0x3d
     a10:	8e af       	std	Y+62, r24	; 0x3e
     a12:	9f af       	std	Y+63, r25	; 0x3f
     a14:	61 97       	sbiw	r28, 0x11	; 17
     a16:	a2 0c       	add	r10, r2
     a18:	b3 1c       	adc	r11, r3
     a1a:	c4 1c       	adc	r12, r4
     a1c:	d5 1c       	adc	r13, r5
     a1e:	a2 14       	cp	r10, r2
     a20:	b3 04       	cpc	r11, r3
     a22:	c4 04       	cpc	r12, r4
     a24:	d5 04       	cpc	r13, r5
     a26:	98 f0       	brcs	.+38     	; 0xa4e <__stack+0x5ef>
     a28:	a2 16       	cp	r10, r18
     a2a:	b3 06       	cpc	r11, r19
     a2c:	c4 06       	cpc	r12, r20
     a2e:	d5 06       	cpc	r13, r21
     a30:	70 f4       	brcc	.+28     	; 0xa4e <__stack+0x5ef>
     a32:	61 50       	subi	r22, 0x01	; 1
     a34:	70 40       	sbci	r23, 0x00	; 0
     a36:	80 40       	sbci	r24, 0x00	; 0
     a38:	90 40       	sbci	r25, 0x00	; 0
     a3a:	61 96       	adiw	r28, 0x11	; 17
     a3c:	6c af       	std	Y+60, r22	; 0x3c
     a3e:	7d af       	std	Y+61, r23	; 0x3d
     a40:	8e af       	std	Y+62, r24	; 0x3e
     a42:	9f af       	std	Y+63, r25	; 0x3f
     a44:	61 97       	sbiw	r28, 0x11	; 17
     a46:	a2 0c       	add	r10, r2
     a48:	b3 1c       	adc	r11, r3
     a4a:	c4 1c       	adc	r12, r4
     a4c:	d5 1c       	adc	r13, r5
     a4e:	a2 1a       	sub	r10, r18
     a50:	b3 0a       	sbc	r11, r19
     a52:	c4 0a       	sbc	r12, r20
     a54:	d5 0a       	sbc	r13, r21
     a56:	c6 01       	movw	r24, r12
     a58:	b5 01       	movw	r22, r10
     a5a:	29 96       	adiw	r28, 0x09	; 9
     a5c:	2c ad       	ldd	r18, Y+60	; 0x3c
     a5e:	3d ad       	ldd	r19, Y+61	; 0x3d
     a60:	4e ad       	ldd	r20, Y+62	; 0x3e
     a62:	5f ad       	ldd	r21, Y+63	; 0x3f
     a64:	29 97       	sbiw	r28, 0x09	; 9
     a66:	0e 94 90 2d 	call	0x5b20	; 0x5b20 <__udivmodsi4>
     a6a:	7b 01       	movw	r14, r22
     a6c:	8c 01       	movw	r16, r24
     a6e:	c6 01       	movw	r24, r12
     a70:	b5 01       	movw	r22, r10
     a72:	29 96       	adiw	r28, 0x09	; 9
     a74:	2c ad       	ldd	r18, Y+60	; 0x3c
     a76:	3d ad       	ldd	r19, Y+61	; 0x3d
     a78:	4e ad       	ldd	r20, Y+62	; 0x3e
     a7a:	5f ad       	ldd	r21, Y+63	; 0x3f
     a7c:	29 97       	sbiw	r28, 0x09	; 9
     a7e:	0e 94 90 2d 	call	0x5b20	; 0x5b20 <__udivmodsi4>
     a82:	c9 01       	movw	r24, r18
     a84:	da 01       	movw	r26, r20
     a86:	5c 01       	movw	r10, r24
     a88:	6d 01       	movw	r12, r26
     a8a:	c6 01       	movw	r24, r12
     a8c:	b5 01       	movw	r22, r10
     a8e:	2d 96       	adiw	r28, 0x0d	; 13
     a90:	2c ad       	ldd	r18, Y+60	; 0x3c
     a92:	3d ad       	ldd	r19, Y+61	; 0x3d
     a94:	4e ad       	ldd	r20, Y+62	; 0x3e
     a96:	5f ad       	ldd	r21, Y+63	; 0x3f
     a98:	2d 97       	sbiw	r28, 0x0d	; 13
     a9a:	0e 94 71 2d 	call	0x5ae2	; 0x5ae2 <__mulsi3>
     a9e:	9b 01       	movw	r18, r22
     aa0:	ac 01       	movw	r20, r24
     aa2:	87 01       	movw	r16, r14
     aa4:	ff 24       	eor	r15, r15
     aa6:	ee 24       	eor	r14, r14
     aa8:	8d a5       	ldd	r24, Y+45	; 0x2d
     aaa:	9e a5       	ldd	r25, Y+46	; 0x2e
     aac:	af a5       	ldd	r26, Y+47	; 0x2f
     aae:	b8 a9       	ldd	r27, Y+48	; 0x30
     ab0:	a0 70       	andi	r26, 0x00	; 0
     ab2:	b0 70       	andi	r27, 0x00	; 0
     ab4:	e8 2a       	or	r14, r24
     ab6:	f9 2a       	or	r15, r25
     ab8:	0a 2b       	or	r16, r26
     aba:	1b 2b       	or	r17, r27
     abc:	e2 16       	cp	r14, r18
     abe:	f3 06       	cpc	r15, r19
     ac0:	04 07       	cpc	r16, r20
     ac2:	15 07       	cpc	r17, r21
     ac4:	c0 f4       	brcc	.+48     	; 0xaf6 <__stack+0x697>
     ac6:	08 94       	sec
     ac8:	a1 08       	sbc	r10, r1
     aca:	b1 08       	sbc	r11, r1
     acc:	c1 08       	sbc	r12, r1
     ace:	d1 08       	sbc	r13, r1
     ad0:	e2 0c       	add	r14, r2
     ad2:	f3 1c       	adc	r15, r3
     ad4:	04 1d       	adc	r16, r4
     ad6:	15 1d       	adc	r17, r5
     ad8:	e2 14       	cp	r14, r2
     ada:	f3 04       	cpc	r15, r3
     adc:	04 05       	cpc	r16, r4
     ade:	15 05       	cpc	r17, r5
     ae0:	50 f0       	brcs	.+20     	; 0xaf6 <__stack+0x697>
     ae2:	e2 16       	cp	r14, r18
     ae4:	f3 06       	cpc	r15, r19
     ae6:	04 07       	cpc	r16, r20
     ae8:	15 07       	cpc	r17, r21
     aea:	28 f4       	brcc	.+10     	; 0xaf6 <__stack+0x697>
     aec:	08 94       	sec
     aee:	a1 08       	sbc	r10, r1
     af0:	b1 08       	sbc	r11, r1
     af2:	c1 08       	sbc	r12, r1
     af4:	d1 08       	sbc	r13, r1
     af6:	61 96       	adiw	r28, 0x11	; 17
     af8:	ec ac       	ldd	r14, Y+60	; 0x3c
     afa:	fd ac       	ldd	r15, Y+61	; 0x3d
     afc:	0e ad       	ldd	r16, Y+62	; 0x3e
     afe:	1f ad       	ldd	r17, Y+63	; 0x3f
     b00:	61 97       	sbiw	r28, 0x11	; 17
     b02:	d7 01       	movw	r26, r14
     b04:	99 27       	eor	r25, r25
     b06:	88 27       	eor	r24, r24
     b08:	96 01       	movw	r18, r12
     b0a:	85 01       	movw	r16, r10
     b0c:	08 2b       	or	r16, r24
     b0e:	19 2b       	or	r17, r25
     b10:	2a 2b       	or	r18, r26
     b12:	3b 2b       	or	r19, r27
     b14:	09 ab       	std	Y+49, r16	; 0x31
     b16:	1a ab       	std	Y+50, r17	; 0x32
     b18:	2b ab       	std	Y+51, r18	; 0x33
     b1a:	3c ab       	std	Y+52, r19	; 0x34
     b1c:	62 c2       	rjmp	.+1220   	; 0xfe2 <__stack+0xb83>
     b1e:	6e 14       	cp	r6, r14
     b20:	7f 04       	cpc	r7, r15
     b22:	80 06       	cpc	r8, r16
     b24:	91 06       	cpc	r9, r17
     b26:	08 f4       	brcc	.+2      	; 0xb2a <__stack+0x6cb>
     b28:	51 c2       	rjmp	.+1186   	; 0xfcc <__stack+0xb6d>
     b2a:	20 e0       	ldi	r18, 0x00	; 0
     b2c:	e2 16       	cp	r14, r18
     b2e:	20 e0       	ldi	r18, 0x00	; 0
     b30:	f2 06       	cpc	r15, r18
     b32:	21 e0       	ldi	r18, 0x01	; 1
     b34:	02 07       	cpc	r16, r18
     b36:	20 e0       	ldi	r18, 0x00	; 0
     b38:	12 07       	cpc	r17, r18
     b3a:	88 f4       	brcc	.+34     	; 0xb5e <__stack+0x6ff>
     b3c:	3f ef       	ldi	r19, 0xFF	; 255
     b3e:	e3 16       	cp	r14, r19
     b40:	f1 04       	cpc	r15, r1
     b42:	01 05       	cpc	r16, r1
     b44:	11 05       	cpc	r17, r1
     b46:	31 f0       	breq	.+12     	; 0xb54 <__stack+0x6f5>
     b48:	28 f0       	brcs	.+10     	; 0xb54 <__stack+0x6f5>
     b4a:	48 e0       	ldi	r20, 0x08	; 8
     b4c:	50 e0       	ldi	r21, 0x00	; 0
     b4e:	60 e0       	ldi	r22, 0x00	; 0
     b50:	70 e0       	ldi	r23, 0x00	; 0
     b52:	17 c0       	rjmp	.+46     	; 0xb82 <__stack+0x723>
     b54:	40 e0       	ldi	r20, 0x00	; 0
     b56:	50 e0       	ldi	r21, 0x00	; 0
     b58:	60 e0       	ldi	r22, 0x00	; 0
     b5a:	70 e0       	ldi	r23, 0x00	; 0
     b5c:	12 c0       	rjmp	.+36     	; 0xb82 <__stack+0x723>
     b5e:	40 e0       	ldi	r20, 0x00	; 0
     b60:	e4 16       	cp	r14, r20
     b62:	40 e0       	ldi	r20, 0x00	; 0
     b64:	f4 06       	cpc	r15, r20
     b66:	40 e0       	ldi	r20, 0x00	; 0
     b68:	04 07       	cpc	r16, r20
     b6a:	41 e0       	ldi	r20, 0x01	; 1
     b6c:	14 07       	cpc	r17, r20
     b6e:	28 f0       	brcs	.+10     	; 0xb7a <__stack+0x71b>
     b70:	48 e1       	ldi	r20, 0x18	; 24
     b72:	50 e0       	ldi	r21, 0x00	; 0
     b74:	60 e0       	ldi	r22, 0x00	; 0
     b76:	70 e0       	ldi	r23, 0x00	; 0
     b78:	04 c0       	rjmp	.+8      	; 0xb82 <__stack+0x723>
     b7a:	40 e1       	ldi	r20, 0x10	; 16
     b7c:	50 e0       	ldi	r21, 0x00	; 0
     b7e:	60 e0       	ldi	r22, 0x00	; 0
     b80:	70 e0       	ldi	r23, 0x00	; 0
     b82:	d8 01       	movw	r26, r16
     b84:	c7 01       	movw	r24, r14
     b86:	04 2e       	mov	r0, r20
     b88:	04 c0       	rjmp	.+8      	; 0xb92 <__stack+0x733>
     b8a:	b6 95       	lsr	r27
     b8c:	a7 95       	ror	r26
     b8e:	97 95       	ror	r25
     b90:	87 95       	ror	r24
     b92:	0a 94       	dec	r0
     b94:	d2 f7       	brpl	.-12     	; 0xb8a <__stack+0x72b>
     b96:	83 58       	subi	r24, 0x83	; 131
     b98:	9f 4f       	sbci	r25, 0xFF	; 255
     b9a:	dc 01       	movw	r26, r24
     b9c:	2c 91       	ld	r18, X
     b9e:	30 e2       	ldi	r19, 0x20	; 32
     ba0:	a3 2e       	mov	r10, r19
     ba2:	b1 2c       	mov	r11, r1
     ba4:	c1 2c       	mov	r12, r1
     ba6:	d1 2c       	mov	r13, r1
     ba8:	d6 01       	movw	r26, r12
     baa:	c5 01       	movw	r24, r10
     bac:	84 1b       	sub	r24, r20
     bae:	95 0b       	sbc	r25, r21
     bb0:	a6 0b       	sbc	r26, r22
     bb2:	b7 0b       	sbc	r27, r23
     bb4:	82 1b       	sub	r24, r18
     bb6:	91 09       	sbc	r25, r1
     bb8:	a1 09       	sbc	r26, r1
     bba:	b1 09       	sbc	r27, r1
     bbc:	00 97       	sbiw	r24, 0x00	; 0
     bbe:	a1 05       	cpc	r26, r1
     bc0:	b1 05       	cpc	r27, r1
     bc2:	89 f4       	brne	.+34     	; 0xbe6 <__stack+0x787>
     bc4:	e6 14       	cp	r14, r6
     bc6:	f7 04       	cpc	r15, r7
     bc8:	08 05       	cpc	r16, r8
     bca:	19 05       	cpc	r17, r9
     bcc:	08 f4       	brcc	.+2      	; 0xbd0 <__stack+0x771>
     bce:	f2 c1       	rjmp	.+996    	; 0xfb4 <__stack+0xb55>
     bd0:	6d a4       	ldd	r6, Y+45	; 0x2d
     bd2:	7e a4       	ldd	r7, Y+46	; 0x2e
     bd4:	8f a4       	ldd	r8, Y+47	; 0x2f
     bd6:	98 a8       	ldd	r9, Y+48	; 0x30
     bd8:	62 14       	cp	r6, r2
     bda:	73 04       	cpc	r7, r3
     bdc:	84 04       	cpc	r8, r4
     bde:	95 04       	cpc	r9, r5
     be0:	08 f0       	brcs	.+2      	; 0xbe4 <__stack+0x785>
     be2:	e8 c1       	rjmp	.+976    	; 0xfb4 <__stack+0xb55>
     be4:	f3 c1       	rjmp	.+998    	; 0xfcc <__stack+0xb6d>
     be6:	6e 96       	adiw	r28, 0x1e	; 30
     be8:	8f af       	std	Y+63, r24	; 0x3f
     bea:	6e 97       	sbiw	r28, 0x1e	; 30
     bec:	08 2e       	mov	r0, r24
     bee:	04 c0       	rjmp	.+8      	; 0xbf8 <__stack+0x799>
     bf0:	ee 0c       	add	r14, r14
     bf2:	ff 1c       	adc	r15, r15
     bf4:	00 1f       	adc	r16, r16
     bf6:	11 1f       	adc	r17, r17
     bf8:	0a 94       	dec	r0
     bfa:	d2 f7       	brpl	.-12     	; 0xbf0 <__stack+0x791>
     bfc:	6a 2d       	mov	r22, r10
     bfe:	68 1b       	sub	r22, r24
     c00:	d2 01       	movw	r26, r4
     c02:	c1 01       	movw	r24, r2
     c04:	06 2e       	mov	r0, r22
     c06:	04 c0       	rjmp	.+8      	; 0xc10 <__stack+0x7b1>
     c08:	b6 95       	lsr	r27
     c0a:	a7 95       	ror	r26
     c0c:	97 95       	ror	r25
     c0e:	87 95       	ror	r24
     c10:	0a 94       	dec	r0
     c12:	d2 f7       	brpl	.-12     	; 0xc08 <__stack+0x7a9>
     c14:	5c 01       	movw	r10, r24
     c16:	6d 01       	movw	r12, r26
     c18:	ae 28       	or	r10, r14
     c1a:	bf 28       	or	r11, r15
     c1c:	c0 2a       	or	r12, r16
     c1e:	d1 2a       	or	r13, r17
     c20:	ad a2       	std	Y+37, r10	; 0x25
     c22:	be a2       	std	Y+38, r11	; 0x26
     c24:	cf a2       	std	Y+39, r12	; 0x27
     c26:	d8 a6       	std	Y+40, r13	; 0x28
     c28:	72 01       	movw	r14, r4
     c2a:	61 01       	movw	r12, r2
     c2c:	6e 96       	adiw	r28, 0x1e	; 30
     c2e:	0f ac       	ldd	r0, Y+63	; 0x3f
     c30:	6e 97       	sbiw	r28, 0x1e	; 30
     c32:	04 c0       	rjmp	.+8      	; 0xc3c <__stack+0x7dd>
     c34:	cc 0c       	add	r12, r12
     c36:	dd 1c       	adc	r13, r13
     c38:	ee 1c       	adc	r14, r14
     c3a:	ff 1c       	adc	r15, r15
     c3c:	0a 94       	dec	r0
     c3e:	d2 f7       	brpl	.-12     	; 0xc34 <__stack+0x7d5>
     c40:	c9 a2       	std	Y+33, r12	; 0x21
     c42:	da a2       	std	Y+34, r13	; 0x22
     c44:	eb a2       	std	Y+35, r14	; 0x23
     c46:	fc a2       	std	Y+36, r15	; 0x24
     c48:	64 01       	movw	r12, r8
     c4a:	53 01       	movw	r10, r6
     c4c:	06 2e       	mov	r0, r22
     c4e:	04 c0       	rjmp	.+8      	; 0xc58 <__stack+0x7f9>
     c50:	d6 94       	lsr	r13
     c52:	c7 94       	ror	r12
     c54:	b7 94       	ror	r11
     c56:	a7 94       	ror	r10
     c58:	0a 94       	dec	r0
     c5a:	d2 f7       	brpl	.-12     	; 0xc50 <__stack+0x7f1>
     c5c:	d4 01       	movw	r26, r8
     c5e:	c3 01       	movw	r24, r6
     c60:	6e 96       	adiw	r28, 0x1e	; 30
     c62:	0f ac       	ldd	r0, Y+63	; 0x3f
     c64:	6e 97       	sbiw	r28, 0x1e	; 30
     c66:	04 c0       	rjmp	.+8      	; 0xc70 <__stack+0x811>
     c68:	88 0f       	add	r24, r24
     c6a:	99 1f       	adc	r25, r25
     c6c:	aa 1f       	adc	r26, r26
     c6e:	bb 1f       	adc	r27, r27
     c70:	0a 94       	dec	r0
     c72:	d2 f7       	brpl	.-12     	; 0xc68 <__stack+0x809>
     c74:	ed a4       	ldd	r14, Y+45	; 0x2d
     c76:	fe a4       	ldd	r15, Y+46	; 0x2e
     c78:	0f a5       	ldd	r16, Y+47	; 0x2f
     c7a:	18 a9       	ldd	r17, Y+48	; 0x30
     c7c:	04 c0       	rjmp	.+8      	; 0xc86 <__stack+0x827>
     c7e:	16 95       	lsr	r17
     c80:	07 95       	ror	r16
     c82:	f7 94       	ror	r15
     c84:	e7 94       	ror	r14
     c86:	6a 95       	dec	r22
     c88:	d2 f7       	brpl	.-12     	; 0xc7e <__stack+0x81f>
     c8a:	37 01       	movw	r6, r14
     c8c:	48 01       	movw	r8, r16
     c8e:	68 2a       	or	r6, r24
     c90:	79 2a       	or	r7, r25
     c92:	8a 2a       	or	r8, r26
     c94:	9b 2a       	or	r9, r27
     c96:	6d 8e       	std	Y+29, r6	; 0x1d
     c98:	7e 8e       	std	Y+30, r7	; 0x1e
     c9a:	8f 8e       	std	Y+31, r8	; 0x1f
     c9c:	98 a2       	std	Y+32, r9	; 0x20
     c9e:	ed a0       	ldd	r14, Y+37	; 0x25
     ca0:	fe a0       	ldd	r15, Y+38	; 0x26
     ca2:	0f a1       	ldd	r16, Y+39	; 0x27
     ca4:	18 a5       	ldd	r17, Y+40	; 0x28
     ca6:	38 01       	movw	r6, r16
     ca8:	88 24       	eor	r8, r8
     caa:	99 24       	eor	r9, r9
     cac:	98 01       	movw	r18, r16
     cae:	87 01       	movw	r16, r14
     cb0:	20 70       	andi	r18, 0x00	; 0
     cb2:	30 70       	andi	r19, 0x00	; 0
     cb4:	65 96       	adiw	r28, 0x15	; 21
     cb6:	0c af       	std	Y+60, r16	; 0x3c
     cb8:	1d af       	std	Y+61, r17	; 0x3d
     cba:	2e af       	std	Y+62, r18	; 0x3e
     cbc:	3f af       	std	Y+63, r19	; 0x3f
     cbe:	65 97       	sbiw	r28, 0x15	; 21
     cc0:	c6 01       	movw	r24, r12
     cc2:	b5 01       	movw	r22, r10
     cc4:	a4 01       	movw	r20, r8
     cc6:	93 01       	movw	r18, r6
     cc8:	0e 94 90 2d 	call	0x5b20	; 0x5b20 <__udivmodsi4>
     ccc:	7b 01       	movw	r14, r22
     cce:	8c 01       	movw	r16, r24
     cd0:	c6 01       	movw	r24, r12
     cd2:	b5 01       	movw	r22, r10
     cd4:	a4 01       	movw	r20, r8
     cd6:	93 01       	movw	r18, r6
     cd8:	0e 94 90 2d 	call	0x5b20	; 0x5b20 <__udivmodsi4>
     cdc:	c9 01       	movw	r24, r18
     cde:	da 01       	movw	r26, r20
     ce0:	1c 01       	movw	r2, r24
     ce2:	2d 01       	movw	r4, r26
     ce4:	c2 01       	movw	r24, r4
     ce6:	b1 01       	movw	r22, r2
     ce8:	65 96       	adiw	r28, 0x15	; 21
     cea:	2c ad       	ldd	r18, Y+60	; 0x3c
     cec:	3d ad       	ldd	r19, Y+61	; 0x3d
     cee:	4e ad       	ldd	r20, Y+62	; 0x3e
     cf0:	5f ad       	ldd	r21, Y+63	; 0x3f
     cf2:	65 97       	sbiw	r28, 0x15	; 21
     cf4:	0e 94 71 2d 	call	0x5ae2	; 0x5ae2 <__mulsi3>
     cf8:	9b 01       	movw	r18, r22
     cfa:	ac 01       	movw	r20, r24
     cfc:	87 01       	movw	r16, r14
     cfe:	ff 24       	eor	r15, r15
     d00:	ee 24       	eor	r14, r14
     d02:	ad 8c       	ldd	r10, Y+29	; 0x1d
     d04:	be 8c       	ldd	r11, Y+30	; 0x1e
     d06:	cf 8c       	ldd	r12, Y+31	; 0x1f
     d08:	d8 a0       	ldd	r13, Y+32	; 0x20
     d0a:	c6 01       	movw	r24, r12
     d0c:	aa 27       	eor	r26, r26
     d0e:	bb 27       	eor	r27, r27
     d10:	57 01       	movw	r10, r14
     d12:	68 01       	movw	r12, r16
     d14:	a8 2a       	or	r10, r24
     d16:	b9 2a       	or	r11, r25
     d18:	ca 2a       	or	r12, r26
     d1a:	db 2a       	or	r13, r27
     d1c:	a2 16       	cp	r10, r18
     d1e:	b3 06       	cpc	r11, r19
     d20:	c4 06       	cpc	r12, r20
     d22:	d5 06       	cpc	r13, r21
     d24:	00 f5       	brcc	.+64     	; 0xd66 <__stack+0x907>
     d26:	08 94       	sec
     d28:	21 08       	sbc	r2, r1
     d2a:	31 08       	sbc	r3, r1
     d2c:	41 08       	sbc	r4, r1
     d2e:	51 08       	sbc	r5, r1
     d30:	ed a0       	ldd	r14, Y+37	; 0x25
     d32:	fe a0       	ldd	r15, Y+38	; 0x26
     d34:	0f a1       	ldd	r16, Y+39	; 0x27
     d36:	18 a5       	ldd	r17, Y+40	; 0x28
     d38:	ae 0c       	add	r10, r14
     d3a:	bf 1c       	adc	r11, r15
     d3c:	c0 1e       	adc	r12, r16
     d3e:	d1 1e       	adc	r13, r17
     d40:	ae 14       	cp	r10, r14
     d42:	bf 04       	cpc	r11, r15
     d44:	c0 06       	cpc	r12, r16
     d46:	d1 06       	cpc	r13, r17
     d48:	70 f0       	brcs	.+28     	; 0xd66 <__stack+0x907>
     d4a:	a2 16       	cp	r10, r18
     d4c:	b3 06       	cpc	r11, r19
     d4e:	c4 06       	cpc	r12, r20
     d50:	d5 06       	cpc	r13, r21
     d52:	48 f4       	brcc	.+18     	; 0xd66 <__stack+0x907>
     d54:	08 94       	sec
     d56:	21 08       	sbc	r2, r1
     d58:	31 08       	sbc	r3, r1
     d5a:	41 08       	sbc	r4, r1
     d5c:	51 08       	sbc	r5, r1
     d5e:	ae 0c       	add	r10, r14
     d60:	bf 1c       	adc	r11, r15
     d62:	c0 1e       	adc	r12, r16
     d64:	d1 1e       	adc	r13, r17
     d66:	a2 1a       	sub	r10, r18
     d68:	b3 0a       	sbc	r11, r19
     d6a:	c4 0a       	sbc	r12, r20
     d6c:	d5 0a       	sbc	r13, r21
     d6e:	c6 01       	movw	r24, r12
     d70:	b5 01       	movw	r22, r10
     d72:	a4 01       	movw	r20, r8
     d74:	93 01       	movw	r18, r6
     d76:	0e 94 90 2d 	call	0x5b20	; 0x5b20 <__udivmodsi4>
     d7a:	7b 01       	movw	r14, r22
     d7c:	8c 01       	movw	r16, r24
     d7e:	c6 01       	movw	r24, r12
     d80:	b5 01       	movw	r22, r10
     d82:	a4 01       	movw	r20, r8
     d84:	93 01       	movw	r18, r6
     d86:	0e 94 90 2d 	call	0x5b20	; 0x5b20 <__udivmodsi4>
     d8a:	c9 01       	movw	r24, r18
     d8c:	da 01       	movw	r26, r20
     d8e:	3c 01       	movw	r6, r24
     d90:	4d 01       	movw	r8, r26
     d92:	c4 01       	movw	r24, r8
     d94:	b3 01       	movw	r22, r6
     d96:	65 96       	adiw	r28, 0x15	; 21
     d98:	2c ad       	ldd	r18, Y+60	; 0x3c
     d9a:	3d ad       	ldd	r19, Y+61	; 0x3d
     d9c:	4e ad       	ldd	r20, Y+62	; 0x3e
     d9e:	5f ad       	ldd	r21, Y+63	; 0x3f
     da0:	65 97       	sbiw	r28, 0x15	; 21
     da2:	0e 94 71 2d 	call	0x5ae2	; 0x5ae2 <__mulsi3>
     da6:	9b 01       	movw	r18, r22
     da8:	ac 01       	movw	r20, r24
     daa:	87 01       	movw	r16, r14
     dac:	ff 24       	eor	r15, r15
     dae:	ee 24       	eor	r14, r14
     db0:	8d 8d       	ldd	r24, Y+29	; 0x1d
     db2:	9e 8d       	ldd	r25, Y+30	; 0x1e
     db4:	af 8d       	ldd	r26, Y+31	; 0x1f
     db6:	b8 a1       	ldd	r27, Y+32	; 0x20
     db8:	a0 70       	andi	r26, 0x00	; 0
     dba:	b0 70       	andi	r27, 0x00	; 0
     dbc:	57 01       	movw	r10, r14
     dbe:	68 01       	movw	r12, r16
     dc0:	a8 2a       	or	r10, r24
     dc2:	b9 2a       	or	r11, r25
     dc4:	ca 2a       	or	r12, r26
     dc6:	db 2a       	or	r13, r27
     dc8:	a2 16       	cp	r10, r18
     dca:	b3 06       	cpc	r11, r19
     dcc:	c4 06       	cpc	r12, r20
     dce:	d5 06       	cpc	r13, r21
     dd0:	00 f5       	brcc	.+64     	; 0xe12 <__stack+0x9b3>
     dd2:	08 94       	sec
     dd4:	61 08       	sbc	r6, r1
     dd6:	71 08       	sbc	r7, r1
     dd8:	81 08       	sbc	r8, r1
     dda:	91 08       	sbc	r9, r1
     ddc:	6d a1       	ldd	r22, Y+37	; 0x25
     dde:	7e a1       	ldd	r23, Y+38	; 0x26
     de0:	8f a1       	ldd	r24, Y+39	; 0x27
     de2:	98 a5       	ldd	r25, Y+40	; 0x28
     de4:	a6 0e       	add	r10, r22
     de6:	b7 1e       	adc	r11, r23
     de8:	c8 1e       	adc	r12, r24
     dea:	d9 1e       	adc	r13, r25
     dec:	a6 16       	cp	r10, r22
     dee:	b7 06       	cpc	r11, r23
     df0:	c8 06       	cpc	r12, r24
     df2:	d9 06       	cpc	r13, r25
     df4:	70 f0       	brcs	.+28     	; 0xe12 <__stack+0x9b3>
     df6:	a2 16       	cp	r10, r18
     df8:	b3 06       	cpc	r11, r19
     dfa:	c4 06       	cpc	r12, r20
     dfc:	d5 06       	cpc	r13, r21
     dfe:	48 f4       	brcc	.+18     	; 0xe12 <__stack+0x9b3>
     e00:	08 94       	sec
     e02:	61 08       	sbc	r6, r1
     e04:	71 08       	sbc	r7, r1
     e06:	81 08       	sbc	r8, r1
     e08:	91 08       	sbc	r9, r1
     e0a:	a6 0e       	add	r10, r22
     e0c:	b7 1e       	adc	r11, r23
     e0e:	c8 1e       	adc	r12, r24
     e10:	d9 1e       	adc	r13, r25
     e12:	d6 01       	movw	r26, r12
     e14:	c5 01       	movw	r24, r10
     e16:	82 1b       	sub	r24, r18
     e18:	93 0b       	sbc	r25, r19
     e1a:	a4 0b       	sbc	r26, r20
     e1c:	b5 0b       	sbc	r27, r21
     e1e:	89 8f       	std	Y+25, r24	; 0x19
     e20:	9a 8f       	std	Y+26, r25	; 0x1a
     e22:	ab 8f       	std	Y+27, r26	; 0x1b
     e24:	bc 8f       	std	Y+28, r27	; 0x1c
     e26:	d1 01       	movw	r26, r2
     e28:	99 27       	eor	r25, r25
     e2a:	88 27       	eor	r24, r24
     e2c:	64 01       	movw	r12, r8
     e2e:	53 01       	movw	r10, r6
     e30:	a8 2a       	or	r10, r24
     e32:	b9 2a       	or	r11, r25
     e34:	ca 2a       	or	r12, r26
     e36:	db 2a       	or	r13, r27
     e38:	a9 aa       	std	Y+49, r10	; 0x31
     e3a:	ba aa       	std	Y+50, r11	; 0x32
     e3c:	cb aa       	std	Y+51, r12	; 0x33
     e3e:	dc aa       	std	Y+52, r13	; 0x34
     e40:	86 01       	movw	r16, r12
     e42:	75 01       	movw	r14, r10
     e44:	2f ef       	ldi	r18, 0xFF	; 255
     e46:	3f ef       	ldi	r19, 0xFF	; 255
     e48:	40 e0       	ldi	r20, 0x00	; 0
     e4a:	50 e0       	ldi	r21, 0x00	; 0
     e4c:	e2 22       	and	r14, r18
     e4e:	f3 22       	and	r15, r19
     e50:	04 23       	and	r16, r20
     e52:	15 23       	and	r17, r21
     e54:	a6 01       	movw	r20, r12
     e56:	66 27       	eor	r22, r22
     e58:	77 27       	eor	r23, r23
     e5a:	6d 96       	adiw	r28, 0x1d	; 29
     e5c:	4c af       	std	Y+60, r20	; 0x3c
     e5e:	5d af       	std	Y+61, r21	; 0x3d
     e60:	6e af       	std	Y+62, r22	; 0x3e
     e62:	7f af       	std	Y+63, r23	; 0x3f
     e64:	6d 97       	sbiw	r28, 0x1d	; 29
     e66:	a9 a0       	ldd	r10, Y+33	; 0x21
     e68:	ba a0       	ldd	r11, Y+34	; 0x22
     e6a:	cb a0       	ldd	r12, Y+35	; 0x23
     e6c:	dc a0       	ldd	r13, Y+36	; 0x24
     e6e:	6f ef       	ldi	r22, 0xFF	; 255
     e70:	7f ef       	ldi	r23, 0xFF	; 255
     e72:	80 e0       	ldi	r24, 0x00	; 0
     e74:	90 e0       	ldi	r25, 0x00	; 0
     e76:	a6 22       	and	r10, r22
     e78:	b7 22       	and	r11, r23
     e7a:	c8 22       	and	r12, r24
     e7c:	d9 22       	and	r13, r25
     e7e:	89 a1       	ldd	r24, Y+33	; 0x21
     e80:	9a a1       	ldd	r25, Y+34	; 0x22
     e82:	ab a1       	ldd	r26, Y+35	; 0x23
     e84:	bc a1       	ldd	r27, Y+36	; 0x24
     e86:	1d 01       	movw	r2, r26
     e88:	44 24       	eor	r4, r4
     e8a:	55 24       	eor	r5, r5
     e8c:	c8 01       	movw	r24, r16
     e8e:	b7 01       	movw	r22, r14
     e90:	a6 01       	movw	r20, r12
     e92:	95 01       	movw	r18, r10
     e94:	0e 94 71 2d 	call	0x5ae2	; 0x5ae2 <__mulsi3>
     e98:	69 96       	adiw	r28, 0x19	; 25
     e9a:	6c af       	std	Y+60, r22	; 0x3c
     e9c:	7d af       	std	Y+61, r23	; 0x3d
     e9e:	8e af       	std	Y+62, r24	; 0x3e
     ea0:	9f af       	std	Y+63, r25	; 0x3f
     ea2:	69 97       	sbiw	r28, 0x19	; 25
     ea4:	c8 01       	movw	r24, r16
     ea6:	b7 01       	movw	r22, r14
     ea8:	a2 01       	movw	r20, r4
     eaa:	91 01       	movw	r18, r2
     eac:	0e 94 71 2d 	call	0x5ae2	; 0x5ae2 <__mulsi3>
     eb0:	3b 01       	movw	r6, r22
     eb2:	4c 01       	movw	r8, r24
     eb4:	6d 96       	adiw	r28, 0x1d	; 29
     eb6:	6c ad       	ldd	r22, Y+60	; 0x3c
     eb8:	7d ad       	ldd	r23, Y+61	; 0x3d
     eba:	8e ad       	ldd	r24, Y+62	; 0x3e
     ebc:	9f ad       	ldd	r25, Y+63	; 0x3f
     ebe:	6d 97       	sbiw	r28, 0x1d	; 29
     ec0:	a6 01       	movw	r20, r12
     ec2:	95 01       	movw	r18, r10
     ec4:	0e 94 71 2d 	call	0x5ae2	; 0x5ae2 <__mulsi3>
     ec8:	7b 01       	movw	r14, r22
     eca:	8c 01       	movw	r16, r24
     ecc:	6d 96       	adiw	r28, 0x1d	; 29
     ece:	6c ad       	ldd	r22, Y+60	; 0x3c
     ed0:	7d ad       	ldd	r23, Y+61	; 0x3d
     ed2:	8e ad       	ldd	r24, Y+62	; 0x3e
     ed4:	9f ad       	ldd	r25, Y+63	; 0x3f
     ed6:	6d 97       	sbiw	r28, 0x1d	; 29
     ed8:	a2 01       	movw	r20, r4
     eda:	91 01       	movw	r18, r2
     edc:	0e 94 71 2d 	call	0x5ae2	; 0x5ae2 <__mulsi3>
     ee0:	5b 01       	movw	r10, r22
     ee2:	6c 01       	movw	r12, r24
     ee4:	a8 01       	movw	r20, r16
     ee6:	97 01       	movw	r18, r14
     ee8:	26 0d       	add	r18, r6
     eea:	37 1d       	adc	r19, r7
     eec:	48 1d       	adc	r20, r8
     eee:	59 1d       	adc	r21, r9
     ef0:	69 96       	adiw	r28, 0x19	; 25
     ef2:	6c ac       	ldd	r6, Y+60	; 0x3c
     ef4:	7d ac       	ldd	r7, Y+61	; 0x3d
     ef6:	8e ac       	ldd	r8, Y+62	; 0x3e
     ef8:	9f ac       	ldd	r9, Y+63	; 0x3f
     efa:	69 97       	sbiw	r28, 0x19	; 25
     efc:	c4 01       	movw	r24, r8
     efe:	aa 27       	eor	r26, r26
     f00:	bb 27       	eor	r27, r27
     f02:	28 0f       	add	r18, r24
     f04:	39 1f       	adc	r19, r25
     f06:	4a 1f       	adc	r20, r26
     f08:	5b 1f       	adc	r21, r27
     f0a:	2e 15       	cp	r18, r14
     f0c:	3f 05       	cpc	r19, r15
     f0e:	40 07       	cpc	r20, r16
     f10:	51 07       	cpc	r21, r17
     f12:	48 f4       	brcc	.+18     	; 0xf26 <__stack+0xac7>
     f14:	e1 2c       	mov	r14, r1
     f16:	f1 2c       	mov	r15, r1
     f18:	61 e0       	ldi	r22, 0x01	; 1
     f1a:	06 2f       	mov	r16, r22
     f1c:	11 2d       	mov	r17, r1
     f1e:	ae 0c       	add	r10, r14
     f20:	bf 1c       	adc	r11, r15
     f22:	c0 1e       	adc	r12, r16
     f24:	d1 1e       	adc	r13, r17
     f26:	ca 01       	movw	r24, r20
     f28:	aa 27       	eor	r26, r26
     f2a:	bb 27       	eor	r27, r27
     f2c:	bc 01       	movw	r22, r24
     f2e:	cd 01       	movw	r24, r26
     f30:	6a 0d       	add	r22, r10
     f32:	7b 1d       	adc	r23, r11
     f34:	8c 1d       	adc	r24, r12
     f36:	9d 1d       	adc	r25, r13
     f38:	69 8c       	ldd	r6, Y+25	; 0x19
     f3a:	7a 8c       	ldd	r7, Y+26	; 0x1a
     f3c:	8b 8c       	ldd	r8, Y+27	; 0x1b
     f3e:	9c 8c       	ldd	r9, Y+28	; 0x1c
     f40:	66 16       	cp	r6, r22
     f42:	77 06       	cpc	r7, r23
     f44:	88 06       	cpc	r8, r24
     f46:	99 06       	cpc	r9, r25
     f48:	40 f1       	brcs	.+80     	; 0xf9a <__stack+0xb3b>
     f4a:	66 15       	cp	r22, r6
     f4c:	77 05       	cpc	r23, r7
     f4e:	88 05       	cpc	r24, r8
     f50:	99 05       	cpc	r25, r9
     f52:	09 f0       	breq	.+2      	; 0xf56 <__stack+0xaf7>
     f54:	43 c0       	rjmp	.+134    	; 0xfdc <__stack+0xb7d>
     f56:	d9 01       	movw	r26, r18
     f58:	99 27       	eor	r25, r25
     f5a:	88 27       	eor	r24, r24
     f5c:	69 96       	adiw	r28, 0x19	; 25
     f5e:	2c ad       	ldd	r18, Y+60	; 0x3c
     f60:	3d ad       	ldd	r19, Y+61	; 0x3d
     f62:	4e ad       	ldd	r20, Y+62	; 0x3e
     f64:	5f ad       	ldd	r21, Y+63	; 0x3f
     f66:	69 97       	sbiw	r28, 0x19	; 25
     f68:	40 70       	andi	r20, 0x00	; 0
     f6a:	50 70       	andi	r21, 0x00	; 0
     f6c:	82 0f       	add	r24, r18
     f6e:	93 1f       	adc	r25, r19
     f70:	a4 1f       	adc	r26, r20
     f72:	b5 1f       	adc	r27, r21
     f74:	2d a5       	ldd	r18, Y+45	; 0x2d
     f76:	3e a5       	ldd	r19, Y+46	; 0x2e
     f78:	4f a5       	ldd	r20, Y+47	; 0x2f
     f7a:	58 a9       	ldd	r21, Y+48	; 0x30
     f7c:	6e 96       	adiw	r28, 0x1e	; 30
     f7e:	0f ac       	ldd	r0, Y+63	; 0x3f
     f80:	6e 97       	sbiw	r28, 0x1e	; 30
     f82:	04 c0       	rjmp	.+8      	; 0xf8c <__stack+0xb2d>
     f84:	22 0f       	add	r18, r18
     f86:	33 1f       	adc	r19, r19
     f88:	44 1f       	adc	r20, r20
     f8a:	55 1f       	adc	r21, r21
     f8c:	0a 94       	dec	r0
     f8e:	d2 f7       	brpl	.-12     	; 0xf84 <__stack+0xb25>
     f90:	28 17       	cp	r18, r24
     f92:	39 07       	cpc	r19, r25
     f94:	4a 07       	cpc	r20, r26
     f96:	5b 07       	cpc	r21, r27
     f98:	08 f5       	brcc	.+66     	; 0xfdc <__stack+0xb7d>
     f9a:	09 a9       	ldd	r16, Y+49	; 0x31
     f9c:	1a a9       	ldd	r17, Y+50	; 0x32
     f9e:	2b a9       	ldd	r18, Y+51	; 0x33
     fa0:	3c a9       	ldd	r19, Y+52	; 0x34
     fa2:	01 50       	subi	r16, 0x01	; 1
     fa4:	10 40       	sbci	r17, 0x00	; 0
     fa6:	20 40       	sbci	r18, 0x00	; 0
     fa8:	30 40       	sbci	r19, 0x00	; 0
     faa:	09 ab       	std	Y+49, r16	; 0x31
     fac:	1a ab       	std	Y+50, r17	; 0x32
     fae:	2b ab       	std	Y+51, r18	; 0x33
     fb0:	3c ab       	std	Y+52, r19	; 0x34
     fb2:	14 c0       	rjmp	.+40     	; 0xfdc <__stack+0xb7d>
     fb4:	66 24       	eor	r6, r6
     fb6:	77 24       	eor	r7, r7
     fb8:	43 01       	movw	r8, r6
     fba:	21 e0       	ldi	r18, 0x01	; 1
     fbc:	30 e0       	ldi	r19, 0x00	; 0
     fbe:	40 e0       	ldi	r20, 0x00	; 0
     fc0:	50 e0       	ldi	r21, 0x00	; 0
     fc2:	29 ab       	std	Y+49, r18	; 0x31
     fc4:	3a ab       	std	Y+50, r19	; 0x32
     fc6:	4b ab       	std	Y+51, r20	; 0x33
     fc8:	5c ab       	std	Y+52, r21	; 0x34
     fca:	0b c0       	rjmp	.+22     	; 0xfe2 <__stack+0xb83>
     fcc:	66 24       	eor	r6, r6
     fce:	77 24       	eor	r7, r7
     fd0:	43 01       	movw	r8, r6
     fd2:	19 aa       	std	Y+49, r1	; 0x31
     fd4:	1a aa       	std	Y+50, r1	; 0x32
     fd6:	1b aa       	std	Y+51, r1	; 0x33
     fd8:	1c aa       	std	Y+52, r1	; 0x34
     fda:	03 c0       	rjmp	.+6      	; 0xfe2 <__stack+0xb83>
     fdc:	66 24       	eor	r6, r6
     fde:	77 24       	eor	r7, r7
     fe0:	43 01       	movw	r8, r6
     fe2:	fe 01       	movw	r30, r28
     fe4:	71 96       	adiw	r30, 0x11	; 17
     fe6:	88 e0       	ldi	r24, 0x08	; 8
     fe8:	df 01       	movw	r26, r30
     fea:	1d 92       	st	X+, r1
     fec:	8a 95       	dec	r24
     fee:	e9 f7       	brne	.-6      	; 0xfea <__stack+0xb8b>
     ff0:	a9 a8       	ldd	r10, Y+49	; 0x31
     ff2:	ba a8       	ldd	r11, Y+50	; 0x32
     ff4:	cb a8       	ldd	r12, Y+51	; 0x33
     ff6:	dc a8       	ldd	r13, Y+52	; 0x34
     ff8:	a9 8a       	std	Y+17, r10	; 0x11
     ffa:	ba 8a       	std	Y+18, r11	; 0x12
     ffc:	cb 8a       	std	Y+19, r12	; 0x13
     ffe:	dc 8a       	std	Y+20, r13	; 0x14
    1000:	6d 8a       	std	Y+21, r6	; 0x15
    1002:	7e 8a       	std	Y+22, r7	; 0x16
    1004:	8f 8a       	std	Y+23, r8	; 0x17
    1006:	98 8e       	std	Y+24, r9	; 0x18
    1008:	29 a9       	ldd	r18, Y+49	; 0x31
    100a:	3a 89       	ldd	r19, Y+18	; 0x12
    100c:	4b 89       	ldd	r20, Y+19	; 0x13
    100e:	5c 89       	ldd	r21, Y+20	; 0x14
    1010:	66 2d       	mov	r22, r6
    1012:	7e 89       	ldd	r23, Y+22	; 0x16
    1014:	8f 89       	ldd	r24, Y+23	; 0x17
    1016:	98 8d       	ldd	r25, Y+24	; 0x18
    1018:	c2 5a       	subi	r28, 0xA2	; 162
    101a:	df 4f       	sbci	r29, 0xFF	; 255
    101c:	e2 e1       	ldi	r30, 0x12	; 18
    101e:	0c 94 ce 2d 	jmp	0x5b9c	; 0x5b9c <__epilogue_restores__>

00001022 <__umoddi3>:
    1022:	ab e5       	ldi	r26, 0x5B	; 91
    1024:	b0 e0       	ldi	r27, 0x00	; 0
    1026:	e7 e1       	ldi	r30, 0x17	; 23
    1028:	f8 e0       	ldi	r31, 0x08	; 8
    102a:	0c 94 b2 2d 	jmp	0x5b64	; 0x5b64 <__prologue_saves__>
    102e:	a8 e0       	ldi	r26, 0x08	; 8
    1030:	4e 01       	movw	r8, r28
    1032:	08 94       	sec
    1034:	81 1c       	adc	r8, r1
    1036:	91 1c       	adc	r9, r1
    1038:	f4 01       	movw	r30, r8
    103a:	6a 2e       	mov	r6, r26
    103c:	11 92       	st	Z+, r1
    103e:	6a 94       	dec	r6
    1040:	e9 f7       	brne	.-6      	; 0x103c <__umoddi3+0x1a>
    1042:	29 83       	std	Y+1, r18	; 0x01
    1044:	3a 83       	std	Y+2, r19	; 0x02
    1046:	4b 83       	std	Y+3, r20	; 0x03
    1048:	5c 83       	std	Y+4, r21	; 0x04
    104a:	6d 83       	std	Y+5, r22	; 0x05
    104c:	7e 83       	std	Y+6, r23	; 0x06
    104e:	8f 83       	std	Y+7, r24	; 0x07
    1050:	98 87       	std	Y+8, r25	; 0x08
    1052:	ce 01       	movw	r24, r28
    1054:	09 96       	adiw	r24, 0x09	; 9
    1056:	fc 01       	movw	r30, r24
    1058:	11 92       	st	Z+, r1
    105a:	aa 95       	dec	r26
    105c:	e9 f7       	brne	.-6      	; 0x1058 <__umoddi3+0x36>
    105e:	a9 86       	std	Y+9, r10	; 0x09
    1060:	ba 86       	std	Y+10, r11	; 0x0a
    1062:	cb 86       	std	Y+11, r12	; 0x0b
    1064:	dc 86       	std	Y+12, r13	; 0x0c
    1066:	ed 86       	std	Y+13, r14	; 0x0d
    1068:	fe 86       	std	Y+14, r15	; 0x0e
    106a:	0f 87       	std	Y+15, r16	; 0x0f
    106c:	18 8b       	std	Y+16, r17	; 0x10
    106e:	29 84       	ldd	r2, Y+9	; 0x09
    1070:	3a 84       	ldd	r3, Y+10	; 0x0a
    1072:	4b 84       	ldd	r4, Y+11	; 0x0b
    1074:	5c 84       	ldd	r5, Y+12	; 0x0c
    1076:	ad 84       	ldd	r10, Y+13	; 0x0d
    1078:	be 84       	ldd	r11, Y+14	; 0x0e
    107a:	cf 84       	ldd	r12, Y+15	; 0x0f
    107c:	d8 88       	ldd	r13, Y+16	; 0x10
    107e:	29 81       	ldd	r18, Y+1	; 0x01
    1080:	3a 81       	ldd	r19, Y+2	; 0x02
    1082:	4b 81       	ldd	r20, Y+3	; 0x03
    1084:	5c 81       	ldd	r21, Y+4	; 0x04
    1086:	69 96       	adiw	r28, 0x19	; 25
    1088:	2f af       	std	Y+63, r18	; 0x3f
    108a:	69 97       	sbiw	r28, 0x19	; 25
    108c:	6a 96       	adiw	r28, 0x1a	; 26
    108e:	3f af       	std	Y+63, r19	; 0x3f
    1090:	6a 97       	sbiw	r28, 0x1a	; 26
    1092:	6b 96       	adiw	r28, 0x1b	; 27
    1094:	4f af       	std	Y+63, r20	; 0x3f
    1096:	6b 97       	sbiw	r28, 0x1b	; 27
    1098:	6c 96       	adiw	r28, 0x1c	; 28
    109a:	5f af       	std	Y+63, r21	; 0x3f
    109c:	6c 97       	sbiw	r28, 0x1c	; 28
    109e:	6c 96       	adiw	r28, 0x1c	; 28
    10a0:	6c ac       	ldd	r6, Y+60	; 0x3c
    10a2:	7d ac       	ldd	r7, Y+61	; 0x3d
    10a4:	8e ac       	ldd	r8, Y+62	; 0x3e
    10a6:	9f ac       	ldd	r9, Y+63	; 0x3f
    10a8:	6c 97       	sbiw	r28, 0x1c	; 28
    10aa:	69 aa       	std	Y+49, r6	; 0x31
    10ac:	7a aa       	std	Y+50, r7	; 0x32
    10ae:	8b aa       	std	Y+51, r8	; 0x33
    10b0:	9c aa       	std	Y+52, r9	; 0x34
    10b2:	6d 81       	ldd	r22, Y+5	; 0x05
    10b4:	7e 81       	ldd	r23, Y+6	; 0x06
    10b6:	8f 81       	ldd	r24, Y+7	; 0x07
    10b8:	98 85       	ldd	r25, Y+8	; 0x08
    10ba:	3b 01       	movw	r6, r22
    10bc:	4c 01       	movw	r8, r24
    10be:	6d aa       	std	Y+53, r6	; 0x35
    10c0:	7e aa       	std	Y+54, r7	; 0x36
    10c2:	8f aa       	std	Y+55, r8	; 0x37
    10c4:	98 ae       	std	Y+56, r9	; 0x38
    10c6:	a1 14       	cp	r10, r1
    10c8:	b1 04       	cpc	r11, r1
    10ca:	c1 04       	cpc	r12, r1
    10cc:	d1 04       	cpc	r13, r1
    10ce:	09 f0       	breq	.+2      	; 0x10d2 <__umoddi3+0xb0>
    10d0:	04 c3       	rjmp	.+1544   	; 0x16da <__umoddi3+0x6b8>
    10d2:	62 14       	cp	r6, r2
    10d4:	73 04       	cpc	r7, r3
    10d6:	84 04       	cpc	r8, r4
    10d8:	95 04       	cpc	r9, r5
    10da:	08 f0       	brcs	.+2      	; 0x10de <__umoddi3+0xbc>
    10dc:	00 c1       	rjmp	.+512    	; 0x12de <__umoddi3+0x2bc>
    10de:	00 e0       	ldi	r16, 0x00	; 0
    10e0:	20 16       	cp	r2, r16
    10e2:	00 e0       	ldi	r16, 0x00	; 0
    10e4:	30 06       	cpc	r3, r16
    10e6:	01 e0       	ldi	r16, 0x01	; 1
    10e8:	40 06       	cpc	r4, r16
    10ea:	00 e0       	ldi	r16, 0x00	; 0
    10ec:	50 06       	cpc	r5, r16
    10ee:	88 f4       	brcc	.+34     	; 0x1112 <__umoddi3+0xf0>
    10f0:	1f ef       	ldi	r17, 0xFF	; 255
    10f2:	21 16       	cp	r2, r17
    10f4:	31 04       	cpc	r3, r1
    10f6:	41 04       	cpc	r4, r1
    10f8:	51 04       	cpc	r5, r1
    10fa:	39 f0       	breq	.+14     	; 0x110a <__umoddi3+0xe8>
    10fc:	30 f0       	brcs	.+12     	; 0x110a <__umoddi3+0xe8>
    10fe:	88 e0       	ldi	r24, 0x08	; 8
    1100:	e8 2e       	mov	r14, r24
    1102:	f1 2c       	mov	r15, r1
    1104:	01 2d       	mov	r16, r1
    1106:	11 2d       	mov	r17, r1
    1108:	18 c0       	rjmp	.+48     	; 0x113a <__umoddi3+0x118>
    110a:	ee 24       	eor	r14, r14
    110c:	ff 24       	eor	r15, r15
    110e:	87 01       	movw	r16, r14
    1110:	14 c0       	rjmp	.+40     	; 0x113a <__umoddi3+0x118>
    1112:	40 e0       	ldi	r20, 0x00	; 0
    1114:	24 16       	cp	r2, r20
    1116:	40 e0       	ldi	r20, 0x00	; 0
    1118:	34 06       	cpc	r3, r20
    111a:	40 e0       	ldi	r20, 0x00	; 0
    111c:	44 06       	cpc	r4, r20
    111e:	41 e0       	ldi	r20, 0x01	; 1
    1120:	54 06       	cpc	r5, r20
    1122:	30 f0       	brcs	.+12     	; 0x1130 <__umoddi3+0x10e>
    1124:	b8 e1       	ldi	r27, 0x18	; 24
    1126:	eb 2e       	mov	r14, r27
    1128:	f1 2c       	mov	r15, r1
    112a:	01 2d       	mov	r16, r1
    112c:	11 2d       	mov	r17, r1
    112e:	05 c0       	rjmp	.+10     	; 0x113a <__umoddi3+0x118>
    1130:	a0 e1       	ldi	r26, 0x10	; 16
    1132:	ea 2e       	mov	r14, r26
    1134:	f1 2c       	mov	r15, r1
    1136:	01 2d       	mov	r16, r1
    1138:	11 2d       	mov	r17, r1
    113a:	d2 01       	movw	r26, r4
    113c:	c1 01       	movw	r24, r2
    113e:	0e 2c       	mov	r0, r14
    1140:	04 c0       	rjmp	.+8      	; 0x114a <__umoddi3+0x128>
    1142:	b6 95       	lsr	r27
    1144:	a7 95       	ror	r26
    1146:	97 95       	ror	r25
    1148:	87 95       	ror	r24
    114a:	0a 94       	dec	r0
    114c:	d2 f7       	brpl	.-12     	; 0x1142 <__umoddi3+0x120>
    114e:	83 58       	subi	r24, 0x83	; 131
    1150:	9f 4f       	sbci	r25, 0xFF	; 255
    1152:	dc 01       	movw	r26, r24
    1154:	2c 91       	ld	r18, X
    1156:	80 e2       	ldi	r24, 0x20	; 32
    1158:	90 e0       	ldi	r25, 0x00	; 0
    115a:	a0 e0       	ldi	r26, 0x00	; 0
    115c:	b0 e0       	ldi	r27, 0x00	; 0
    115e:	8e 19       	sub	r24, r14
    1160:	9f 09       	sbc	r25, r15
    1162:	a0 0b       	sbc	r26, r16
    1164:	b1 0b       	sbc	r27, r17
    1166:	5c 01       	movw	r10, r24
    1168:	6d 01       	movw	r12, r26
    116a:	a2 1a       	sub	r10, r18
    116c:	b1 08       	sbc	r11, r1
    116e:	c1 08       	sbc	r12, r1
    1170:	d1 08       	sbc	r13, r1
    1172:	a9 ae       	std	Y+57, r10	; 0x39
    1174:	ba ae       	std	Y+58, r11	; 0x3a
    1176:	cb ae       	std	Y+59, r12	; 0x3b
    1178:	dc ae       	std	Y+60, r13	; 0x3c
    117a:	a1 14       	cp	r10, r1
    117c:	b1 04       	cpc	r11, r1
    117e:	c1 04       	cpc	r12, r1
    1180:	d1 04       	cpc	r13, r1
    1182:	09 f4       	brne	.+2      	; 0x1186 <__umoddi3+0x164>
    1184:	3f c0       	rjmp	.+126    	; 0x1204 <__umoddi3+0x1e2>
    1186:	69 ad       	ldd	r22, Y+57	; 0x39
    1188:	06 2e       	mov	r0, r22
    118a:	04 c0       	rjmp	.+8      	; 0x1194 <__umoddi3+0x172>
    118c:	22 0c       	add	r2, r2
    118e:	33 1c       	adc	r3, r3
    1190:	44 1c       	adc	r4, r4
    1192:	55 1c       	adc	r5, r5
    1194:	0a 94       	dec	r0
    1196:	d2 f7       	brpl	.-12     	; 0x118c <__umoddi3+0x16a>
    1198:	a4 01       	movw	r20, r8
    119a:	93 01       	movw	r18, r6
    119c:	06 2e       	mov	r0, r22
    119e:	04 c0       	rjmp	.+8      	; 0x11a8 <__umoddi3+0x186>
    11a0:	22 0f       	add	r18, r18
    11a2:	33 1f       	adc	r19, r19
    11a4:	44 1f       	adc	r20, r20
    11a6:	55 1f       	adc	r21, r21
    11a8:	0a 94       	dec	r0
    11aa:	d2 f7       	brpl	.-12     	; 0x11a0 <__umoddi3+0x17e>
    11ac:	80 e2       	ldi	r24, 0x20	; 32
    11ae:	90 e0       	ldi	r25, 0x00	; 0
    11b0:	8a 19       	sub	r24, r10
    11b2:	9b 09       	sbc	r25, r11
    11b4:	6c 96       	adiw	r28, 0x1c	; 28
    11b6:	cc ac       	ldd	r12, Y+60	; 0x3c
    11b8:	dd ac       	ldd	r13, Y+61	; 0x3d
    11ba:	ee ac       	ldd	r14, Y+62	; 0x3e
    11bc:	ff ac       	ldd	r15, Y+63	; 0x3f
    11be:	6c 97       	sbiw	r28, 0x1c	; 28
    11c0:	04 c0       	rjmp	.+8      	; 0x11ca <__umoddi3+0x1a8>
    11c2:	f6 94       	lsr	r15
    11c4:	e7 94       	ror	r14
    11c6:	d7 94       	ror	r13
    11c8:	c7 94       	ror	r12
    11ca:	8a 95       	dec	r24
    11cc:	d2 f7       	brpl	.-12     	; 0x11c2 <__umoddi3+0x1a0>
    11ce:	87 01       	movw	r16, r14
    11d0:	76 01       	movw	r14, r12
    11d2:	e2 2a       	or	r14, r18
    11d4:	f3 2a       	or	r15, r19
    11d6:	04 2b       	or	r16, r20
    11d8:	15 2b       	or	r17, r21
    11da:	ed aa       	std	Y+53, r14	; 0x35
    11dc:	fe aa       	std	Y+54, r15	; 0x36
    11de:	0f ab       	std	Y+55, r16	; 0x37
    11e0:	18 af       	std	Y+56, r17	; 0x38
    11e2:	6c 96       	adiw	r28, 0x1c	; 28
    11e4:	8c ad       	ldd	r24, Y+60	; 0x3c
    11e6:	9d ad       	ldd	r25, Y+61	; 0x3d
    11e8:	ae ad       	ldd	r26, Y+62	; 0x3e
    11ea:	bf ad       	ldd	r27, Y+63	; 0x3f
    11ec:	6c 97       	sbiw	r28, 0x1c	; 28
    11ee:	04 c0       	rjmp	.+8      	; 0x11f8 <__umoddi3+0x1d6>
    11f0:	88 0f       	add	r24, r24
    11f2:	99 1f       	adc	r25, r25
    11f4:	aa 1f       	adc	r26, r26
    11f6:	bb 1f       	adc	r27, r27
    11f8:	6a 95       	dec	r22
    11fa:	d2 f7       	brpl	.-12     	; 0x11f0 <__umoddi3+0x1ce>
    11fc:	89 ab       	std	Y+49, r24	; 0x31
    11fe:	9a ab       	std	Y+50, r25	; 0x32
    1200:	ab ab       	std	Y+51, r26	; 0x33
    1202:	bc ab       	std	Y+52, r27	; 0x34
    1204:	32 01       	movw	r6, r4
    1206:	88 24       	eor	r8, r8
    1208:	99 24       	eor	r9, r9
    120a:	b2 01       	movw	r22, r4
    120c:	a1 01       	movw	r20, r2
    120e:	60 70       	andi	r22, 0x00	; 0
    1210:	70 70       	andi	r23, 0x00	; 0
    1212:	21 96       	adiw	r28, 0x01	; 1
    1214:	4c af       	std	Y+60, r20	; 0x3c
    1216:	5d af       	std	Y+61, r21	; 0x3d
    1218:	6e af       	std	Y+62, r22	; 0x3e
    121a:	7f af       	std	Y+63, r23	; 0x3f
    121c:	21 97       	sbiw	r28, 0x01	; 1
    121e:	6d a9       	ldd	r22, Y+53	; 0x35
    1220:	7e a9       	ldd	r23, Y+54	; 0x36
    1222:	8f a9       	ldd	r24, Y+55	; 0x37
    1224:	98 ad       	ldd	r25, Y+56	; 0x38
    1226:	a4 01       	movw	r20, r8
    1228:	93 01       	movw	r18, r6
    122a:	0e 94 90 2d 	call	0x5b20	; 0x5b20 <__udivmodsi4>
    122e:	7b 01       	movw	r14, r22
    1230:	8c 01       	movw	r16, r24
    1232:	6d a9       	ldd	r22, Y+53	; 0x35
    1234:	7e a9       	ldd	r23, Y+54	; 0x36
    1236:	8f a9       	ldd	r24, Y+55	; 0x37
    1238:	98 ad       	ldd	r25, Y+56	; 0x38
    123a:	a4 01       	movw	r20, r8
    123c:	93 01       	movw	r18, r6
    123e:	0e 94 90 2d 	call	0x5b20	; 0x5b20 <__udivmodsi4>
    1242:	ca 01       	movw	r24, r20
    1244:	b9 01       	movw	r22, r18
    1246:	21 96       	adiw	r28, 0x01	; 1
    1248:	2c ad       	ldd	r18, Y+60	; 0x3c
    124a:	3d ad       	ldd	r19, Y+61	; 0x3d
    124c:	4e ad       	ldd	r20, Y+62	; 0x3e
    124e:	5f ad       	ldd	r21, Y+63	; 0x3f
    1250:	21 97       	sbiw	r28, 0x01	; 1
    1252:	0e 94 71 2d 	call	0x5ae2	; 0x5ae2 <__mulsi3>
    1256:	9b 01       	movw	r18, r22
    1258:	ac 01       	movw	r20, r24
    125a:	87 01       	movw	r16, r14
    125c:	ff 24       	eor	r15, r15
    125e:	ee 24       	eor	r14, r14
    1260:	a9 a8       	ldd	r10, Y+49	; 0x31
    1262:	ba a8       	ldd	r11, Y+50	; 0x32
    1264:	cb a8       	ldd	r12, Y+51	; 0x33
    1266:	dc a8       	ldd	r13, Y+52	; 0x34
    1268:	c6 01       	movw	r24, r12
    126a:	aa 27       	eor	r26, r26
    126c:	bb 27       	eor	r27, r27
    126e:	57 01       	movw	r10, r14
    1270:	68 01       	movw	r12, r16
    1272:	a8 2a       	or	r10, r24
    1274:	b9 2a       	or	r11, r25
    1276:	ca 2a       	or	r12, r26
    1278:	db 2a       	or	r13, r27
    127a:	a2 16       	cp	r10, r18
    127c:	b3 06       	cpc	r11, r19
    127e:	c4 06       	cpc	r12, r20
    1280:	d5 06       	cpc	r13, r21
    1282:	90 f4       	brcc	.+36     	; 0x12a8 <__umoddi3+0x286>
    1284:	a2 0c       	add	r10, r2
    1286:	b3 1c       	adc	r11, r3
    1288:	c4 1c       	adc	r12, r4
    128a:	d5 1c       	adc	r13, r5
    128c:	a2 14       	cp	r10, r2
    128e:	b3 04       	cpc	r11, r3
    1290:	c4 04       	cpc	r12, r4
    1292:	d5 04       	cpc	r13, r5
    1294:	48 f0       	brcs	.+18     	; 0x12a8 <__umoddi3+0x286>
    1296:	a2 16       	cp	r10, r18
    1298:	b3 06       	cpc	r11, r19
    129a:	c4 06       	cpc	r12, r20
    129c:	d5 06       	cpc	r13, r21
    129e:	20 f4       	brcc	.+8      	; 0x12a8 <__umoddi3+0x286>
    12a0:	a2 0c       	add	r10, r2
    12a2:	b3 1c       	adc	r11, r3
    12a4:	c4 1c       	adc	r12, r4
    12a6:	d5 1c       	adc	r13, r5
    12a8:	a2 1a       	sub	r10, r18
    12aa:	b3 0a       	sbc	r11, r19
    12ac:	c4 0a       	sbc	r12, r20
    12ae:	d5 0a       	sbc	r13, r21
    12b0:	c6 01       	movw	r24, r12
    12b2:	b5 01       	movw	r22, r10
    12b4:	a4 01       	movw	r20, r8
    12b6:	93 01       	movw	r18, r6
    12b8:	0e 94 90 2d 	call	0x5b20	; 0x5b20 <__udivmodsi4>
    12bc:	7b 01       	movw	r14, r22
    12be:	8c 01       	movw	r16, r24
    12c0:	c6 01       	movw	r24, r12
    12c2:	b5 01       	movw	r22, r10
    12c4:	a4 01       	movw	r20, r8
    12c6:	93 01       	movw	r18, r6
    12c8:	0e 94 90 2d 	call	0x5b20	; 0x5b20 <__udivmodsi4>
    12cc:	ca 01       	movw	r24, r20
    12ce:	b9 01       	movw	r22, r18
    12d0:	21 96       	adiw	r28, 0x01	; 1
    12d2:	2c ad       	ldd	r18, Y+60	; 0x3c
    12d4:	3d ad       	ldd	r19, Y+61	; 0x3d
    12d6:	4e ad       	ldd	r20, Y+62	; 0x3e
    12d8:	5f ad       	ldd	r21, Y+63	; 0x3f
    12da:	21 97       	sbiw	r28, 0x01	; 1
    12dc:	ba c1       	rjmp	.+884    	; 0x1652 <__umoddi3+0x630>
    12de:	21 14       	cp	r2, r1
    12e0:	31 04       	cpc	r3, r1
    12e2:	41 04       	cpc	r4, r1
    12e4:	51 04       	cpc	r5, r1
    12e6:	71 f4       	brne	.+28     	; 0x1304 <__umoddi3+0x2e2>
    12e8:	61 e0       	ldi	r22, 0x01	; 1
    12ea:	70 e0       	ldi	r23, 0x00	; 0
    12ec:	80 e0       	ldi	r24, 0x00	; 0
    12ee:	90 e0       	ldi	r25, 0x00	; 0
    12f0:	20 e0       	ldi	r18, 0x00	; 0
    12f2:	30 e0       	ldi	r19, 0x00	; 0
    12f4:	40 e0       	ldi	r20, 0x00	; 0
    12f6:	50 e0       	ldi	r21, 0x00	; 0
    12f8:	0e 94 90 2d 	call	0x5b20	; 0x5b20 <__udivmodsi4>
    12fc:	c9 01       	movw	r24, r18
    12fe:	da 01       	movw	r26, r20
    1300:	1c 01       	movw	r2, r24
    1302:	2d 01       	movw	r4, r26
    1304:	00 e0       	ldi	r16, 0x00	; 0
    1306:	20 16       	cp	r2, r16
    1308:	00 e0       	ldi	r16, 0x00	; 0
    130a:	30 06       	cpc	r3, r16
    130c:	01 e0       	ldi	r16, 0x01	; 1
    130e:	40 06       	cpc	r4, r16
    1310:	00 e0       	ldi	r16, 0x00	; 0
    1312:	50 06       	cpc	r5, r16
    1314:	88 f4       	brcc	.+34     	; 0x1338 <__umoddi3+0x316>
    1316:	1f ef       	ldi	r17, 0xFF	; 255
    1318:	21 16       	cp	r2, r17
    131a:	31 04       	cpc	r3, r1
    131c:	41 04       	cpc	r4, r1
    131e:	51 04       	cpc	r5, r1
    1320:	39 f0       	breq	.+14     	; 0x1330 <__umoddi3+0x30e>
    1322:	30 f0       	brcs	.+12     	; 0x1330 <__umoddi3+0x30e>
    1324:	68 e0       	ldi	r22, 0x08	; 8
    1326:	e6 2e       	mov	r14, r22
    1328:	f1 2c       	mov	r15, r1
    132a:	01 2d       	mov	r16, r1
    132c:	11 2d       	mov	r17, r1
    132e:	18 c0       	rjmp	.+48     	; 0x1360 <__umoddi3+0x33e>
    1330:	ee 24       	eor	r14, r14
    1332:	ff 24       	eor	r15, r15
    1334:	87 01       	movw	r16, r14
    1336:	14 c0       	rjmp	.+40     	; 0x1360 <__umoddi3+0x33e>
    1338:	40 e0       	ldi	r20, 0x00	; 0
    133a:	24 16       	cp	r2, r20
    133c:	40 e0       	ldi	r20, 0x00	; 0
    133e:	34 06       	cpc	r3, r20
    1340:	40 e0       	ldi	r20, 0x00	; 0
    1342:	44 06       	cpc	r4, r20
    1344:	41 e0       	ldi	r20, 0x01	; 1
    1346:	54 06       	cpc	r5, r20
    1348:	30 f0       	brcs	.+12     	; 0x1356 <__umoddi3+0x334>
    134a:	58 e1       	ldi	r21, 0x18	; 24
    134c:	e5 2e       	mov	r14, r21
    134e:	f1 2c       	mov	r15, r1
    1350:	01 2d       	mov	r16, r1
    1352:	11 2d       	mov	r17, r1
    1354:	05 c0       	rjmp	.+10     	; 0x1360 <__umoddi3+0x33e>
    1356:	40 e1       	ldi	r20, 0x10	; 16
    1358:	e4 2e       	mov	r14, r20
    135a:	f1 2c       	mov	r15, r1
    135c:	01 2d       	mov	r16, r1
    135e:	11 2d       	mov	r17, r1
    1360:	d2 01       	movw	r26, r4
    1362:	c1 01       	movw	r24, r2
    1364:	0e 2c       	mov	r0, r14
    1366:	04 c0       	rjmp	.+8      	; 0x1370 <__umoddi3+0x34e>
    1368:	b6 95       	lsr	r27
    136a:	a7 95       	ror	r26
    136c:	97 95       	ror	r25
    136e:	87 95       	ror	r24
    1370:	0a 94       	dec	r0
    1372:	d2 f7       	brpl	.-12     	; 0x1368 <__umoddi3+0x346>
    1374:	83 58       	subi	r24, 0x83	; 131
    1376:	9f 4f       	sbci	r25, 0xFF	; 255
    1378:	dc 01       	movw	r26, r24
    137a:	2c 91       	ld	r18, X
    137c:	30 e2       	ldi	r19, 0x20	; 32
    137e:	a3 2e       	mov	r10, r19
    1380:	b1 2c       	mov	r11, r1
    1382:	c1 2c       	mov	r12, r1
    1384:	d1 2c       	mov	r13, r1
    1386:	d6 01       	movw	r26, r12
    1388:	c5 01       	movw	r24, r10
    138a:	8e 19       	sub	r24, r14
    138c:	9f 09       	sbc	r25, r15
    138e:	a0 0b       	sbc	r26, r16
    1390:	b1 0b       	sbc	r27, r17
    1392:	7c 01       	movw	r14, r24
    1394:	8d 01       	movw	r16, r26
    1396:	e2 1a       	sub	r14, r18
    1398:	f1 08       	sbc	r15, r1
    139a:	01 09       	sbc	r16, r1
    139c:	11 09       	sbc	r17, r1
    139e:	e9 ae       	std	Y+57, r14	; 0x39
    13a0:	fa ae       	std	Y+58, r15	; 0x3a
    13a2:	0b af       	std	Y+59, r16	; 0x3b
    13a4:	1c af       	std	Y+60, r17	; 0x3c
    13a6:	e1 14       	cp	r14, r1
    13a8:	f1 04       	cpc	r15, r1
    13aa:	01 05       	cpc	r16, r1
    13ac:	11 05       	cpc	r17, r1
    13ae:	39 f4       	brne	.+14     	; 0x13be <__umoddi3+0x39c>
    13b0:	64 01       	movw	r12, r8
    13b2:	53 01       	movw	r10, r6
    13b4:	a2 18       	sub	r10, r2
    13b6:	b3 08       	sbc	r11, r3
    13b8:	c4 08       	sbc	r12, r4
    13ba:	d5 08       	sbc	r13, r5
    13bc:	e2 c0       	rjmp	.+452    	; 0x1582 <__umoddi3+0x560>
    13be:	f9 ac       	ldd	r15, Y+57	; 0x39
    13c0:	68 96       	adiw	r28, 0x18	; 24
    13c2:	ff ae       	std	Y+63, r15	; 0x3f
    13c4:	68 97       	sbiw	r28, 0x18	; 24
    13c6:	0f 2c       	mov	r0, r15
    13c8:	04 c0       	rjmp	.+8      	; 0x13d2 <__umoddi3+0x3b0>
    13ca:	22 0c       	add	r2, r2
    13cc:	33 1c       	adc	r3, r3
    13ce:	44 1c       	adc	r4, r4
    13d0:	55 1c       	adc	r5, r5
    13d2:	0a 94       	dec	r0
    13d4:	d2 f7       	brpl	.-12     	; 0x13ca <__umoddi3+0x3a8>
    13d6:	8a 2d       	mov	r24, r10
    13d8:	8f 19       	sub	r24, r15
    13da:	64 01       	movw	r12, r8
    13dc:	53 01       	movw	r10, r6
    13de:	08 2e       	mov	r0, r24
    13e0:	04 c0       	rjmp	.+8      	; 0x13ea <__umoddi3+0x3c8>
    13e2:	d6 94       	lsr	r13
    13e4:	c7 94       	ror	r12
    13e6:	b7 94       	ror	r11
    13e8:	a7 94       	ror	r10
    13ea:	0a 94       	dec	r0
    13ec:	d2 f7       	brpl	.-12     	; 0x13e2 <__umoddi3+0x3c0>
    13ee:	a4 01       	movw	r20, r8
    13f0:	93 01       	movw	r18, r6
    13f2:	04 c0       	rjmp	.+8      	; 0x13fc <__umoddi3+0x3da>
    13f4:	22 0f       	add	r18, r18
    13f6:	33 1f       	adc	r19, r19
    13f8:	44 1f       	adc	r20, r20
    13fa:	55 1f       	adc	r21, r21
    13fc:	fa 94       	dec	r15
    13fe:	d2 f7       	brpl	.-12     	; 0x13f4 <__umoddi3+0x3d2>
    1400:	6c 96       	adiw	r28, 0x1c	; 28
    1402:	6c ac       	ldd	r6, Y+60	; 0x3c
    1404:	7d ac       	ldd	r7, Y+61	; 0x3d
    1406:	8e ac       	ldd	r8, Y+62	; 0x3e
    1408:	9f ac       	ldd	r9, Y+63	; 0x3f
    140a:	6c 97       	sbiw	r28, 0x1c	; 28
    140c:	04 c0       	rjmp	.+8      	; 0x1416 <__umoddi3+0x3f4>
    140e:	96 94       	lsr	r9
    1410:	87 94       	ror	r8
    1412:	77 94       	ror	r7
    1414:	67 94       	ror	r6
    1416:	8a 95       	dec	r24
    1418:	d2 f7       	brpl	.-12     	; 0x140e <__umoddi3+0x3ec>
    141a:	84 01       	movw	r16, r8
    141c:	73 01       	movw	r14, r6
    141e:	e2 2a       	or	r14, r18
    1420:	f3 2a       	or	r15, r19
    1422:	04 2b       	or	r16, r20
    1424:	15 2b       	or	r17, r21
    1426:	ed a6       	std	Y+45, r14	; 0x2d
    1428:	fe a6       	std	Y+46, r15	; 0x2e
    142a:	0f a7       	std	Y+47, r16	; 0x2f
    142c:	18 ab       	std	Y+48, r17	; 0x30
    142e:	32 01       	movw	r6, r4
    1430:	88 24       	eor	r8, r8
    1432:	99 24       	eor	r9, r9
    1434:	b2 01       	movw	r22, r4
    1436:	a1 01       	movw	r20, r2
    1438:	60 70       	andi	r22, 0x00	; 0
    143a:	70 70       	andi	r23, 0x00	; 0
    143c:	25 96       	adiw	r28, 0x05	; 5
    143e:	4c af       	std	Y+60, r20	; 0x3c
    1440:	5d af       	std	Y+61, r21	; 0x3d
    1442:	6e af       	std	Y+62, r22	; 0x3e
    1444:	7f af       	std	Y+63, r23	; 0x3f
    1446:	25 97       	sbiw	r28, 0x05	; 5
    1448:	c6 01       	movw	r24, r12
    144a:	b5 01       	movw	r22, r10
    144c:	a4 01       	movw	r20, r8
    144e:	93 01       	movw	r18, r6
    1450:	0e 94 90 2d 	call	0x5b20	; 0x5b20 <__udivmodsi4>
    1454:	7b 01       	movw	r14, r22
    1456:	8c 01       	movw	r16, r24
    1458:	c6 01       	movw	r24, r12
    145a:	b5 01       	movw	r22, r10
    145c:	a4 01       	movw	r20, r8
    145e:	93 01       	movw	r18, r6
    1460:	0e 94 90 2d 	call	0x5b20	; 0x5b20 <__udivmodsi4>
    1464:	ca 01       	movw	r24, r20
    1466:	b9 01       	movw	r22, r18
    1468:	25 96       	adiw	r28, 0x05	; 5
    146a:	2c ad       	ldd	r18, Y+60	; 0x3c
    146c:	3d ad       	ldd	r19, Y+61	; 0x3d
    146e:	4e ad       	ldd	r20, Y+62	; 0x3e
    1470:	5f ad       	ldd	r21, Y+63	; 0x3f
    1472:	25 97       	sbiw	r28, 0x05	; 5
    1474:	0e 94 71 2d 	call	0x5ae2	; 0x5ae2 <__mulsi3>
    1478:	9b 01       	movw	r18, r22
    147a:	ac 01       	movw	r20, r24
    147c:	87 01       	movw	r16, r14
    147e:	ff 24       	eor	r15, r15
    1480:	ee 24       	eor	r14, r14
    1482:	ad a4       	ldd	r10, Y+45	; 0x2d
    1484:	be a4       	ldd	r11, Y+46	; 0x2e
    1486:	cf a4       	ldd	r12, Y+47	; 0x2f
    1488:	d8 a8       	ldd	r13, Y+48	; 0x30
    148a:	c6 01       	movw	r24, r12
    148c:	aa 27       	eor	r26, r26
    148e:	bb 27       	eor	r27, r27
    1490:	5c 01       	movw	r10, r24
    1492:	6d 01       	movw	r12, r26
    1494:	ae 28       	or	r10, r14
    1496:	bf 28       	or	r11, r15
    1498:	c0 2a       	or	r12, r16
    149a:	d1 2a       	or	r13, r17
    149c:	a2 16       	cp	r10, r18
    149e:	b3 06       	cpc	r11, r19
    14a0:	c4 06       	cpc	r12, r20
    14a2:	d5 06       	cpc	r13, r21
    14a4:	90 f4       	brcc	.+36     	; 0x14ca <__umoddi3+0x4a8>
    14a6:	a2 0c       	add	r10, r2
    14a8:	b3 1c       	adc	r11, r3
    14aa:	c4 1c       	adc	r12, r4
    14ac:	d5 1c       	adc	r13, r5
    14ae:	a2 14       	cp	r10, r2
    14b0:	b3 04       	cpc	r11, r3
    14b2:	c4 04       	cpc	r12, r4
    14b4:	d5 04       	cpc	r13, r5
    14b6:	48 f0       	brcs	.+18     	; 0x14ca <__umoddi3+0x4a8>
    14b8:	a2 16       	cp	r10, r18
    14ba:	b3 06       	cpc	r11, r19
    14bc:	c4 06       	cpc	r12, r20
    14be:	d5 06       	cpc	r13, r21
    14c0:	20 f4       	brcc	.+8      	; 0x14ca <__umoddi3+0x4a8>
    14c2:	a2 0c       	add	r10, r2
    14c4:	b3 1c       	adc	r11, r3
    14c6:	c4 1c       	adc	r12, r4
    14c8:	d5 1c       	adc	r13, r5
    14ca:	a2 1a       	sub	r10, r18
    14cc:	b3 0a       	sbc	r11, r19
    14ce:	c4 0a       	sbc	r12, r20
    14d0:	d5 0a       	sbc	r13, r21
    14d2:	c6 01       	movw	r24, r12
    14d4:	b5 01       	movw	r22, r10
    14d6:	a4 01       	movw	r20, r8
    14d8:	93 01       	movw	r18, r6
    14da:	0e 94 90 2d 	call	0x5b20	; 0x5b20 <__udivmodsi4>
    14de:	7b 01       	movw	r14, r22
    14e0:	8c 01       	movw	r16, r24
    14e2:	c6 01       	movw	r24, r12
    14e4:	b5 01       	movw	r22, r10
    14e6:	a4 01       	movw	r20, r8
    14e8:	93 01       	movw	r18, r6
    14ea:	0e 94 90 2d 	call	0x5b20	; 0x5b20 <__udivmodsi4>
    14ee:	ca 01       	movw	r24, r20
    14f0:	b9 01       	movw	r22, r18
    14f2:	25 96       	adiw	r28, 0x05	; 5
    14f4:	2c ad       	ldd	r18, Y+60	; 0x3c
    14f6:	3d ad       	ldd	r19, Y+61	; 0x3d
    14f8:	4e ad       	ldd	r20, Y+62	; 0x3e
    14fa:	5f ad       	ldd	r21, Y+63	; 0x3f
    14fc:	25 97       	sbiw	r28, 0x05	; 5
    14fe:	0e 94 71 2d 	call	0x5ae2	; 0x5ae2 <__mulsi3>
    1502:	9b 01       	movw	r18, r22
    1504:	ac 01       	movw	r20, r24
    1506:	87 01       	movw	r16, r14
    1508:	ff 24       	eor	r15, r15
    150a:	ee 24       	eor	r14, r14
    150c:	8d a5       	ldd	r24, Y+45	; 0x2d
    150e:	9e a5       	ldd	r25, Y+46	; 0x2e
    1510:	af a5       	ldd	r26, Y+47	; 0x2f
    1512:	b8 a9       	ldd	r27, Y+48	; 0x30
    1514:	a0 70       	andi	r26, 0x00	; 0
    1516:	b0 70       	andi	r27, 0x00	; 0
    1518:	57 01       	movw	r10, r14
    151a:	68 01       	movw	r12, r16
    151c:	a8 2a       	or	r10, r24
    151e:	b9 2a       	or	r11, r25
    1520:	ca 2a       	or	r12, r26
    1522:	db 2a       	or	r13, r27
    1524:	a2 16       	cp	r10, r18
    1526:	b3 06       	cpc	r11, r19
    1528:	c4 06       	cpc	r12, r20
    152a:	d5 06       	cpc	r13, r21
    152c:	90 f4       	brcc	.+36     	; 0x1552 <__umoddi3+0x530>
    152e:	a2 0c       	add	r10, r2
    1530:	b3 1c       	adc	r11, r3
    1532:	c4 1c       	adc	r12, r4
    1534:	d5 1c       	adc	r13, r5
    1536:	a2 14       	cp	r10, r2
    1538:	b3 04       	cpc	r11, r3
    153a:	c4 04       	cpc	r12, r4
    153c:	d5 04       	cpc	r13, r5
    153e:	48 f0       	brcs	.+18     	; 0x1552 <__umoddi3+0x530>
    1540:	a2 16       	cp	r10, r18
    1542:	b3 06       	cpc	r11, r19
    1544:	c4 06       	cpc	r12, r20
    1546:	d5 06       	cpc	r13, r21
    1548:	20 f4       	brcc	.+8      	; 0x1552 <__umoddi3+0x530>
    154a:	a2 0c       	add	r10, r2
    154c:	b3 1c       	adc	r11, r3
    154e:	c4 1c       	adc	r12, r4
    1550:	d5 1c       	adc	r13, r5
    1552:	6c 96       	adiw	r28, 0x1c	; 28
    1554:	ec ac       	ldd	r14, Y+60	; 0x3c
    1556:	fd ac       	ldd	r15, Y+61	; 0x3d
    1558:	0e ad       	ldd	r16, Y+62	; 0x3e
    155a:	1f ad       	ldd	r17, Y+63	; 0x3f
    155c:	6c 97       	sbiw	r28, 0x1c	; 28
    155e:	68 96       	adiw	r28, 0x18	; 24
    1560:	0f ac       	ldd	r0, Y+63	; 0x3f
    1562:	68 97       	sbiw	r28, 0x18	; 24
    1564:	04 c0       	rjmp	.+8      	; 0x156e <__umoddi3+0x54c>
    1566:	ee 0c       	add	r14, r14
    1568:	ff 1c       	adc	r15, r15
    156a:	00 1f       	adc	r16, r16
    156c:	11 1f       	adc	r17, r17
    156e:	0a 94       	dec	r0
    1570:	d2 f7       	brpl	.-12     	; 0x1566 <__umoddi3+0x544>
    1572:	e9 aa       	std	Y+49, r14	; 0x31
    1574:	fa aa       	std	Y+50, r15	; 0x32
    1576:	0b ab       	std	Y+51, r16	; 0x33
    1578:	1c ab       	std	Y+52, r17	; 0x34
    157a:	a2 1a       	sub	r10, r18
    157c:	b3 0a       	sbc	r11, r19
    157e:	c4 0a       	sbc	r12, r20
    1580:	d5 0a       	sbc	r13, r21
    1582:	32 01       	movw	r6, r4
    1584:	88 24       	eor	r8, r8
    1586:	99 24       	eor	r9, r9
    1588:	b2 01       	movw	r22, r4
    158a:	a1 01       	movw	r20, r2
    158c:	60 70       	andi	r22, 0x00	; 0
    158e:	70 70       	andi	r23, 0x00	; 0
    1590:	29 96       	adiw	r28, 0x09	; 9
    1592:	4c af       	std	Y+60, r20	; 0x3c
    1594:	5d af       	std	Y+61, r21	; 0x3d
    1596:	6e af       	std	Y+62, r22	; 0x3e
    1598:	7f af       	std	Y+63, r23	; 0x3f
    159a:	29 97       	sbiw	r28, 0x09	; 9
    159c:	c6 01       	movw	r24, r12
    159e:	b5 01       	movw	r22, r10
    15a0:	a4 01       	movw	r20, r8
    15a2:	93 01       	movw	r18, r6
    15a4:	0e 94 90 2d 	call	0x5b20	; 0x5b20 <__udivmodsi4>
    15a8:	7b 01       	movw	r14, r22
    15aa:	8c 01       	movw	r16, r24
    15ac:	c6 01       	movw	r24, r12
    15ae:	b5 01       	movw	r22, r10
    15b0:	a4 01       	movw	r20, r8
    15b2:	93 01       	movw	r18, r6
    15b4:	0e 94 90 2d 	call	0x5b20	; 0x5b20 <__udivmodsi4>
    15b8:	ca 01       	movw	r24, r20
    15ba:	b9 01       	movw	r22, r18
    15bc:	29 96       	adiw	r28, 0x09	; 9
    15be:	2c ad       	ldd	r18, Y+60	; 0x3c
    15c0:	3d ad       	ldd	r19, Y+61	; 0x3d
    15c2:	4e ad       	ldd	r20, Y+62	; 0x3e
    15c4:	5f ad       	ldd	r21, Y+63	; 0x3f
    15c6:	29 97       	sbiw	r28, 0x09	; 9
    15c8:	0e 94 71 2d 	call	0x5ae2	; 0x5ae2 <__mulsi3>
    15cc:	9b 01       	movw	r18, r22
    15ce:	ac 01       	movw	r20, r24
    15d0:	87 01       	movw	r16, r14
    15d2:	ff 24       	eor	r15, r15
    15d4:	ee 24       	eor	r14, r14
    15d6:	a9 a8       	ldd	r10, Y+49	; 0x31
    15d8:	ba a8       	ldd	r11, Y+50	; 0x32
    15da:	cb a8       	ldd	r12, Y+51	; 0x33
    15dc:	dc a8       	ldd	r13, Y+52	; 0x34
    15de:	c6 01       	movw	r24, r12
    15e0:	aa 27       	eor	r26, r26
    15e2:	bb 27       	eor	r27, r27
    15e4:	57 01       	movw	r10, r14
    15e6:	68 01       	movw	r12, r16
    15e8:	a8 2a       	or	r10, r24
    15ea:	b9 2a       	or	r11, r25
    15ec:	ca 2a       	or	r12, r26
    15ee:	db 2a       	or	r13, r27
    15f0:	a2 16       	cp	r10, r18
    15f2:	b3 06       	cpc	r11, r19
    15f4:	c4 06       	cpc	r12, r20
    15f6:	d5 06       	cpc	r13, r21
    15f8:	90 f4       	brcc	.+36     	; 0x161e <__umoddi3+0x5fc>
    15fa:	a2 0c       	add	r10, r2
    15fc:	b3 1c       	adc	r11, r3
    15fe:	c4 1c       	adc	r12, r4
    1600:	d5 1c       	adc	r13, r5
    1602:	a2 14       	cp	r10, r2
    1604:	b3 04       	cpc	r11, r3
    1606:	c4 04       	cpc	r12, r4
    1608:	d5 04       	cpc	r13, r5
    160a:	48 f0       	brcs	.+18     	; 0x161e <__umoddi3+0x5fc>
    160c:	a2 16       	cp	r10, r18
    160e:	b3 06       	cpc	r11, r19
    1610:	c4 06       	cpc	r12, r20
    1612:	d5 06       	cpc	r13, r21
    1614:	20 f4       	brcc	.+8      	; 0x161e <__umoddi3+0x5fc>
    1616:	a2 0c       	add	r10, r2
    1618:	b3 1c       	adc	r11, r3
    161a:	c4 1c       	adc	r12, r4
    161c:	d5 1c       	adc	r13, r5
    161e:	a2 1a       	sub	r10, r18
    1620:	b3 0a       	sbc	r11, r19
    1622:	c4 0a       	sbc	r12, r20
    1624:	d5 0a       	sbc	r13, r21
    1626:	c6 01       	movw	r24, r12
    1628:	b5 01       	movw	r22, r10
    162a:	a4 01       	movw	r20, r8
    162c:	93 01       	movw	r18, r6
    162e:	0e 94 90 2d 	call	0x5b20	; 0x5b20 <__udivmodsi4>
    1632:	7b 01       	movw	r14, r22
    1634:	8c 01       	movw	r16, r24
    1636:	c6 01       	movw	r24, r12
    1638:	b5 01       	movw	r22, r10
    163a:	a4 01       	movw	r20, r8
    163c:	93 01       	movw	r18, r6
    163e:	0e 94 90 2d 	call	0x5b20	; 0x5b20 <__udivmodsi4>
    1642:	ca 01       	movw	r24, r20
    1644:	b9 01       	movw	r22, r18
    1646:	29 96       	adiw	r28, 0x09	; 9
    1648:	2c ad       	ldd	r18, Y+60	; 0x3c
    164a:	3d ad       	ldd	r19, Y+61	; 0x3d
    164c:	4e ad       	ldd	r20, Y+62	; 0x3e
    164e:	5f ad       	ldd	r21, Y+63	; 0x3f
    1650:	29 97       	sbiw	r28, 0x09	; 9
    1652:	0e 94 71 2d 	call	0x5ae2	; 0x5ae2 <__mulsi3>
    1656:	9b 01       	movw	r18, r22
    1658:	ac 01       	movw	r20, r24
    165a:	87 01       	movw	r16, r14
    165c:	ff 24       	eor	r15, r15
    165e:	ee 24       	eor	r14, r14
    1660:	89 a9       	ldd	r24, Y+49	; 0x31
    1662:	9a a9       	ldd	r25, Y+50	; 0x32
    1664:	ab a9       	ldd	r26, Y+51	; 0x33
    1666:	bc a9       	ldd	r27, Y+52	; 0x34
    1668:	a0 70       	andi	r26, 0x00	; 0
    166a:	b0 70       	andi	r27, 0x00	; 0
    166c:	e8 2a       	or	r14, r24
    166e:	f9 2a       	or	r15, r25
    1670:	0a 2b       	or	r16, r26
    1672:	1b 2b       	or	r17, r27
    1674:	e2 16       	cp	r14, r18
    1676:	f3 06       	cpc	r15, r19
    1678:	04 07       	cpc	r16, r20
    167a:	15 07       	cpc	r17, r21
    167c:	90 f4       	brcc	.+36     	; 0x16a2 <__umoddi3+0x680>
    167e:	e2 0c       	add	r14, r2
    1680:	f3 1c       	adc	r15, r3
    1682:	04 1d       	adc	r16, r4
    1684:	15 1d       	adc	r17, r5
    1686:	e2 14       	cp	r14, r2
    1688:	f3 04       	cpc	r15, r3
    168a:	04 05       	cpc	r16, r4
    168c:	15 05       	cpc	r17, r5
    168e:	48 f0       	brcs	.+18     	; 0x16a2 <__umoddi3+0x680>
    1690:	e2 16       	cp	r14, r18
    1692:	f3 06       	cpc	r15, r19
    1694:	04 07       	cpc	r16, r20
    1696:	15 07       	cpc	r17, r21
    1698:	20 f4       	brcc	.+8      	; 0x16a2 <__umoddi3+0x680>
    169a:	e2 0c       	add	r14, r2
    169c:	f3 1c       	adc	r15, r3
    169e:	04 1d       	adc	r16, r4
    16a0:	15 1d       	adc	r17, r5
    16a2:	e2 1a       	sub	r14, r18
    16a4:	f3 0a       	sbc	r15, r19
    16a6:	04 0b       	sbc	r16, r20
    16a8:	15 0b       	sbc	r17, r21
    16aa:	d8 01       	movw	r26, r16
    16ac:	c7 01       	movw	r24, r14
    16ae:	09 ac       	ldd	r0, Y+57	; 0x39
    16b0:	04 c0       	rjmp	.+8      	; 0x16ba <__umoddi3+0x698>
    16b2:	b6 95       	lsr	r27
    16b4:	a7 95       	ror	r26
    16b6:	97 95       	ror	r25
    16b8:	87 95       	ror	r24
    16ba:	0a 94       	dec	r0
    16bc:	d2 f7       	brpl	.-12     	; 0x16b2 <__umoddi3+0x690>
    16be:	89 8b       	std	Y+17, r24	; 0x11
    16c0:	9a 8b       	std	Y+18, r25	; 0x12
    16c2:	ab 8b       	std	Y+19, r26	; 0x13
    16c4:	bc 8b       	std	Y+20, r27	; 0x14
    16c6:	1d 8a       	std	Y+21, r1	; 0x15
    16c8:	1e 8a       	std	Y+22, r1	; 0x16
    16ca:	1f 8a       	std	Y+23, r1	; 0x17
    16cc:	18 8e       	std	Y+24, r1	; 0x18
    16ce:	28 2f       	mov	r18, r24
    16d0:	3a 89       	ldd	r19, Y+18	; 0x12
    16d2:	4b 89       	ldd	r20, Y+19	; 0x13
    16d4:	5c 89       	ldd	r21, Y+20	; 0x14
    16d6:	6d 89       	ldd	r22, Y+21	; 0x15
    16d8:	0c c3       	rjmp	.+1560   	; 0x1cf2 <__umoddi3+0xcd0>
    16da:	6a 14       	cp	r6, r10
    16dc:	7b 04       	cpc	r7, r11
    16de:	8c 04       	cpc	r8, r12
    16e0:	9d 04       	cpc	r9, r13
    16e2:	08 f4       	brcc	.+2      	; 0x16e6 <__umoddi3+0x6c4>
    16e4:	09 c3       	rjmp	.+1554   	; 0x1cf8 <__umoddi3+0xcd6>
    16e6:	00 e0       	ldi	r16, 0x00	; 0
    16e8:	a0 16       	cp	r10, r16
    16ea:	00 e0       	ldi	r16, 0x00	; 0
    16ec:	b0 06       	cpc	r11, r16
    16ee:	01 e0       	ldi	r16, 0x01	; 1
    16f0:	c0 06       	cpc	r12, r16
    16f2:	00 e0       	ldi	r16, 0x00	; 0
    16f4:	d0 06       	cpc	r13, r16
    16f6:	88 f4       	brcc	.+34     	; 0x171a <__umoddi3+0x6f8>
    16f8:	1f ef       	ldi	r17, 0xFF	; 255
    16fa:	a1 16       	cp	r10, r17
    16fc:	b1 04       	cpc	r11, r1
    16fe:	c1 04       	cpc	r12, r1
    1700:	d1 04       	cpc	r13, r1
    1702:	39 f0       	breq	.+14     	; 0x1712 <__umoddi3+0x6f0>
    1704:	30 f0       	brcs	.+12     	; 0x1712 <__umoddi3+0x6f0>
    1706:	28 e0       	ldi	r18, 0x08	; 8
    1708:	e2 2e       	mov	r14, r18
    170a:	f1 2c       	mov	r15, r1
    170c:	01 2d       	mov	r16, r1
    170e:	11 2d       	mov	r17, r1
    1710:	18 c0       	rjmp	.+48     	; 0x1742 <__umoddi3+0x720>
    1712:	ee 24       	eor	r14, r14
    1714:	ff 24       	eor	r15, r15
    1716:	87 01       	movw	r16, r14
    1718:	14 c0       	rjmp	.+40     	; 0x1742 <__umoddi3+0x720>
    171a:	40 e0       	ldi	r20, 0x00	; 0
    171c:	a4 16       	cp	r10, r20
    171e:	40 e0       	ldi	r20, 0x00	; 0
    1720:	b4 06       	cpc	r11, r20
    1722:	40 e0       	ldi	r20, 0x00	; 0
    1724:	c4 06       	cpc	r12, r20
    1726:	41 e0       	ldi	r20, 0x01	; 1
    1728:	d4 06       	cpc	r13, r20
    172a:	30 f0       	brcs	.+12     	; 0x1738 <__umoddi3+0x716>
    172c:	98 e1       	ldi	r25, 0x18	; 24
    172e:	e9 2e       	mov	r14, r25
    1730:	f1 2c       	mov	r15, r1
    1732:	01 2d       	mov	r16, r1
    1734:	11 2d       	mov	r17, r1
    1736:	05 c0       	rjmp	.+10     	; 0x1742 <__umoddi3+0x720>
    1738:	80 e1       	ldi	r24, 0x10	; 16
    173a:	e8 2e       	mov	r14, r24
    173c:	f1 2c       	mov	r15, r1
    173e:	01 2d       	mov	r16, r1
    1740:	11 2d       	mov	r17, r1
    1742:	d6 01       	movw	r26, r12
    1744:	c5 01       	movw	r24, r10
    1746:	0e 2c       	mov	r0, r14
    1748:	04 c0       	rjmp	.+8      	; 0x1752 <__umoddi3+0x730>
    174a:	b6 95       	lsr	r27
    174c:	a7 95       	ror	r26
    174e:	97 95       	ror	r25
    1750:	87 95       	ror	r24
    1752:	0a 94       	dec	r0
    1754:	d2 f7       	brpl	.-12     	; 0x174a <__umoddi3+0x728>
    1756:	83 58       	subi	r24, 0x83	; 131
    1758:	9f 4f       	sbci	r25, 0xFF	; 255
    175a:	dc 01       	movw	r26, r24
    175c:	2c 91       	ld	r18, X
    175e:	80 e2       	ldi	r24, 0x20	; 32
    1760:	90 e0       	ldi	r25, 0x00	; 0
    1762:	a0 e0       	ldi	r26, 0x00	; 0
    1764:	b0 e0       	ldi	r27, 0x00	; 0
    1766:	8e 19       	sub	r24, r14
    1768:	9f 09       	sbc	r25, r15
    176a:	a0 0b       	sbc	r26, r16
    176c:	b1 0b       	sbc	r27, r17
    176e:	82 1b       	sub	r24, r18
    1770:	91 09       	sbc	r25, r1
    1772:	a1 09       	sbc	r26, r1
    1774:	b1 09       	sbc	r27, r1
    1776:	00 97       	sbiw	r24, 0x00	; 0
    1778:	a1 05       	cpc	r26, r1
    177a:	b1 05       	cpc	r27, r1
    177c:	09 f0       	breq	.+2      	; 0x1780 <__umoddi3+0x75e>
    177e:	4f c0       	rjmp	.+158    	; 0x181e <__umoddi3+0x7fc>
    1780:	a6 14       	cp	r10, r6
    1782:	b7 04       	cpc	r11, r7
    1784:	c8 04       	cpc	r12, r8
    1786:	d9 04       	cpc	r13, r9
    1788:	58 f0       	brcs	.+22     	; 0x17a0 <__umoddi3+0x77e>
    178a:	6c 96       	adiw	r28, 0x1c	; 28
    178c:	ec ac       	ldd	r14, Y+60	; 0x3c
    178e:	fd ac       	ldd	r15, Y+61	; 0x3d
    1790:	0e ad       	ldd	r16, Y+62	; 0x3e
    1792:	1f ad       	ldd	r17, Y+63	; 0x3f
    1794:	6c 97       	sbiw	r28, 0x1c	; 28
    1796:	e2 14       	cp	r14, r2
    1798:	f3 04       	cpc	r15, r3
    179a:	04 05       	cpc	r16, r4
    179c:	15 05       	cpc	r17, r5
    179e:	68 f1       	brcs	.+90     	; 0x17fa <__umoddi3+0x7d8>
    17a0:	6c 96       	adiw	r28, 0x1c	; 28
    17a2:	ec ac       	ldd	r14, Y+60	; 0x3c
    17a4:	fd ac       	ldd	r15, Y+61	; 0x3d
    17a6:	0e ad       	ldd	r16, Y+62	; 0x3e
    17a8:	1f ad       	ldd	r17, Y+63	; 0x3f
    17aa:	6c 97       	sbiw	r28, 0x1c	; 28
    17ac:	e2 18       	sub	r14, r2
    17ae:	f3 08       	sbc	r15, r3
    17b0:	04 09       	sbc	r16, r4
    17b2:	15 09       	sbc	r17, r5
    17b4:	a4 01       	movw	r20, r8
    17b6:	93 01       	movw	r18, r6
    17b8:	2a 19       	sub	r18, r10
    17ba:	3b 09       	sbc	r19, r11
    17bc:	4c 09       	sbc	r20, r12
    17be:	5d 09       	sbc	r21, r13
    17c0:	aa 24       	eor	r10, r10
    17c2:	bb 24       	eor	r11, r11
    17c4:	65 01       	movw	r12, r10
    17c6:	6c 96       	adiw	r28, 0x1c	; 28
    17c8:	6c ad       	ldd	r22, Y+60	; 0x3c
    17ca:	7d ad       	ldd	r23, Y+61	; 0x3d
    17cc:	8e ad       	ldd	r24, Y+62	; 0x3e
    17ce:	9f ad       	ldd	r25, Y+63	; 0x3f
    17d0:	6c 97       	sbiw	r28, 0x1c	; 28
    17d2:	6e 15       	cp	r22, r14
    17d4:	7f 05       	cpc	r23, r15
    17d6:	80 07       	cpc	r24, r16
    17d8:	91 07       	cpc	r25, r17
    17da:	28 f4       	brcc	.+10     	; 0x17e6 <__umoddi3+0x7c4>
    17dc:	b1 e0       	ldi	r27, 0x01	; 1
    17de:	ab 2e       	mov	r10, r27
    17e0:	b1 2c       	mov	r11, r1
    17e2:	c1 2c       	mov	r12, r1
    17e4:	d1 2c       	mov	r13, r1
    17e6:	da 01       	movw	r26, r20
    17e8:	c9 01       	movw	r24, r18
    17ea:	8a 19       	sub	r24, r10
    17ec:	9b 09       	sbc	r25, r11
    17ee:	ac 09       	sbc	r26, r12
    17f0:	bd 09       	sbc	r27, r13
    17f2:	8d ab       	std	Y+53, r24	; 0x35
    17f4:	9e ab       	std	Y+54, r25	; 0x36
    17f6:	af ab       	std	Y+55, r26	; 0x37
    17f8:	b8 af       	std	Y+56, r27	; 0x38
    17fa:	e9 8a       	std	Y+17, r14	; 0x11
    17fc:	fa 8a       	std	Y+18, r15	; 0x12
    17fe:	0b 8b       	std	Y+19, r16	; 0x13
    1800:	1c 8b       	std	Y+20, r17	; 0x14
    1802:	6d a8       	ldd	r6, Y+53	; 0x35
    1804:	7e a8       	ldd	r7, Y+54	; 0x36
    1806:	8f a8       	ldd	r8, Y+55	; 0x37
    1808:	98 ac       	ldd	r9, Y+56	; 0x38
    180a:	6d 8a       	std	Y+21, r6	; 0x15
    180c:	7e 8a       	std	Y+22, r7	; 0x16
    180e:	8f 8a       	std	Y+23, r8	; 0x17
    1810:	98 8e       	std	Y+24, r9	; 0x18
    1812:	2e 2d       	mov	r18, r14
    1814:	3a 89       	ldd	r19, Y+18	; 0x12
    1816:	4b 89       	ldd	r20, Y+19	; 0x13
    1818:	5c 89       	ldd	r21, Y+20	; 0x14
    181a:	6d a9       	ldd	r22, Y+53	; 0x35
    181c:	6a c2       	rjmp	.+1236   	; 0x1cf2 <__umoddi3+0xcd0>
    181e:	67 96       	adiw	r28, 0x17	; 23
    1820:	8f af       	std	Y+63, r24	; 0x3f
    1822:	67 97       	sbiw	r28, 0x17	; 23
    1824:	a6 01       	movw	r20, r12
    1826:	95 01       	movw	r18, r10
    1828:	08 2e       	mov	r0, r24
    182a:	04 c0       	rjmp	.+8      	; 0x1834 <__umoddi3+0x812>
    182c:	22 0f       	add	r18, r18
    182e:	33 1f       	adc	r19, r19
    1830:	44 1f       	adc	r20, r20
    1832:	55 1f       	adc	r21, r21
    1834:	0a 94       	dec	r0
    1836:	d2 f7       	brpl	.-12     	; 0x182c <__umoddi3+0x80a>
    1838:	a0 e2       	ldi	r26, 0x20	; 32
    183a:	aa 2e       	mov	r10, r26
    183c:	a8 1a       	sub	r10, r24
    183e:	66 96       	adiw	r28, 0x16	; 22
    1840:	af ae       	std	Y+63, r10	; 0x3f
    1842:	66 97       	sbiw	r28, 0x16	; 22
    1844:	d2 01       	movw	r26, r4
    1846:	c1 01       	movw	r24, r2
    1848:	04 c0       	rjmp	.+8      	; 0x1852 <__umoddi3+0x830>
    184a:	b6 95       	lsr	r27
    184c:	a7 95       	ror	r26
    184e:	97 95       	ror	r25
    1850:	87 95       	ror	r24
    1852:	aa 94       	dec	r10
    1854:	d2 f7       	brpl	.-12     	; 0x184a <__umoddi3+0x828>
    1856:	6c 01       	movw	r12, r24
    1858:	7d 01       	movw	r14, r26
    185a:	c2 2a       	or	r12, r18
    185c:	d3 2a       	or	r13, r19
    185e:	e4 2a       	or	r14, r20
    1860:	f5 2a       	or	r15, r21
    1862:	c9 a6       	std	Y+41, r12	; 0x29
    1864:	da a6       	std	Y+42, r13	; 0x2a
    1866:	eb a6       	std	Y+43, r14	; 0x2b
    1868:	fc a6       	std	Y+44, r15	; 0x2c
    186a:	82 01       	movw	r16, r4
    186c:	71 01       	movw	r14, r2
    186e:	67 96       	adiw	r28, 0x17	; 23
    1870:	0f ac       	ldd	r0, Y+63	; 0x3f
    1872:	67 97       	sbiw	r28, 0x17	; 23
    1874:	04 c0       	rjmp	.+8      	; 0x187e <__umoddi3+0x85c>
    1876:	ee 0c       	add	r14, r14
    1878:	ff 1c       	adc	r15, r15
    187a:	00 1f       	adc	r16, r16
    187c:	11 1f       	adc	r17, r17
    187e:	0a 94       	dec	r0
    1880:	d2 f7       	brpl	.-12     	; 0x1876 <__umoddi3+0x854>
    1882:	ed a2       	std	Y+37, r14	; 0x25
    1884:	fe a2       	std	Y+38, r15	; 0x26
    1886:	0f a3       	std	Y+39, r16	; 0x27
    1888:	18 a7       	std	Y+40, r17	; 0x28
    188a:	64 01       	movw	r12, r8
    188c:	53 01       	movw	r10, r6
    188e:	66 96       	adiw	r28, 0x16	; 22
    1890:	0f ac       	ldd	r0, Y+63	; 0x3f
    1892:	66 97       	sbiw	r28, 0x16	; 22
    1894:	04 c0       	rjmp	.+8      	; 0x189e <__umoddi3+0x87c>
    1896:	d6 94       	lsr	r13
    1898:	c7 94       	ror	r12
    189a:	b7 94       	ror	r11
    189c:	a7 94       	ror	r10
    189e:	0a 94       	dec	r0
    18a0:	d2 f7       	brpl	.-12     	; 0x1896 <__umoddi3+0x874>
    18a2:	a4 01       	movw	r20, r8
    18a4:	93 01       	movw	r18, r6
    18a6:	67 96       	adiw	r28, 0x17	; 23
    18a8:	0f ac       	ldd	r0, Y+63	; 0x3f
    18aa:	67 97       	sbiw	r28, 0x17	; 23
    18ac:	04 c0       	rjmp	.+8      	; 0x18b6 <__umoddi3+0x894>
    18ae:	22 0f       	add	r18, r18
    18b0:	33 1f       	adc	r19, r19
    18b2:	44 1f       	adc	r20, r20
    18b4:	55 1f       	adc	r21, r21
    18b6:	0a 94       	dec	r0
    18b8:	d2 f7       	brpl	.-12     	; 0x18ae <__umoddi3+0x88c>
    18ba:	6c 96       	adiw	r28, 0x1c	; 28
    18bc:	8c ad       	ldd	r24, Y+60	; 0x3c
    18be:	9d ad       	ldd	r25, Y+61	; 0x3d
    18c0:	ae ad       	ldd	r26, Y+62	; 0x3e
    18c2:	bf ad       	ldd	r27, Y+63	; 0x3f
    18c4:	6c 97       	sbiw	r28, 0x1c	; 28
    18c6:	66 96       	adiw	r28, 0x16	; 22
    18c8:	0f ac       	ldd	r0, Y+63	; 0x3f
    18ca:	66 97       	sbiw	r28, 0x16	; 22
    18cc:	04 c0       	rjmp	.+8      	; 0x18d6 <__umoddi3+0x8b4>
    18ce:	b6 95       	lsr	r27
    18d0:	a7 95       	ror	r26
    18d2:	97 95       	ror	r25
    18d4:	87 95       	ror	r24
    18d6:	0a 94       	dec	r0
    18d8:	d2 f7       	brpl	.-12     	; 0x18ce <__umoddi3+0x8ac>
    18da:	3c 01       	movw	r6, r24
    18dc:	4d 01       	movw	r8, r26
    18de:	62 2a       	or	r6, r18
    18e0:	73 2a       	or	r7, r19
    18e2:	84 2a       	or	r8, r20
    18e4:	95 2a       	or	r9, r21
    18e6:	69 a2       	std	Y+33, r6	; 0x21
    18e8:	7a a2       	std	Y+34, r7	; 0x22
    18ea:	8b a2       	std	Y+35, r8	; 0x23
    18ec:	9c a2       	std	Y+36, r9	; 0x24
    18ee:	6c 96       	adiw	r28, 0x1c	; 28
    18f0:	ec ac       	ldd	r14, Y+60	; 0x3c
    18f2:	fd ac       	ldd	r15, Y+61	; 0x3d
    18f4:	0e ad       	ldd	r16, Y+62	; 0x3e
    18f6:	1f ad       	ldd	r17, Y+63	; 0x3f
    18f8:	6c 97       	sbiw	r28, 0x1c	; 28
    18fa:	67 96       	adiw	r28, 0x17	; 23
    18fc:	0f ac       	ldd	r0, Y+63	; 0x3f
    18fe:	67 97       	sbiw	r28, 0x17	; 23
    1900:	04 c0       	rjmp	.+8      	; 0x190a <__umoddi3+0x8e8>
    1902:	ee 0c       	add	r14, r14
    1904:	ff 1c       	adc	r15, r15
    1906:	00 1f       	adc	r16, r16
    1908:	11 1f       	adc	r17, r17
    190a:	0a 94       	dec	r0
    190c:	d2 f7       	brpl	.-12     	; 0x1902 <__umoddi3+0x8e0>
    190e:	ed 8e       	std	Y+29, r14	; 0x1d
    1910:	fe 8e       	std	Y+30, r15	; 0x1e
    1912:	0f 8f       	std	Y+31, r16	; 0x1f
    1914:	18 a3       	std	Y+32, r17	; 0x20
    1916:	49 a5       	ldd	r20, Y+41	; 0x29
    1918:	5a a5       	ldd	r21, Y+42	; 0x2a
    191a:	6b a5       	ldd	r22, Y+43	; 0x2b
    191c:	7c a5       	ldd	r23, Y+44	; 0x2c
    191e:	3b 01       	movw	r6, r22
    1920:	88 24       	eor	r8, r8
    1922:	99 24       	eor	r9, r9
    1924:	60 70       	andi	r22, 0x00	; 0
    1926:	70 70       	andi	r23, 0x00	; 0
    1928:	2d 96       	adiw	r28, 0x0d	; 13
    192a:	4c af       	std	Y+60, r20	; 0x3c
    192c:	5d af       	std	Y+61, r21	; 0x3d
    192e:	6e af       	std	Y+62, r22	; 0x3e
    1930:	7f af       	std	Y+63, r23	; 0x3f
    1932:	2d 97       	sbiw	r28, 0x0d	; 13
    1934:	c6 01       	movw	r24, r12
    1936:	b5 01       	movw	r22, r10
    1938:	a4 01       	movw	r20, r8
    193a:	93 01       	movw	r18, r6
    193c:	0e 94 90 2d 	call	0x5b20	; 0x5b20 <__udivmodsi4>
    1940:	7b 01       	movw	r14, r22
    1942:	8c 01       	movw	r16, r24
    1944:	c6 01       	movw	r24, r12
    1946:	b5 01       	movw	r22, r10
    1948:	a4 01       	movw	r20, r8
    194a:	93 01       	movw	r18, r6
    194c:	0e 94 90 2d 	call	0x5b20	; 0x5b20 <__udivmodsi4>
    1950:	c9 01       	movw	r24, r18
    1952:	da 01       	movw	r26, r20
    1954:	1c 01       	movw	r2, r24
    1956:	2d 01       	movw	r4, r26
    1958:	c2 01       	movw	r24, r4
    195a:	b1 01       	movw	r22, r2
    195c:	2d 96       	adiw	r28, 0x0d	; 13
    195e:	2c ad       	ldd	r18, Y+60	; 0x3c
    1960:	3d ad       	ldd	r19, Y+61	; 0x3d
    1962:	4e ad       	ldd	r20, Y+62	; 0x3e
    1964:	5f ad       	ldd	r21, Y+63	; 0x3f
    1966:	2d 97       	sbiw	r28, 0x0d	; 13
    1968:	0e 94 71 2d 	call	0x5ae2	; 0x5ae2 <__mulsi3>
    196c:	9b 01       	movw	r18, r22
    196e:	ac 01       	movw	r20, r24
    1970:	87 01       	movw	r16, r14
    1972:	ff 24       	eor	r15, r15
    1974:	ee 24       	eor	r14, r14
    1976:	a9 a0       	ldd	r10, Y+33	; 0x21
    1978:	ba a0       	ldd	r11, Y+34	; 0x22
    197a:	cb a0       	ldd	r12, Y+35	; 0x23
    197c:	dc a0       	ldd	r13, Y+36	; 0x24
    197e:	c6 01       	movw	r24, r12
    1980:	aa 27       	eor	r26, r26
    1982:	bb 27       	eor	r27, r27
    1984:	57 01       	movw	r10, r14
    1986:	68 01       	movw	r12, r16
    1988:	a8 2a       	or	r10, r24
    198a:	b9 2a       	or	r11, r25
    198c:	ca 2a       	or	r12, r26
    198e:	db 2a       	or	r13, r27
    1990:	a2 16       	cp	r10, r18
    1992:	b3 06       	cpc	r11, r19
    1994:	c4 06       	cpc	r12, r20
    1996:	d5 06       	cpc	r13, r21
    1998:	00 f5       	brcc	.+64     	; 0x19da <__umoddi3+0x9b8>
    199a:	08 94       	sec
    199c:	21 08       	sbc	r2, r1
    199e:	31 08       	sbc	r3, r1
    19a0:	41 08       	sbc	r4, r1
    19a2:	51 08       	sbc	r5, r1
    19a4:	e9 a4       	ldd	r14, Y+41	; 0x29
    19a6:	fa a4       	ldd	r15, Y+42	; 0x2a
    19a8:	0b a5       	ldd	r16, Y+43	; 0x2b
    19aa:	1c a5       	ldd	r17, Y+44	; 0x2c
    19ac:	ae 0c       	add	r10, r14
    19ae:	bf 1c       	adc	r11, r15
    19b0:	c0 1e       	adc	r12, r16
    19b2:	d1 1e       	adc	r13, r17
    19b4:	ae 14       	cp	r10, r14
    19b6:	bf 04       	cpc	r11, r15
    19b8:	c0 06       	cpc	r12, r16
    19ba:	d1 06       	cpc	r13, r17
    19bc:	70 f0       	brcs	.+28     	; 0x19da <__umoddi3+0x9b8>
    19be:	a2 16       	cp	r10, r18
    19c0:	b3 06       	cpc	r11, r19
    19c2:	c4 06       	cpc	r12, r20
    19c4:	d5 06       	cpc	r13, r21
    19c6:	48 f4       	brcc	.+18     	; 0x19da <__umoddi3+0x9b8>
    19c8:	08 94       	sec
    19ca:	21 08       	sbc	r2, r1
    19cc:	31 08       	sbc	r3, r1
    19ce:	41 08       	sbc	r4, r1
    19d0:	51 08       	sbc	r5, r1
    19d2:	ae 0c       	add	r10, r14
    19d4:	bf 1c       	adc	r11, r15
    19d6:	c0 1e       	adc	r12, r16
    19d8:	d1 1e       	adc	r13, r17
    19da:	a2 1a       	sub	r10, r18
    19dc:	b3 0a       	sbc	r11, r19
    19de:	c4 0a       	sbc	r12, r20
    19e0:	d5 0a       	sbc	r13, r21
    19e2:	c6 01       	movw	r24, r12
    19e4:	b5 01       	movw	r22, r10
    19e6:	a4 01       	movw	r20, r8
    19e8:	93 01       	movw	r18, r6
    19ea:	0e 94 90 2d 	call	0x5b20	; 0x5b20 <__udivmodsi4>
    19ee:	7b 01       	movw	r14, r22
    19f0:	8c 01       	movw	r16, r24
    19f2:	c6 01       	movw	r24, r12
    19f4:	b5 01       	movw	r22, r10
    19f6:	a4 01       	movw	r20, r8
    19f8:	93 01       	movw	r18, r6
    19fa:	0e 94 90 2d 	call	0x5b20	; 0x5b20 <__udivmodsi4>
    19fe:	c9 01       	movw	r24, r18
    1a00:	da 01       	movw	r26, r20
    1a02:	3c 01       	movw	r6, r24
    1a04:	4d 01       	movw	r8, r26
    1a06:	c4 01       	movw	r24, r8
    1a08:	b3 01       	movw	r22, r6
    1a0a:	2d 96       	adiw	r28, 0x0d	; 13
    1a0c:	2c ad       	ldd	r18, Y+60	; 0x3c
    1a0e:	3d ad       	ldd	r19, Y+61	; 0x3d
    1a10:	4e ad       	ldd	r20, Y+62	; 0x3e
    1a12:	5f ad       	ldd	r21, Y+63	; 0x3f
    1a14:	2d 97       	sbiw	r28, 0x0d	; 13
    1a16:	0e 94 71 2d 	call	0x5ae2	; 0x5ae2 <__mulsi3>
    1a1a:	9b 01       	movw	r18, r22
    1a1c:	ac 01       	movw	r20, r24
    1a1e:	87 01       	movw	r16, r14
    1a20:	ff 24       	eor	r15, r15
    1a22:	ee 24       	eor	r14, r14
    1a24:	89 a1       	ldd	r24, Y+33	; 0x21
    1a26:	9a a1       	ldd	r25, Y+34	; 0x22
    1a28:	ab a1       	ldd	r26, Y+35	; 0x23
    1a2a:	bc a1       	ldd	r27, Y+36	; 0x24
    1a2c:	a0 70       	andi	r26, 0x00	; 0
    1a2e:	b0 70       	andi	r27, 0x00	; 0
    1a30:	57 01       	movw	r10, r14
    1a32:	68 01       	movw	r12, r16
    1a34:	a8 2a       	or	r10, r24
    1a36:	b9 2a       	or	r11, r25
    1a38:	ca 2a       	or	r12, r26
    1a3a:	db 2a       	or	r13, r27
    1a3c:	a2 16       	cp	r10, r18
    1a3e:	b3 06       	cpc	r11, r19
    1a40:	c4 06       	cpc	r12, r20
    1a42:	d5 06       	cpc	r13, r21
    1a44:	00 f5       	brcc	.+64     	; 0x1a86 <__umoddi3+0xa64>
    1a46:	08 94       	sec
    1a48:	61 08       	sbc	r6, r1
    1a4a:	71 08       	sbc	r7, r1
    1a4c:	81 08       	sbc	r8, r1
    1a4e:	91 08       	sbc	r9, r1
    1a50:	69 a5       	ldd	r22, Y+41	; 0x29
    1a52:	7a a5       	ldd	r23, Y+42	; 0x2a
    1a54:	8b a5       	ldd	r24, Y+43	; 0x2b
    1a56:	9c a5       	ldd	r25, Y+44	; 0x2c
    1a58:	a6 0e       	add	r10, r22
    1a5a:	b7 1e       	adc	r11, r23
    1a5c:	c8 1e       	adc	r12, r24
    1a5e:	d9 1e       	adc	r13, r25
    1a60:	a6 16       	cp	r10, r22
    1a62:	b7 06       	cpc	r11, r23
    1a64:	c8 06       	cpc	r12, r24
    1a66:	d9 06       	cpc	r13, r25
    1a68:	70 f0       	brcs	.+28     	; 0x1a86 <__umoddi3+0xa64>
    1a6a:	a2 16       	cp	r10, r18
    1a6c:	b3 06       	cpc	r11, r19
    1a6e:	c4 06       	cpc	r12, r20
    1a70:	d5 06       	cpc	r13, r21
    1a72:	48 f4       	brcc	.+18     	; 0x1a86 <__umoddi3+0xa64>
    1a74:	08 94       	sec
    1a76:	61 08       	sbc	r6, r1
    1a78:	71 08       	sbc	r7, r1
    1a7a:	81 08       	sbc	r8, r1
    1a7c:	91 08       	sbc	r9, r1
    1a7e:	a6 0e       	add	r10, r22
    1a80:	b7 1e       	adc	r11, r23
    1a82:	c8 1e       	adc	r12, r24
    1a84:	d9 1e       	adc	r13, r25
    1a86:	d6 01       	movw	r26, r12
    1a88:	c5 01       	movw	r24, r10
    1a8a:	82 1b       	sub	r24, r18
    1a8c:	93 0b       	sbc	r25, r19
    1a8e:	a4 0b       	sbc	r26, r20
    1a90:	b5 0b       	sbc	r27, r21
    1a92:	89 8f       	std	Y+25, r24	; 0x19
    1a94:	9a 8f       	std	Y+26, r25	; 0x1a
    1a96:	ab 8f       	std	Y+27, r26	; 0x1b
    1a98:	bc 8f       	std	Y+28, r27	; 0x1c
    1a9a:	d1 01       	movw	r26, r2
    1a9c:	99 27       	eor	r25, r25
    1a9e:	88 27       	eor	r24, r24
    1aa0:	84 01       	movw	r16, r8
    1aa2:	73 01       	movw	r14, r6
    1aa4:	e8 2a       	or	r14, r24
    1aa6:	f9 2a       	or	r15, r25
    1aa8:	0a 2b       	or	r16, r26
    1aaa:	1b 2b       	or	r17, r27
    1aac:	4f ef       	ldi	r20, 0xFF	; 255
    1aae:	a4 2e       	mov	r10, r20
    1ab0:	4f ef       	ldi	r20, 0xFF	; 255
    1ab2:	b4 2e       	mov	r11, r20
    1ab4:	c1 2c       	mov	r12, r1
    1ab6:	d1 2c       	mov	r13, r1
    1ab8:	ae 20       	and	r10, r14
    1aba:	bf 20       	and	r11, r15
    1abc:	c0 22       	and	r12, r16
    1abe:	d1 22       	and	r13, r17
    1ac0:	78 01       	movw	r14, r16
    1ac2:	00 27       	eor	r16, r16
    1ac4:	11 27       	eor	r17, r17
    1ac6:	6d a0       	ldd	r6, Y+37	; 0x25
    1ac8:	7e a0       	ldd	r7, Y+38	; 0x26
    1aca:	8f a0       	ldd	r8, Y+39	; 0x27
    1acc:	98 a4       	ldd	r9, Y+40	; 0x28
    1ace:	4f ef       	ldi	r20, 0xFF	; 255
    1ad0:	5f ef       	ldi	r21, 0xFF	; 255
    1ad2:	60 e0       	ldi	r22, 0x00	; 0
    1ad4:	70 e0       	ldi	r23, 0x00	; 0
    1ad6:	64 22       	and	r6, r20
    1ad8:	75 22       	and	r7, r21
    1ada:	86 22       	and	r8, r22
    1adc:	97 22       	and	r9, r23
    1ade:	8d a1       	ldd	r24, Y+37	; 0x25
    1ae0:	9e a1       	ldd	r25, Y+38	; 0x26
    1ae2:	af a1       	ldd	r26, Y+39	; 0x27
    1ae4:	b8 a5       	ldd	r27, Y+40	; 0x28
    1ae6:	bd 01       	movw	r22, r26
    1ae8:	88 27       	eor	r24, r24
    1aea:	99 27       	eor	r25, r25
    1aec:	65 96       	adiw	r28, 0x15	; 21
    1aee:	6c af       	std	Y+60, r22	; 0x3c
    1af0:	7d af       	std	Y+61, r23	; 0x3d
    1af2:	8e af       	std	Y+62, r24	; 0x3e
    1af4:	9f af       	std	Y+63, r25	; 0x3f
    1af6:	65 97       	sbiw	r28, 0x15	; 21
    1af8:	c6 01       	movw	r24, r12
    1afa:	b5 01       	movw	r22, r10
    1afc:	a4 01       	movw	r20, r8
    1afe:	93 01       	movw	r18, r6
    1b00:	0e 94 71 2d 	call	0x5ae2	; 0x5ae2 <__mulsi3>
    1b04:	61 96       	adiw	r28, 0x11	; 17
    1b06:	6c af       	std	Y+60, r22	; 0x3c
    1b08:	7d af       	std	Y+61, r23	; 0x3d
    1b0a:	8e af       	std	Y+62, r24	; 0x3e
    1b0c:	9f af       	std	Y+63, r25	; 0x3f
    1b0e:	61 97       	sbiw	r28, 0x11	; 17
    1b10:	c6 01       	movw	r24, r12
    1b12:	b5 01       	movw	r22, r10
    1b14:	65 96       	adiw	r28, 0x15	; 21
    1b16:	2c ad       	ldd	r18, Y+60	; 0x3c
    1b18:	3d ad       	ldd	r19, Y+61	; 0x3d
    1b1a:	4e ad       	ldd	r20, Y+62	; 0x3e
    1b1c:	5f ad       	ldd	r21, Y+63	; 0x3f
    1b1e:	65 97       	sbiw	r28, 0x15	; 21
    1b20:	0e 94 71 2d 	call	0x5ae2	; 0x5ae2 <__mulsi3>
    1b24:	1b 01       	movw	r2, r22
    1b26:	2c 01       	movw	r4, r24
    1b28:	c8 01       	movw	r24, r16
    1b2a:	b7 01       	movw	r22, r14
    1b2c:	a4 01       	movw	r20, r8
    1b2e:	93 01       	movw	r18, r6
    1b30:	0e 94 71 2d 	call	0x5ae2	; 0x5ae2 <__mulsi3>
    1b34:	5b 01       	movw	r10, r22
    1b36:	6c 01       	movw	r12, r24
    1b38:	c8 01       	movw	r24, r16
    1b3a:	b7 01       	movw	r22, r14
    1b3c:	65 96       	adiw	r28, 0x15	; 21
    1b3e:	2c ad       	ldd	r18, Y+60	; 0x3c
    1b40:	3d ad       	ldd	r19, Y+61	; 0x3d
    1b42:	4e ad       	ldd	r20, Y+62	; 0x3e
    1b44:	5f ad       	ldd	r21, Y+63	; 0x3f
    1b46:	65 97       	sbiw	r28, 0x15	; 21
    1b48:	0e 94 71 2d 	call	0x5ae2	; 0x5ae2 <__mulsi3>
    1b4c:	7b 01       	movw	r14, r22
    1b4e:	8c 01       	movw	r16, r24
    1b50:	a6 01       	movw	r20, r12
    1b52:	95 01       	movw	r18, r10
    1b54:	22 0d       	add	r18, r2
    1b56:	33 1d       	adc	r19, r3
    1b58:	44 1d       	adc	r20, r4
    1b5a:	55 1d       	adc	r21, r5
    1b5c:	61 96       	adiw	r28, 0x11	; 17
    1b5e:	6c ac       	ldd	r6, Y+60	; 0x3c
    1b60:	7d ac       	ldd	r7, Y+61	; 0x3d
    1b62:	8e ac       	ldd	r8, Y+62	; 0x3e
    1b64:	9f ac       	ldd	r9, Y+63	; 0x3f
    1b66:	61 97       	sbiw	r28, 0x11	; 17
    1b68:	c4 01       	movw	r24, r8
    1b6a:	aa 27       	eor	r26, r26
    1b6c:	bb 27       	eor	r27, r27
    1b6e:	28 0f       	add	r18, r24
    1b70:	39 1f       	adc	r19, r25
    1b72:	4a 1f       	adc	r20, r26
    1b74:	5b 1f       	adc	r21, r27
    1b76:	2a 15       	cp	r18, r10
    1b78:	3b 05       	cpc	r19, r11
    1b7a:	4c 05       	cpc	r20, r12
    1b7c:	5d 05       	cpc	r21, r13
    1b7e:	48 f4       	brcc	.+18     	; 0x1b92 <__umoddi3+0xb70>
    1b80:	81 2c       	mov	r8, r1
    1b82:	91 2c       	mov	r9, r1
    1b84:	e1 e0       	ldi	r30, 0x01	; 1
    1b86:	ae 2e       	mov	r10, r30
    1b88:	b1 2c       	mov	r11, r1
    1b8a:	e8 0c       	add	r14, r8
    1b8c:	f9 1c       	adc	r15, r9
    1b8e:	0a 1d       	adc	r16, r10
    1b90:	1b 1d       	adc	r17, r11
    1b92:	ca 01       	movw	r24, r20
    1b94:	aa 27       	eor	r26, r26
    1b96:	bb 27       	eor	r27, r27
    1b98:	57 01       	movw	r10, r14
    1b9a:	68 01       	movw	r12, r16
    1b9c:	a8 0e       	add	r10, r24
    1b9e:	b9 1e       	adc	r11, r25
    1ba0:	ca 1e       	adc	r12, r26
    1ba2:	db 1e       	adc	r13, r27
    1ba4:	a9 01       	movw	r20, r18
    1ba6:	33 27       	eor	r19, r19
    1ba8:	22 27       	eor	r18, r18
    1baa:	61 96       	adiw	r28, 0x11	; 17
    1bac:	8c ad       	ldd	r24, Y+60	; 0x3c
    1bae:	9d ad       	ldd	r25, Y+61	; 0x3d
    1bb0:	ae ad       	ldd	r26, Y+62	; 0x3e
    1bb2:	bf ad       	ldd	r27, Y+63	; 0x3f
    1bb4:	61 97       	sbiw	r28, 0x11	; 17
    1bb6:	a0 70       	andi	r26, 0x00	; 0
    1bb8:	b0 70       	andi	r27, 0x00	; 0
    1bba:	28 0f       	add	r18, r24
    1bbc:	39 1f       	adc	r19, r25
    1bbe:	4a 1f       	adc	r20, r26
    1bc0:	5b 1f       	adc	r21, r27
    1bc2:	e9 8c       	ldd	r14, Y+25	; 0x19
    1bc4:	fa 8c       	ldd	r15, Y+26	; 0x1a
    1bc6:	0b 8d       	ldd	r16, Y+27	; 0x1b
    1bc8:	1c 8d       	ldd	r17, Y+28	; 0x1c
    1bca:	ea 14       	cp	r14, r10
    1bcc:	fb 04       	cpc	r15, r11
    1bce:	0c 05       	cpc	r16, r12
    1bd0:	1d 05       	cpc	r17, r13
    1bd2:	70 f0       	brcs	.+28     	; 0x1bf0 <__umoddi3+0xbce>
    1bd4:	ae 14       	cp	r10, r14
    1bd6:	bf 04       	cpc	r11, r15
    1bd8:	c0 06       	cpc	r12, r16
    1bda:	d1 06       	cpc	r13, r17
    1bdc:	69 f5       	brne	.+90     	; 0x1c38 <__umoddi3+0xc16>
    1bde:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1be0:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1be2:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1be4:	98 a1       	ldd	r25, Y+32	; 0x20
    1be6:	62 17       	cp	r22, r18
    1be8:	73 07       	cpc	r23, r19
    1bea:	84 07       	cpc	r24, r20
    1bec:	95 07       	cpc	r25, r21
    1bee:	20 f5       	brcc	.+72     	; 0x1c38 <__umoddi3+0xc16>
    1bf0:	da 01       	movw	r26, r20
    1bf2:	c9 01       	movw	r24, r18
    1bf4:	6d a0       	ldd	r6, Y+37	; 0x25
    1bf6:	7e a0       	ldd	r7, Y+38	; 0x26
    1bf8:	8f a0       	ldd	r8, Y+39	; 0x27
    1bfa:	98 a4       	ldd	r9, Y+40	; 0x28
    1bfc:	86 19       	sub	r24, r6
    1bfe:	97 09       	sbc	r25, r7
    1c00:	a8 09       	sbc	r26, r8
    1c02:	b9 09       	sbc	r27, r9
    1c04:	e9 a4       	ldd	r14, Y+41	; 0x29
    1c06:	fa a4       	ldd	r15, Y+42	; 0x2a
    1c08:	0b a5       	ldd	r16, Y+43	; 0x2b
    1c0a:	1c a5       	ldd	r17, Y+44	; 0x2c
    1c0c:	ae 18       	sub	r10, r14
    1c0e:	bf 08       	sbc	r11, r15
    1c10:	c0 0a       	sbc	r12, r16
    1c12:	d1 0a       	sbc	r13, r17
    1c14:	ee 24       	eor	r14, r14
    1c16:	ff 24       	eor	r15, r15
    1c18:	87 01       	movw	r16, r14
    1c1a:	28 17       	cp	r18, r24
    1c1c:	39 07       	cpc	r19, r25
    1c1e:	4a 07       	cpc	r20, r26
    1c20:	5b 07       	cpc	r21, r27
    1c22:	28 f4       	brcc	.+10     	; 0x1c2e <__umoddi3+0xc0c>
    1c24:	21 e0       	ldi	r18, 0x01	; 1
    1c26:	e2 2e       	mov	r14, r18
    1c28:	f1 2c       	mov	r15, r1
    1c2a:	01 2d       	mov	r16, r1
    1c2c:	11 2d       	mov	r17, r1
    1c2e:	ae 18       	sub	r10, r14
    1c30:	bf 08       	sbc	r11, r15
    1c32:	c0 0a       	sbc	r12, r16
    1c34:	d1 0a       	sbc	r13, r17
    1c36:	02 c0       	rjmp	.+4      	; 0x1c3c <__umoddi3+0xc1a>
    1c38:	da 01       	movw	r26, r20
    1c3a:	c9 01       	movw	r24, r18
    1c3c:	6d 8c       	ldd	r6, Y+29	; 0x1d
    1c3e:	7e 8c       	ldd	r7, Y+30	; 0x1e
    1c40:	8f 8c       	ldd	r8, Y+31	; 0x1f
    1c42:	98 a0       	ldd	r9, Y+32	; 0x20
    1c44:	68 1a       	sub	r6, r24
    1c46:	79 0a       	sbc	r7, r25
    1c48:	8a 0a       	sbc	r8, r26
    1c4a:	9b 0a       	sbc	r9, r27
    1c4c:	49 8d       	ldd	r20, Y+25	; 0x19
    1c4e:	5a 8d       	ldd	r21, Y+26	; 0x1a
    1c50:	6b 8d       	ldd	r22, Y+27	; 0x1b
    1c52:	7c 8d       	ldd	r23, Y+28	; 0x1c
    1c54:	4a 19       	sub	r20, r10
    1c56:	5b 09       	sbc	r21, r11
    1c58:	6c 09       	sbc	r22, r12
    1c5a:	7d 09       	sbc	r23, r13
    1c5c:	5a 01       	movw	r10, r20
    1c5e:	6b 01       	movw	r12, r22
    1c60:	22 24       	eor	r2, r2
    1c62:	33 24       	eor	r3, r3
    1c64:	21 01       	movw	r4, r2
    1c66:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1c68:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1c6a:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1c6c:	98 a1       	ldd	r25, Y+32	; 0x20
    1c6e:	66 15       	cp	r22, r6
    1c70:	77 05       	cpc	r23, r7
    1c72:	88 05       	cpc	r24, r8
    1c74:	99 05       	cpc	r25, r9
    1c76:	28 f4       	brcc	.+10     	; 0x1c82 <__umoddi3+0xc60>
    1c78:	81 e0       	ldi	r24, 0x01	; 1
    1c7a:	28 2e       	mov	r2, r24
    1c7c:	31 2c       	mov	r3, r1
    1c7e:	41 2c       	mov	r4, r1
    1c80:	51 2c       	mov	r5, r1
    1c82:	86 01       	movw	r16, r12
    1c84:	75 01       	movw	r14, r10
    1c86:	e2 18       	sub	r14, r2
    1c88:	f3 08       	sbc	r15, r3
    1c8a:	04 09       	sbc	r16, r4
    1c8c:	15 09       	sbc	r17, r5
    1c8e:	a8 01       	movw	r20, r16
    1c90:	97 01       	movw	r18, r14
    1c92:	66 96       	adiw	r28, 0x16	; 22
    1c94:	0f ac       	ldd	r0, Y+63	; 0x3f
    1c96:	66 97       	sbiw	r28, 0x16	; 22
    1c98:	04 c0       	rjmp	.+8      	; 0x1ca2 <__umoddi3+0xc80>
    1c9a:	22 0f       	add	r18, r18
    1c9c:	33 1f       	adc	r19, r19
    1c9e:	44 1f       	adc	r20, r20
    1ca0:	55 1f       	adc	r21, r21
    1ca2:	0a 94       	dec	r0
    1ca4:	d2 f7       	brpl	.-12     	; 0x1c9a <__umoddi3+0xc78>
    1ca6:	d4 01       	movw	r26, r8
    1ca8:	c3 01       	movw	r24, r6
    1caa:	67 96       	adiw	r28, 0x17	; 23
    1cac:	0f ac       	ldd	r0, Y+63	; 0x3f
    1cae:	67 97       	sbiw	r28, 0x17	; 23
    1cb0:	04 c0       	rjmp	.+8      	; 0x1cba <__umoddi3+0xc98>
    1cb2:	b6 95       	lsr	r27
    1cb4:	a7 95       	ror	r26
    1cb6:	97 95       	ror	r25
    1cb8:	87 95       	ror	r24
    1cba:	0a 94       	dec	r0
    1cbc:	d2 f7       	brpl	.-12     	; 0x1cb2 <__umoddi3+0xc90>
    1cbe:	28 2b       	or	r18, r24
    1cc0:	39 2b       	or	r19, r25
    1cc2:	4a 2b       	or	r20, r26
    1cc4:	5b 2b       	or	r21, r27
    1cc6:	29 8b       	std	Y+17, r18	; 0x11
    1cc8:	3a 8b       	std	Y+18, r19	; 0x12
    1cca:	4b 8b       	std	Y+19, r20	; 0x13
    1ccc:	5c 8b       	std	Y+20, r21	; 0x14
    1cce:	67 96       	adiw	r28, 0x17	; 23
    1cd0:	0f ac       	ldd	r0, Y+63	; 0x3f
    1cd2:	67 97       	sbiw	r28, 0x17	; 23
    1cd4:	04 c0       	rjmp	.+8      	; 0x1cde <__umoddi3+0xcbc>
    1cd6:	16 95       	lsr	r17
    1cd8:	07 95       	ror	r16
    1cda:	f7 94       	ror	r15
    1cdc:	e7 94       	ror	r14
    1cde:	0a 94       	dec	r0
    1ce0:	d2 f7       	brpl	.-12     	; 0x1cd6 <__umoddi3+0xcb4>
    1ce2:	ed 8a       	std	Y+21, r14	; 0x15
    1ce4:	fe 8a       	std	Y+22, r15	; 0x16
    1ce6:	0f 8b       	std	Y+23, r16	; 0x17
    1ce8:	18 8f       	std	Y+24, r17	; 0x18
    1cea:	3a 89       	ldd	r19, Y+18	; 0x12
    1cec:	4b 89       	ldd	r20, Y+19	; 0x13
    1cee:	5c 89       	ldd	r21, Y+20	; 0x14
    1cf0:	6e 2d       	mov	r22, r14
    1cf2:	7e 89       	ldd	r23, Y+22	; 0x16
    1cf4:	8f 89       	ldd	r24, Y+23	; 0x17
    1cf6:	98 8d       	ldd	r25, Y+24	; 0x18
    1cf8:	c5 5a       	subi	r28, 0xA5	; 165
    1cfa:	df 4f       	sbci	r29, 0xFF	; 255
    1cfc:	e2 e1       	ldi	r30, 0x12	; 18
    1cfe:	0c 94 ce 2d 	jmp	0x5b9c	; 0x5b9c <__epilogue_restores__>

00001d02 <_fpadd_parts>:
    1d02:	a0 e0       	ldi	r26, 0x00	; 0
    1d04:	b0 e0       	ldi	r27, 0x00	; 0
    1d06:	e7 e8       	ldi	r30, 0x87	; 135
    1d08:	fe e0       	ldi	r31, 0x0E	; 14
    1d0a:	0c 94 b2 2d 	jmp	0x5b64	; 0x5b64 <__prologue_saves__>
    1d0e:	dc 01       	movw	r26, r24
    1d10:	2b 01       	movw	r4, r22
    1d12:	fa 01       	movw	r30, r20
    1d14:	9c 91       	ld	r25, X
    1d16:	92 30       	cpi	r25, 0x02	; 2
    1d18:	08 f4       	brcc	.+2      	; 0x1d1c <_fpadd_parts+0x1a>
    1d1a:	39 c1       	rjmp	.+626    	; 0x1f8e <_fpadd_parts+0x28c>
    1d1c:	eb 01       	movw	r28, r22
    1d1e:	88 81       	ld	r24, Y
    1d20:	82 30       	cpi	r24, 0x02	; 2
    1d22:	08 f4       	brcc	.+2      	; 0x1d26 <_fpadd_parts+0x24>
    1d24:	33 c1       	rjmp	.+614    	; 0x1f8c <_fpadd_parts+0x28a>
    1d26:	94 30       	cpi	r25, 0x04	; 4
    1d28:	69 f4       	brne	.+26     	; 0x1d44 <_fpadd_parts+0x42>
    1d2a:	84 30       	cpi	r24, 0x04	; 4
    1d2c:	09 f0       	breq	.+2      	; 0x1d30 <_fpadd_parts+0x2e>
    1d2e:	2f c1       	rjmp	.+606    	; 0x1f8e <_fpadd_parts+0x28c>
    1d30:	11 96       	adiw	r26, 0x01	; 1
    1d32:	9c 91       	ld	r25, X
    1d34:	11 97       	sbiw	r26, 0x01	; 1
    1d36:	89 81       	ldd	r24, Y+1	; 0x01
    1d38:	98 17       	cp	r25, r24
    1d3a:	09 f4       	brne	.+2      	; 0x1d3e <_fpadd_parts+0x3c>
    1d3c:	28 c1       	rjmp	.+592    	; 0x1f8e <_fpadd_parts+0x28c>
    1d3e:	a5 e7       	ldi	r26, 0x75	; 117
    1d40:	b0 e0       	ldi	r27, 0x00	; 0
    1d42:	25 c1       	rjmp	.+586    	; 0x1f8e <_fpadd_parts+0x28c>
    1d44:	84 30       	cpi	r24, 0x04	; 4
    1d46:	09 f4       	brne	.+2      	; 0x1d4a <_fpadd_parts+0x48>
    1d48:	21 c1       	rjmp	.+578    	; 0x1f8c <_fpadd_parts+0x28a>
    1d4a:	82 30       	cpi	r24, 0x02	; 2
    1d4c:	a9 f4       	brne	.+42     	; 0x1d78 <_fpadd_parts+0x76>
    1d4e:	92 30       	cpi	r25, 0x02	; 2
    1d50:	09 f0       	breq	.+2      	; 0x1d54 <_fpadd_parts+0x52>
    1d52:	1d c1       	rjmp	.+570    	; 0x1f8e <_fpadd_parts+0x28c>
    1d54:	9a 01       	movw	r18, r20
    1d56:	ad 01       	movw	r20, r26
    1d58:	88 e0       	ldi	r24, 0x08	; 8
    1d5a:	ea 01       	movw	r28, r20
    1d5c:	09 90       	ld	r0, Y+
    1d5e:	ae 01       	movw	r20, r28
    1d60:	e9 01       	movw	r28, r18
    1d62:	09 92       	st	Y+, r0
    1d64:	9e 01       	movw	r18, r28
    1d66:	81 50       	subi	r24, 0x01	; 1
    1d68:	c1 f7       	brne	.-16     	; 0x1d5a <_fpadd_parts+0x58>
    1d6a:	e2 01       	movw	r28, r4
    1d6c:	89 81       	ldd	r24, Y+1	; 0x01
    1d6e:	11 96       	adiw	r26, 0x01	; 1
    1d70:	9c 91       	ld	r25, X
    1d72:	89 23       	and	r24, r25
    1d74:	81 83       	std	Z+1, r24	; 0x01
    1d76:	08 c1       	rjmp	.+528    	; 0x1f88 <_fpadd_parts+0x286>
    1d78:	92 30       	cpi	r25, 0x02	; 2
    1d7a:	09 f4       	brne	.+2      	; 0x1d7e <_fpadd_parts+0x7c>
    1d7c:	07 c1       	rjmp	.+526    	; 0x1f8c <_fpadd_parts+0x28a>
    1d7e:	12 96       	adiw	r26, 0x02	; 2
    1d80:	2d 90       	ld	r2, X+
    1d82:	3c 90       	ld	r3, X
    1d84:	13 97       	sbiw	r26, 0x03	; 3
    1d86:	eb 01       	movw	r28, r22
    1d88:	8a 81       	ldd	r24, Y+2	; 0x02
    1d8a:	9b 81       	ldd	r25, Y+3	; 0x03
    1d8c:	14 96       	adiw	r26, 0x04	; 4
    1d8e:	ad 90       	ld	r10, X+
    1d90:	bd 90       	ld	r11, X+
    1d92:	cd 90       	ld	r12, X+
    1d94:	dc 90       	ld	r13, X
    1d96:	17 97       	sbiw	r26, 0x07	; 7
    1d98:	ec 80       	ldd	r14, Y+4	; 0x04
    1d9a:	fd 80       	ldd	r15, Y+5	; 0x05
    1d9c:	0e 81       	ldd	r16, Y+6	; 0x06
    1d9e:	1f 81       	ldd	r17, Y+7	; 0x07
    1da0:	91 01       	movw	r18, r2
    1da2:	28 1b       	sub	r18, r24
    1da4:	39 0b       	sbc	r19, r25
    1da6:	b9 01       	movw	r22, r18
    1da8:	37 ff       	sbrs	r19, 7
    1daa:	04 c0       	rjmp	.+8      	; 0x1db4 <_fpadd_parts+0xb2>
    1dac:	66 27       	eor	r22, r22
    1dae:	77 27       	eor	r23, r23
    1db0:	62 1b       	sub	r22, r18
    1db2:	73 0b       	sbc	r23, r19
    1db4:	60 32       	cpi	r22, 0x20	; 32
    1db6:	71 05       	cpc	r23, r1
    1db8:	0c f0       	brlt	.+2      	; 0x1dbc <_fpadd_parts+0xba>
    1dba:	61 c0       	rjmp	.+194    	; 0x1e7e <_fpadd_parts+0x17c>
    1dbc:	12 16       	cp	r1, r18
    1dbe:	13 06       	cpc	r1, r19
    1dc0:	6c f5       	brge	.+90     	; 0x1e1c <_fpadd_parts+0x11a>
    1dc2:	37 01       	movw	r6, r14
    1dc4:	48 01       	movw	r8, r16
    1dc6:	06 2e       	mov	r0, r22
    1dc8:	04 c0       	rjmp	.+8      	; 0x1dd2 <_fpadd_parts+0xd0>
    1dca:	96 94       	lsr	r9
    1dcc:	87 94       	ror	r8
    1dce:	77 94       	ror	r7
    1dd0:	67 94       	ror	r6
    1dd2:	0a 94       	dec	r0
    1dd4:	d2 f7       	brpl	.-12     	; 0x1dca <_fpadd_parts+0xc8>
    1dd6:	21 e0       	ldi	r18, 0x01	; 1
    1dd8:	30 e0       	ldi	r19, 0x00	; 0
    1dda:	40 e0       	ldi	r20, 0x00	; 0
    1ddc:	50 e0       	ldi	r21, 0x00	; 0
    1dde:	04 c0       	rjmp	.+8      	; 0x1de8 <_fpadd_parts+0xe6>
    1de0:	22 0f       	add	r18, r18
    1de2:	33 1f       	adc	r19, r19
    1de4:	44 1f       	adc	r20, r20
    1de6:	55 1f       	adc	r21, r21
    1de8:	6a 95       	dec	r22
    1dea:	d2 f7       	brpl	.-12     	; 0x1de0 <_fpadd_parts+0xde>
    1dec:	21 50       	subi	r18, 0x01	; 1
    1dee:	30 40       	sbci	r19, 0x00	; 0
    1df0:	40 40       	sbci	r20, 0x00	; 0
    1df2:	50 40       	sbci	r21, 0x00	; 0
    1df4:	2e 21       	and	r18, r14
    1df6:	3f 21       	and	r19, r15
    1df8:	40 23       	and	r20, r16
    1dfa:	51 23       	and	r21, r17
    1dfc:	21 15       	cp	r18, r1
    1dfe:	31 05       	cpc	r19, r1
    1e00:	41 05       	cpc	r20, r1
    1e02:	51 05       	cpc	r21, r1
    1e04:	21 f0       	breq	.+8      	; 0x1e0e <_fpadd_parts+0x10c>
    1e06:	21 e0       	ldi	r18, 0x01	; 1
    1e08:	30 e0       	ldi	r19, 0x00	; 0
    1e0a:	40 e0       	ldi	r20, 0x00	; 0
    1e0c:	50 e0       	ldi	r21, 0x00	; 0
    1e0e:	79 01       	movw	r14, r18
    1e10:	8a 01       	movw	r16, r20
    1e12:	e6 28       	or	r14, r6
    1e14:	f7 28       	or	r15, r7
    1e16:	08 29       	or	r16, r8
    1e18:	19 29       	or	r17, r9
    1e1a:	3c c0       	rjmp	.+120    	; 0x1e94 <_fpadd_parts+0x192>
    1e1c:	23 2b       	or	r18, r19
    1e1e:	d1 f1       	breq	.+116    	; 0x1e94 <_fpadd_parts+0x192>
    1e20:	26 0e       	add	r2, r22
    1e22:	37 1e       	adc	r3, r23
    1e24:	35 01       	movw	r6, r10
    1e26:	46 01       	movw	r8, r12
    1e28:	06 2e       	mov	r0, r22
    1e2a:	04 c0       	rjmp	.+8      	; 0x1e34 <_fpadd_parts+0x132>
    1e2c:	96 94       	lsr	r9
    1e2e:	87 94       	ror	r8
    1e30:	77 94       	ror	r7
    1e32:	67 94       	ror	r6
    1e34:	0a 94       	dec	r0
    1e36:	d2 f7       	brpl	.-12     	; 0x1e2c <_fpadd_parts+0x12a>
    1e38:	21 e0       	ldi	r18, 0x01	; 1
    1e3a:	30 e0       	ldi	r19, 0x00	; 0
    1e3c:	40 e0       	ldi	r20, 0x00	; 0
    1e3e:	50 e0       	ldi	r21, 0x00	; 0
    1e40:	04 c0       	rjmp	.+8      	; 0x1e4a <_fpadd_parts+0x148>
    1e42:	22 0f       	add	r18, r18
    1e44:	33 1f       	adc	r19, r19
    1e46:	44 1f       	adc	r20, r20
    1e48:	55 1f       	adc	r21, r21
    1e4a:	6a 95       	dec	r22
    1e4c:	d2 f7       	brpl	.-12     	; 0x1e42 <_fpadd_parts+0x140>
    1e4e:	21 50       	subi	r18, 0x01	; 1
    1e50:	30 40       	sbci	r19, 0x00	; 0
    1e52:	40 40       	sbci	r20, 0x00	; 0
    1e54:	50 40       	sbci	r21, 0x00	; 0
    1e56:	2a 21       	and	r18, r10
    1e58:	3b 21       	and	r19, r11
    1e5a:	4c 21       	and	r20, r12
    1e5c:	5d 21       	and	r21, r13
    1e5e:	21 15       	cp	r18, r1
    1e60:	31 05       	cpc	r19, r1
    1e62:	41 05       	cpc	r20, r1
    1e64:	51 05       	cpc	r21, r1
    1e66:	21 f0       	breq	.+8      	; 0x1e70 <_fpadd_parts+0x16e>
    1e68:	21 e0       	ldi	r18, 0x01	; 1
    1e6a:	30 e0       	ldi	r19, 0x00	; 0
    1e6c:	40 e0       	ldi	r20, 0x00	; 0
    1e6e:	50 e0       	ldi	r21, 0x00	; 0
    1e70:	59 01       	movw	r10, r18
    1e72:	6a 01       	movw	r12, r20
    1e74:	a6 28       	or	r10, r6
    1e76:	b7 28       	or	r11, r7
    1e78:	c8 28       	or	r12, r8
    1e7a:	d9 28       	or	r13, r9
    1e7c:	0b c0       	rjmp	.+22     	; 0x1e94 <_fpadd_parts+0x192>
    1e7e:	82 15       	cp	r24, r2
    1e80:	93 05       	cpc	r25, r3
    1e82:	2c f0       	brlt	.+10     	; 0x1e8e <_fpadd_parts+0x18c>
    1e84:	1c 01       	movw	r2, r24
    1e86:	aa 24       	eor	r10, r10
    1e88:	bb 24       	eor	r11, r11
    1e8a:	65 01       	movw	r12, r10
    1e8c:	03 c0       	rjmp	.+6      	; 0x1e94 <_fpadd_parts+0x192>
    1e8e:	ee 24       	eor	r14, r14
    1e90:	ff 24       	eor	r15, r15
    1e92:	87 01       	movw	r16, r14
    1e94:	11 96       	adiw	r26, 0x01	; 1
    1e96:	9c 91       	ld	r25, X
    1e98:	d2 01       	movw	r26, r4
    1e9a:	11 96       	adiw	r26, 0x01	; 1
    1e9c:	8c 91       	ld	r24, X
    1e9e:	98 17       	cp	r25, r24
    1ea0:	09 f4       	brne	.+2      	; 0x1ea4 <_fpadd_parts+0x1a2>
    1ea2:	45 c0       	rjmp	.+138    	; 0x1f2e <_fpadd_parts+0x22c>
    1ea4:	99 23       	and	r25, r25
    1ea6:	39 f0       	breq	.+14     	; 0x1eb6 <_fpadd_parts+0x1b4>
    1ea8:	a8 01       	movw	r20, r16
    1eaa:	97 01       	movw	r18, r14
    1eac:	2a 19       	sub	r18, r10
    1eae:	3b 09       	sbc	r19, r11
    1eb0:	4c 09       	sbc	r20, r12
    1eb2:	5d 09       	sbc	r21, r13
    1eb4:	06 c0       	rjmp	.+12     	; 0x1ec2 <_fpadd_parts+0x1c0>
    1eb6:	a6 01       	movw	r20, r12
    1eb8:	95 01       	movw	r18, r10
    1eba:	2e 19       	sub	r18, r14
    1ebc:	3f 09       	sbc	r19, r15
    1ebe:	40 0b       	sbc	r20, r16
    1ec0:	51 0b       	sbc	r21, r17
    1ec2:	57 fd       	sbrc	r21, 7
    1ec4:	08 c0       	rjmp	.+16     	; 0x1ed6 <_fpadd_parts+0x1d4>
    1ec6:	11 82       	std	Z+1, r1	; 0x01
    1ec8:	33 82       	std	Z+3, r3	; 0x03
    1eca:	22 82       	std	Z+2, r2	; 0x02
    1ecc:	24 83       	std	Z+4, r18	; 0x04
    1ece:	35 83       	std	Z+5, r19	; 0x05
    1ed0:	46 83       	std	Z+6, r20	; 0x06
    1ed2:	57 83       	std	Z+7, r21	; 0x07
    1ed4:	1d c0       	rjmp	.+58     	; 0x1f10 <_fpadd_parts+0x20e>
    1ed6:	81 e0       	ldi	r24, 0x01	; 1
    1ed8:	81 83       	std	Z+1, r24	; 0x01
    1eda:	33 82       	std	Z+3, r3	; 0x03
    1edc:	22 82       	std	Z+2, r2	; 0x02
    1ede:	88 27       	eor	r24, r24
    1ee0:	99 27       	eor	r25, r25
    1ee2:	dc 01       	movw	r26, r24
    1ee4:	82 1b       	sub	r24, r18
    1ee6:	93 0b       	sbc	r25, r19
    1ee8:	a4 0b       	sbc	r26, r20
    1eea:	b5 0b       	sbc	r27, r21
    1eec:	84 83       	std	Z+4, r24	; 0x04
    1eee:	95 83       	std	Z+5, r25	; 0x05
    1ef0:	a6 83       	std	Z+6, r26	; 0x06
    1ef2:	b7 83       	std	Z+7, r27	; 0x07
    1ef4:	0d c0       	rjmp	.+26     	; 0x1f10 <_fpadd_parts+0x20e>
    1ef6:	22 0f       	add	r18, r18
    1ef8:	33 1f       	adc	r19, r19
    1efa:	44 1f       	adc	r20, r20
    1efc:	55 1f       	adc	r21, r21
    1efe:	24 83       	std	Z+4, r18	; 0x04
    1f00:	35 83       	std	Z+5, r19	; 0x05
    1f02:	46 83       	std	Z+6, r20	; 0x06
    1f04:	57 83       	std	Z+7, r21	; 0x07
    1f06:	82 81       	ldd	r24, Z+2	; 0x02
    1f08:	93 81       	ldd	r25, Z+3	; 0x03
    1f0a:	01 97       	sbiw	r24, 0x01	; 1
    1f0c:	93 83       	std	Z+3, r25	; 0x03
    1f0e:	82 83       	std	Z+2, r24	; 0x02
    1f10:	24 81       	ldd	r18, Z+4	; 0x04
    1f12:	35 81       	ldd	r19, Z+5	; 0x05
    1f14:	46 81       	ldd	r20, Z+6	; 0x06
    1f16:	57 81       	ldd	r21, Z+7	; 0x07
    1f18:	da 01       	movw	r26, r20
    1f1a:	c9 01       	movw	r24, r18
    1f1c:	01 97       	sbiw	r24, 0x01	; 1
    1f1e:	a1 09       	sbc	r26, r1
    1f20:	b1 09       	sbc	r27, r1
    1f22:	8f 5f       	subi	r24, 0xFF	; 255
    1f24:	9f 4f       	sbci	r25, 0xFF	; 255
    1f26:	af 4f       	sbci	r26, 0xFF	; 255
    1f28:	bf 43       	sbci	r27, 0x3F	; 63
    1f2a:	28 f3       	brcs	.-54     	; 0x1ef6 <_fpadd_parts+0x1f4>
    1f2c:	0b c0       	rjmp	.+22     	; 0x1f44 <_fpadd_parts+0x242>
    1f2e:	91 83       	std	Z+1, r25	; 0x01
    1f30:	33 82       	std	Z+3, r3	; 0x03
    1f32:	22 82       	std	Z+2, r2	; 0x02
    1f34:	ea 0c       	add	r14, r10
    1f36:	fb 1c       	adc	r15, r11
    1f38:	0c 1d       	adc	r16, r12
    1f3a:	1d 1d       	adc	r17, r13
    1f3c:	e4 82       	std	Z+4, r14	; 0x04
    1f3e:	f5 82       	std	Z+5, r15	; 0x05
    1f40:	06 83       	std	Z+6, r16	; 0x06
    1f42:	17 83       	std	Z+7, r17	; 0x07
    1f44:	83 e0       	ldi	r24, 0x03	; 3
    1f46:	80 83       	st	Z, r24
    1f48:	24 81       	ldd	r18, Z+4	; 0x04
    1f4a:	35 81       	ldd	r19, Z+5	; 0x05
    1f4c:	46 81       	ldd	r20, Z+6	; 0x06
    1f4e:	57 81       	ldd	r21, Z+7	; 0x07
    1f50:	57 ff       	sbrs	r21, 7
    1f52:	1a c0       	rjmp	.+52     	; 0x1f88 <_fpadd_parts+0x286>
    1f54:	c9 01       	movw	r24, r18
    1f56:	aa 27       	eor	r26, r26
    1f58:	97 fd       	sbrc	r25, 7
    1f5a:	a0 95       	com	r26
    1f5c:	ba 2f       	mov	r27, r26
    1f5e:	81 70       	andi	r24, 0x01	; 1
    1f60:	90 70       	andi	r25, 0x00	; 0
    1f62:	a0 70       	andi	r26, 0x00	; 0
    1f64:	b0 70       	andi	r27, 0x00	; 0
    1f66:	56 95       	lsr	r21
    1f68:	47 95       	ror	r20
    1f6a:	37 95       	ror	r19
    1f6c:	27 95       	ror	r18
    1f6e:	82 2b       	or	r24, r18
    1f70:	93 2b       	or	r25, r19
    1f72:	a4 2b       	or	r26, r20
    1f74:	b5 2b       	or	r27, r21
    1f76:	84 83       	std	Z+4, r24	; 0x04
    1f78:	95 83       	std	Z+5, r25	; 0x05
    1f7a:	a6 83       	std	Z+6, r26	; 0x06
    1f7c:	b7 83       	std	Z+7, r27	; 0x07
    1f7e:	82 81       	ldd	r24, Z+2	; 0x02
    1f80:	93 81       	ldd	r25, Z+3	; 0x03
    1f82:	01 96       	adiw	r24, 0x01	; 1
    1f84:	93 83       	std	Z+3, r25	; 0x03
    1f86:	82 83       	std	Z+2, r24	; 0x02
    1f88:	df 01       	movw	r26, r30
    1f8a:	01 c0       	rjmp	.+2      	; 0x1f8e <_fpadd_parts+0x28c>
    1f8c:	d2 01       	movw	r26, r4
    1f8e:	cd 01       	movw	r24, r26
    1f90:	cd b7       	in	r28, 0x3d	; 61
    1f92:	de b7       	in	r29, 0x3e	; 62
    1f94:	e2 e1       	ldi	r30, 0x12	; 18
    1f96:	0c 94 ce 2d 	jmp	0x5b9c	; 0x5b9c <__epilogue_restores__>

00001f9a <__subsf3>:
    1f9a:	a0 e2       	ldi	r26, 0x20	; 32
    1f9c:	b0 e0       	ldi	r27, 0x00	; 0
    1f9e:	e3 ed       	ldi	r30, 0xD3	; 211
    1fa0:	ff e0       	ldi	r31, 0x0F	; 15
    1fa2:	0c 94 be 2d 	jmp	0x5b7c	; 0x5b7c <__prologue_saves__+0x18>
    1fa6:	69 83       	std	Y+1, r22	; 0x01
    1fa8:	7a 83       	std	Y+2, r23	; 0x02
    1faa:	8b 83       	std	Y+3, r24	; 0x03
    1fac:	9c 83       	std	Y+4, r25	; 0x04
    1fae:	2d 83       	std	Y+5, r18	; 0x05
    1fb0:	3e 83       	std	Y+6, r19	; 0x06
    1fb2:	4f 83       	std	Y+7, r20	; 0x07
    1fb4:	58 87       	std	Y+8, r21	; 0x08
    1fb6:	e9 e0       	ldi	r30, 0x09	; 9
    1fb8:	ee 2e       	mov	r14, r30
    1fba:	f1 2c       	mov	r15, r1
    1fbc:	ec 0e       	add	r14, r28
    1fbe:	fd 1e       	adc	r15, r29
    1fc0:	ce 01       	movw	r24, r28
    1fc2:	01 96       	adiw	r24, 0x01	; 1
    1fc4:	b7 01       	movw	r22, r14
    1fc6:	0e 94 52 14 	call	0x28a4	; 0x28a4 <__unpack_f>
    1fca:	8e 01       	movw	r16, r28
    1fcc:	0f 5e       	subi	r16, 0xEF	; 239
    1fce:	1f 4f       	sbci	r17, 0xFF	; 255
    1fd0:	ce 01       	movw	r24, r28
    1fd2:	05 96       	adiw	r24, 0x05	; 5
    1fd4:	b8 01       	movw	r22, r16
    1fd6:	0e 94 52 14 	call	0x28a4	; 0x28a4 <__unpack_f>
    1fda:	8a 89       	ldd	r24, Y+18	; 0x12
    1fdc:	91 e0       	ldi	r25, 0x01	; 1
    1fde:	89 27       	eor	r24, r25
    1fe0:	8a 8b       	std	Y+18, r24	; 0x12
    1fe2:	c7 01       	movw	r24, r14
    1fe4:	b8 01       	movw	r22, r16
    1fe6:	ae 01       	movw	r20, r28
    1fe8:	47 5e       	subi	r20, 0xE7	; 231
    1fea:	5f 4f       	sbci	r21, 0xFF	; 255
    1fec:	0e 94 81 0e 	call	0x1d02	; 0x1d02 <_fpadd_parts>
    1ff0:	0e 94 7d 13 	call	0x26fa	; 0x26fa <__pack_f>
    1ff4:	a0 96       	adiw	r28, 0x20	; 32
    1ff6:	e6 e0       	ldi	r30, 0x06	; 6
    1ff8:	0c 94 da 2d 	jmp	0x5bb4	; 0x5bb4 <__epilogue_restores__+0x18>

00001ffc <__addsf3>:
    1ffc:	a0 e2       	ldi	r26, 0x20	; 32
    1ffe:	b0 e0       	ldi	r27, 0x00	; 0
    2000:	e4 e0       	ldi	r30, 0x04	; 4
    2002:	f0 e1       	ldi	r31, 0x10	; 16
    2004:	0c 94 be 2d 	jmp	0x5b7c	; 0x5b7c <__prologue_saves__+0x18>
    2008:	69 83       	std	Y+1, r22	; 0x01
    200a:	7a 83       	std	Y+2, r23	; 0x02
    200c:	8b 83       	std	Y+3, r24	; 0x03
    200e:	9c 83       	std	Y+4, r25	; 0x04
    2010:	2d 83       	std	Y+5, r18	; 0x05
    2012:	3e 83       	std	Y+6, r19	; 0x06
    2014:	4f 83       	std	Y+7, r20	; 0x07
    2016:	58 87       	std	Y+8, r21	; 0x08
    2018:	f9 e0       	ldi	r31, 0x09	; 9
    201a:	ef 2e       	mov	r14, r31
    201c:	f1 2c       	mov	r15, r1
    201e:	ec 0e       	add	r14, r28
    2020:	fd 1e       	adc	r15, r29
    2022:	ce 01       	movw	r24, r28
    2024:	01 96       	adiw	r24, 0x01	; 1
    2026:	b7 01       	movw	r22, r14
    2028:	0e 94 52 14 	call	0x28a4	; 0x28a4 <__unpack_f>
    202c:	8e 01       	movw	r16, r28
    202e:	0f 5e       	subi	r16, 0xEF	; 239
    2030:	1f 4f       	sbci	r17, 0xFF	; 255
    2032:	ce 01       	movw	r24, r28
    2034:	05 96       	adiw	r24, 0x05	; 5
    2036:	b8 01       	movw	r22, r16
    2038:	0e 94 52 14 	call	0x28a4	; 0x28a4 <__unpack_f>
    203c:	c7 01       	movw	r24, r14
    203e:	b8 01       	movw	r22, r16
    2040:	ae 01       	movw	r20, r28
    2042:	47 5e       	subi	r20, 0xE7	; 231
    2044:	5f 4f       	sbci	r21, 0xFF	; 255
    2046:	0e 94 81 0e 	call	0x1d02	; 0x1d02 <_fpadd_parts>
    204a:	0e 94 7d 13 	call	0x26fa	; 0x26fa <__pack_f>
    204e:	a0 96       	adiw	r28, 0x20	; 32
    2050:	e6 e0       	ldi	r30, 0x06	; 6
    2052:	0c 94 da 2d 	jmp	0x5bb4	; 0x5bb4 <__epilogue_restores__+0x18>

00002056 <__mulsf3>:
    2056:	a0 e2       	ldi	r26, 0x20	; 32
    2058:	b0 e0       	ldi	r27, 0x00	; 0
    205a:	e1 e3       	ldi	r30, 0x31	; 49
    205c:	f0 e1       	ldi	r31, 0x10	; 16
    205e:	0c 94 b2 2d 	jmp	0x5b64	; 0x5b64 <__prologue_saves__>
    2062:	69 83       	std	Y+1, r22	; 0x01
    2064:	7a 83       	std	Y+2, r23	; 0x02
    2066:	8b 83       	std	Y+3, r24	; 0x03
    2068:	9c 83       	std	Y+4, r25	; 0x04
    206a:	2d 83       	std	Y+5, r18	; 0x05
    206c:	3e 83       	std	Y+6, r19	; 0x06
    206e:	4f 83       	std	Y+7, r20	; 0x07
    2070:	58 87       	std	Y+8, r21	; 0x08
    2072:	ce 01       	movw	r24, r28
    2074:	01 96       	adiw	r24, 0x01	; 1
    2076:	be 01       	movw	r22, r28
    2078:	67 5f       	subi	r22, 0xF7	; 247
    207a:	7f 4f       	sbci	r23, 0xFF	; 255
    207c:	0e 94 52 14 	call	0x28a4	; 0x28a4 <__unpack_f>
    2080:	ce 01       	movw	r24, r28
    2082:	05 96       	adiw	r24, 0x05	; 5
    2084:	be 01       	movw	r22, r28
    2086:	6f 5e       	subi	r22, 0xEF	; 239
    2088:	7f 4f       	sbci	r23, 0xFF	; 255
    208a:	0e 94 52 14 	call	0x28a4	; 0x28a4 <__unpack_f>
    208e:	99 85       	ldd	r25, Y+9	; 0x09
    2090:	92 30       	cpi	r25, 0x02	; 2
    2092:	88 f0       	brcs	.+34     	; 0x20b6 <__mulsf3+0x60>
    2094:	89 89       	ldd	r24, Y+17	; 0x11
    2096:	82 30       	cpi	r24, 0x02	; 2
    2098:	c8 f0       	brcs	.+50     	; 0x20cc <__mulsf3+0x76>
    209a:	94 30       	cpi	r25, 0x04	; 4
    209c:	19 f4       	brne	.+6      	; 0x20a4 <__mulsf3+0x4e>
    209e:	82 30       	cpi	r24, 0x02	; 2
    20a0:	51 f4       	brne	.+20     	; 0x20b6 <__mulsf3+0x60>
    20a2:	04 c0       	rjmp	.+8      	; 0x20ac <__mulsf3+0x56>
    20a4:	84 30       	cpi	r24, 0x04	; 4
    20a6:	29 f4       	brne	.+10     	; 0x20b2 <__mulsf3+0x5c>
    20a8:	92 30       	cpi	r25, 0x02	; 2
    20aa:	81 f4       	brne	.+32     	; 0x20cc <__mulsf3+0x76>
    20ac:	85 e7       	ldi	r24, 0x75	; 117
    20ae:	90 e0       	ldi	r25, 0x00	; 0
    20b0:	c6 c0       	rjmp	.+396    	; 0x223e <__mulsf3+0x1e8>
    20b2:	92 30       	cpi	r25, 0x02	; 2
    20b4:	49 f4       	brne	.+18     	; 0x20c8 <__mulsf3+0x72>
    20b6:	20 e0       	ldi	r18, 0x00	; 0
    20b8:	9a 85       	ldd	r25, Y+10	; 0x0a
    20ba:	8a 89       	ldd	r24, Y+18	; 0x12
    20bc:	98 13       	cpse	r25, r24
    20be:	21 e0       	ldi	r18, 0x01	; 1
    20c0:	2a 87       	std	Y+10, r18	; 0x0a
    20c2:	ce 01       	movw	r24, r28
    20c4:	09 96       	adiw	r24, 0x09	; 9
    20c6:	bb c0       	rjmp	.+374    	; 0x223e <__mulsf3+0x1e8>
    20c8:	82 30       	cpi	r24, 0x02	; 2
    20ca:	49 f4       	brne	.+18     	; 0x20de <__mulsf3+0x88>
    20cc:	20 e0       	ldi	r18, 0x00	; 0
    20ce:	9a 85       	ldd	r25, Y+10	; 0x0a
    20d0:	8a 89       	ldd	r24, Y+18	; 0x12
    20d2:	98 13       	cpse	r25, r24
    20d4:	21 e0       	ldi	r18, 0x01	; 1
    20d6:	2a 8b       	std	Y+18, r18	; 0x12
    20d8:	ce 01       	movw	r24, r28
    20da:	41 96       	adiw	r24, 0x11	; 17
    20dc:	b0 c0       	rjmp	.+352    	; 0x223e <__mulsf3+0x1e8>
    20de:	2d 84       	ldd	r2, Y+13	; 0x0d
    20e0:	3e 84       	ldd	r3, Y+14	; 0x0e
    20e2:	4f 84       	ldd	r4, Y+15	; 0x0f
    20e4:	58 88       	ldd	r5, Y+16	; 0x10
    20e6:	6d 88       	ldd	r6, Y+21	; 0x15
    20e8:	7e 88       	ldd	r7, Y+22	; 0x16
    20ea:	8f 88       	ldd	r8, Y+23	; 0x17
    20ec:	98 8c       	ldd	r9, Y+24	; 0x18
    20ee:	ee 24       	eor	r14, r14
    20f0:	ff 24       	eor	r15, r15
    20f2:	87 01       	movw	r16, r14
    20f4:	aa 24       	eor	r10, r10
    20f6:	bb 24       	eor	r11, r11
    20f8:	65 01       	movw	r12, r10
    20fa:	40 e0       	ldi	r20, 0x00	; 0
    20fc:	50 e0       	ldi	r21, 0x00	; 0
    20fe:	60 e0       	ldi	r22, 0x00	; 0
    2100:	70 e0       	ldi	r23, 0x00	; 0
    2102:	e0 e0       	ldi	r30, 0x00	; 0
    2104:	f0 e0       	ldi	r31, 0x00	; 0
    2106:	c1 01       	movw	r24, r2
    2108:	81 70       	andi	r24, 0x01	; 1
    210a:	90 70       	andi	r25, 0x00	; 0
    210c:	89 2b       	or	r24, r25
    210e:	e9 f0       	breq	.+58     	; 0x214a <__mulsf3+0xf4>
    2110:	e6 0c       	add	r14, r6
    2112:	f7 1c       	adc	r15, r7
    2114:	08 1d       	adc	r16, r8
    2116:	19 1d       	adc	r17, r9
    2118:	9a 01       	movw	r18, r20
    211a:	ab 01       	movw	r20, r22
    211c:	2a 0d       	add	r18, r10
    211e:	3b 1d       	adc	r19, r11
    2120:	4c 1d       	adc	r20, r12
    2122:	5d 1d       	adc	r21, r13
    2124:	80 e0       	ldi	r24, 0x00	; 0
    2126:	90 e0       	ldi	r25, 0x00	; 0
    2128:	a0 e0       	ldi	r26, 0x00	; 0
    212a:	b0 e0       	ldi	r27, 0x00	; 0
    212c:	e6 14       	cp	r14, r6
    212e:	f7 04       	cpc	r15, r7
    2130:	08 05       	cpc	r16, r8
    2132:	19 05       	cpc	r17, r9
    2134:	20 f4       	brcc	.+8      	; 0x213e <__mulsf3+0xe8>
    2136:	81 e0       	ldi	r24, 0x01	; 1
    2138:	90 e0       	ldi	r25, 0x00	; 0
    213a:	a0 e0       	ldi	r26, 0x00	; 0
    213c:	b0 e0       	ldi	r27, 0x00	; 0
    213e:	ba 01       	movw	r22, r20
    2140:	a9 01       	movw	r20, r18
    2142:	48 0f       	add	r20, r24
    2144:	59 1f       	adc	r21, r25
    2146:	6a 1f       	adc	r22, r26
    2148:	7b 1f       	adc	r23, r27
    214a:	aa 0c       	add	r10, r10
    214c:	bb 1c       	adc	r11, r11
    214e:	cc 1c       	adc	r12, r12
    2150:	dd 1c       	adc	r13, r13
    2152:	97 fe       	sbrs	r9, 7
    2154:	08 c0       	rjmp	.+16     	; 0x2166 <__mulsf3+0x110>
    2156:	81 e0       	ldi	r24, 0x01	; 1
    2158:	90 e0       	ldi	r25, 0x00	; 0
    215a:	a0 e0       	ldi	r26, 0x00	; 0
    215c:	b0 e0       	ldi	r27, 0x00	; 0
    215e:	a8 2a       	or	r10, r24
    2160:	b9 2a       	or	r11, r25
    2162:	ca 2a       	or	r12, r26
    2164:	db 2a       	or	r13, r27
    2166:	31 96       	adiw	r30, 0x01	; 1
    2168:	e0 32       	cpi	r30, 0x20	; 32
    216a:	f1 05       	cpc	r31, r1
    216c:	49 f0       	breq	.+18     	; 0x2180 <__mulsf3+0x12a>
    216e:	66 0c       	add	r6, r6
    2170:	77 1c       	adc	r7, r7
    2172:	88 1c       	adc	r8, r8
    2174:	99 1c       	adc	r9, r9
    2176:	56 94       	lsr	r5
    2178:	47 94       	ror	r4
    217a:	37 94       	ror	r3
    217c:	27 94       	ror	r2
    217e:	c3 cf       	rjmp	.-122    	; 0x2106 <__mulsf3+0xb0>
    2180:	fa 85       	ldd	r31, Y+10	; 0x0a
    2182:	ea 89       	ldd	r30, Y+18	; 0x12
    2184:	2b 89       	ldd	r18, Y+19	; 0x13
    2186:	3c 89       	ldd	r19, Y+20	; 0x14
    2188:	8b 85       	ldd	r24, Y+11	; 0x0b
    218a:	9c 85       	ldd	r25, Y+12	; 0x0c
    218c:	28 0f       	add	r18, r24
    218e:	39 1f       	adc	r19, r25
    2190:	2e 5f       	subi	r18, 0xFE	; 254
    2192:	3f 4f       	sbci	r19, 0xFF	; 255
    2194:	17 c0       	rjmp	.+46     	; 0x21c4 <__mulsf3+0x16e>
    2196:	ca 01       	movw	r24, r20
    2198:	81 70       	andi	r24, 0x01	; 1
    219a:	90 70       	andi	r25, 0x00	; 0
    219c:	89 2b       	or	r24, r25
    219e:	61 f0       	breq	.+24     	; 0x21b8 <__mulsf3+0x162>
    21a0:	16 95       	lsr	r17
    21a2:	07 95       	ror	r16
    21a4:	f7 94       	ror	r15
    21a6:	e7 94       	ror	r14
    21a8:	80 e0       	ldi	r24, 0x00	; 0
    21aa:	90 e0       	ldi	r25, 0x00	; 0
    21ac:	a0 e0       	ldi	r26, 0x00	; 0
    21ae:	b0 e8       	ldi	r27, 0x80	; 128
    21b0:	e8 2a       	or	r14, r24
    21b2:	f9 2a       	or	r15, r25
    21b4:	0a 2b       	or	r16, r26
    21b6:	1b 2b       	or	r17, r27
    21b8:	76 95       	lsr	r23
    21ba:	67 95       	ror	r22
    21bc:	57 95       	ror	r21
    21be:	47 95       	ror	r20
    21c0:	2f 5f       	subi	r18, 0xFF	; 255
    21c2:	3f 4f       	sbci	r19, 0xFF	; 255
    21c4:	77 fd       	sbrc	r23, 7
    21c6:	e7 cf       	rjmp	.-50     	; 0x2196 <__mulsf3+0x140>
    21c8:	0c c0       	rjmp	.+24     	; 0x21e2 <__mulsf3+0x18c>
    21ca:	44 0f       	add	r20, r20
    21cc:	55 1f       	adc	r21, r21
    21ce:	66 1f       	adc	r22, r22
    21d0:	77 1f       	adc	r23, r23
    21d2:	17 fd       	sbrc	r17, 7
    21d4:	41 60       	ori	r20, 0x01	; 1
    21d6:	ee 0c       	add	r14, r14
    21d8:	ff 1c       	adc	r15, r15
    21da:	00 1f       	adc	r16, r16
    21dc:	11 1f       	adc	r17, r17
    21de:	21 50       	subi	r18, 0x01	; 1
    21e0:	30 40       	sbci	r19, 0x00	; 0
    21e2:	40 30       	cpi	r20, 0x00	; 0
    21e4:	90 e0       	ldi	r25, 0x00	; 0
    21e6:	59 07       	cpc	r21, r25
    21e8:	90 e0       	ldi	r25, 0x00	; 0
    21ea:	69 07       	cpc	r22, r25
    21ec:	90 e4       	ldi	r25, 0x40	; 64
    21ee:	79 07       	cpc	r23, r25
    21f0:	60 f3       	brcs	.-40     	; 0x21ca <__mulsf3+0x174>
    21f2:	2b 8f       	std	Y+27, r18	; 0x1b
    21f4:	3c 8f       	std	Y+28, r19	; 0x1c
    21f6:	db 01       	movw	r26, r22
    21f8:	ca 01       	movw	r24, r20
    21fa:	8f 77       	andi	r24, 0x7F	; 127
    21fc:	90 70       	andi	r25, 0x00	; 0
    21fe:	a0 70       	andi	r26, 0x00	; 0
    2200:	b0 70       	andi	r27, 0x00	; 0
    2202:	80 34       	cpi	r24, 0x40	; 64
    2204:	91 05       	cpc	r25, r1
    2206:	a1 05       	cpc	r26, r1
    2208:	b1 05       	cpc	r27, r1
    220a:	61 f4       	brne	.+24     	; 0x2224 <__mulsf3+0x1ce>
    220c:	47 fd       	sbrc	r20, 7
    220e:	0a c0       	rjmp	.+20     	; 0x2224 <__mulsf3+0x1ce>
    2210:	e1 14       	cp	r14, r1
    2212:	f1 04       	cpc	r15, r1
    2214:	01 05       	cpc	r16, r1
    2216:	11 05       	cpc	r17, r1
    2218:	29 f0       	breq	.+10     	; 0x2224 <__mulsf3+0x1ce>
    221a:	40 5c       	subi	r20, 0xC0	; 192
    221c:	5f 4f       	sbci	r21, 0xFF	; 255
    221e:	6f 4f       	sbci	r22, 0xFF	; 255
    2220:	7f 4f       	sbci	r23, 0xFF	; 255
    2222:	40 78       	andi	r20, 0x80	; 128
    2224:	1a 8e       	std	Y+26, r1	; 0x1a
    2226:	fe 17       	cp	r31, r30
    2228:	11 f0       	breq	.+4      	; 0x222e <__mulsf3+0x1d8>
    222a:	81 e0       	ldi	r24, 0x01	; 1
    222c:	8a 8f       	std	Y+26, r24	; 0x1a
    222e:	4d 8f       	std	Y+29, r20	; 0x1d
    2230:	5e 8f       	std	Y+30, r21	; 0x1e
    2232:	6f 8f       	std	Y+31, r22	; 0x1f
    2234:	78 a3       	std	Y+32, r23	; 0x20
    2236:	83 e0       	ldi	r24, 0x03	; 3
    2238:	89 8f       	std	Y+25, r24	; 0x19
    223a:	ce 01       	movw	r24, r28
    223c:	49 96       	adiw	r24, 0x19	; 25
    223e:	0e 94 7d 13 	call	0x26fa	; 0x26fa <__pack_f>
    2242:	a0 96       	adiw	r28, 0x20	; 32
    2244:	e2 e1       	ldi	r30, 0x12	; 18
    2246:	0c 94 ce 2d 	jmp	0x5b9c	; 0x5b9c <__epilogue_restores__>

0000224a <__divsf3>:
    224a:	a8 e1       	ldi	r26, 0x18	; 24
    224c:	b0 e0       	ldi	r27, 0x00	; 0
    224e:	eb e2       	ldi	r30, 0x2B	; 43
    2250:	f1 e1       	ldi	r31, 0x11	; 17
    2252:	0c 94 ba 2d 	jmp	0x5b74	; 0x5b74 <__prologue_saves__+0x10>
    2256:	69 83       	std	Y+1, r22	; 0x01
    2258:	7a 83       	std	Y+2, r23	; 0x02
    225a:	8b 83       	std	Y+3, r24	; 0x03
    225c:	9c 83       	std	Y+4, r25	; 0x04
    225e:	2d 83       	std	Y+5, r18	; 0x05
    2260:	3e 83       	std	Y+6, r19	; 0x06
    2262:	4f 83       	std	Y+7, r20	; 0x07
    2264:	58 87       	std	Y+8, r21	; 0x08
    2266:	b9 e0       	ldi	r27, 0x09	; 9
    2268:	eb 2e       	mov	r14, r27
    226a:	f1 2c       	mov	r15, r1
    226c:	ec 0e       	add	r14, r28
    226e:	fd 1e       	adc	r15, r29
    2270:	ce 01       	movw	r24, r28
    2272:	01 96       	adiw	r24, 0x01	; 1
    2274:	b7 01       	movw	r22, r14
    2276:	0e 94 52 14 	call	0x28a4	; 0x28a4 <__unpack_f>
    227a:	8e 01       	movw	r16, r28
    227c:	0f 5e       	subi	r16, 0xEF	; 239
    227e:	1f 4f       	sbci	r17, 0xFF	; 255
    2280:	ce 01       	movw	r24, r28
    2282:	05 96       	adiw	r24, 0x05	; 5
    2284:	b8 01       	movw	r22, r16
    2286:	0e 94 52 14 	call	0x28a4	; 0x28a4 <__unpack_f>
    228a:	29 85       	ldd	r18, Y+9	; 0x09
    228c:	22 30       	cpi	r18, 0x02	; 2
    228e:	08 f4       	brcc	.+2      	; 0x2292 <__divsf3+0x48>
    2290:	7e c0       	rjmp	.+252    	; 0x238e <__divsf3+0x144>
    2292:	39 89       	ldd	r19, Y+17	; 0x11
    2294:	32 30       	cpi	r19, 0x02	; 2
    2296:	10 f4       	brcc	.+4      	; 0x229c <__divsf3+0x52>
    2298:	b8 01       	movw	r22, r16
    229a:	7c c0       	rjmp	.+248    	; 0x2394 <__divsf3+0x14a>
    229c:	8a 85       	ldd	r24, Y+10	; 0x0a
    229e:	9a 89       	ldd	r25, Y+18	; 0x12
    22a0:	89 27       	eor	r24, r25
    22a2:	8a 87       	std	Y+10, r24	; 0x0a
    22a4:	24 30       	cpi	r18, 0x04	; 4
    22a6:	11 f0       	breq	.+4      	; 0x22ac <__divsf3+0x62>
    22a8:	22 30       	cpi	r18, 0x02	; 2
    22aa:	31 f4       	brne	.+12     	; 0x22b8 <__divsf3+0x6e>
    22ac:	23 17       	cp	r18, r19
    22ae:	09 f0       	breq	.+2      	; 0x22b2 <__divsf3+0x68>
    22b0:	6e c0       	rjmp	.+220    	; 0x238e <__divsf3+0x144>
    22b2:	65 e7       	ldi	r22, 0x75	; 117
    22b4:	70 e0       	ldi	r23, 0x00	; 0
    22b6:	6e c0       	rjmp	.+220    	; 0x2394 <__divsf3+0x14a>
    22b8:	34 30       	cpi	r19, 0x04	; 4
    22ba:	39 f4       	brne	.+14     	; 0x22ca <__divsf3+0x80>
    22bc:	1d 86       	std	Y+13, r1	; 0x0d
    22be:	1e 86       	std	Y+14, r1	; 0x0e
    22c0:	1f 86       	std	Y+15, r1	; 0x0f
    22c2:	18 8a       	std	Y+16, r1	; 0x10
    22c4:	1c 86       	std	Y+12, r1	; 0x0c
    22c6:	1b 86       	std	Y+11, r1	; 0x0b
    22c8:	04 c0       	rjmp	.+8      	; 0x22d2 <__divsf3+0x88>
    22ca:	32 30       	cpi	r19, 0x02	; 2
    22cc:	21 f4       	brne	.+8      	; 0x22d6 <__divsf3+0x8c>
    22ce:	84 e0       	ldi	r24, 0x04	; 4
    22d0:	89 87       	std	Y+9, r24	; 0x09
    22d2:	b7 01       	movw	r22, r14
    22d4:	5f c0       	rjmp	.+190    	; 0x2394 <__divsf3+0x14a>
    22d6:	2b 85       	ldd	r18, Y+11	; 0x0b
    22d8:	3c 85       	ldd	r19, Y+12	; 0x0c
    22da:	8b 89       	ldd	r24, Y+19	; 0x13
    22dc:	9c 89       	ldd	r25, Y+20	; 0x14
    22de:	28 1b       	sub	r18, r24
    22e0:	39 0b       	sbc	r19, r25
    22e2:	3c 87       	std	Y+12, r19	; 0x0c
    22e4:	2b 87       	std	Y+11, r18	; 0x0b
    22e6:	ed 84       	ldd	r14, Y+13	; 0x0d
    22e8:	fe 84       	ldd	r15, Y+14	; 0x0e
    22ea:	0f 85       	ldd	r16, Y+15	; 0x0f
    22ec:	18 89       	ldd	r17, Y+16	; 0x10
    22ee:	ad 88       	ldd	r10, Y+21	; 0x15
    22f0:	be 88       	ldd	r11, Y+22	; 0x16
    22f2:	cf 88       	ldd	r12, Y+23	; 0x17
    22f4:	d8 8c       	ldd	r13, Y+24	; 0x18
    22f6:	ea 14       	cp	r14, r10
    22f8:	fb 04       	cpc	r15, r11
    22fa:	0c 05       	cpc	r16, r12
    22fc:	1d 05       	cpc	r17, r13
    22fe:	40 f4       	brcc	.+16     	; 0x2310 <__divsf3+0xc6>
    2300:	ee 0c       	add	r14, r14
    2302:	ff 1c       	adc	r15, r15
    2304:	00 1f       	adc	r16, r16
    2306:	11 1f       	adc	r17, r17
    2308:	21 50       	subi	r18, 0x01	; 1
    230a:	30 40       	sbci	r19, 0x00	; 0
    230c:	3c 87       	std	Y+12, r19	; 0x0c
    230e:	2b 87       	std	Y+11, r18	; 0x0b
    2310:	20 e0       	ldi	r18, 0x00	; 0
    2312:	30 e0       	ldi	r19, 0x00	; 0
    2314:	40 e0       	ldi	r20, 0x00	; 0
    2316:	50 e0       	ldi	r21, 0x00	; 0
    2318:	80 e0       	ldi	r24, 0x00	; 0
    231a:	90 e0       	ldi	r25, 0x00	; 0
    231c:	a0 e0       	ldi	r26, 0x00	; 0
    231e:	b0 e4       	ldi	r27, 0x40	; 64
    2320:	60 e0       	ldi	r22, 0x00	; 0
    2322:	70 e0       	ldi	r23, 0x00	; 0
    2324:	ea 14       	cp	r14, r10
    2326:	fb 04       	cpc	r15, r11
    2328:	0c 05       	cpc	r16, r12
    232a:	1d 05       	cpc	r17, r13
    232c:	40 f0       	brcs	.+16     	; 0x233e <__divsf3+0xf4>
    232e:	28 2b       	or	r18, r24
    2330:	39 2b       	or	r19, r25
    2332:	4a 2b       	or	r20, r26
    2334:	5b 2b       	or	r21, r27
    2336:	ea 18       	sub	r14, r10
    2338:	fb 08       	sbc	r15, r11
    233a:	0c 09       	sbc	r16, r12
    233c:	1d 09       	sbc	r17, r13
    233e:	b6 95       	lsr	r27
    2340:	a7 95       	ror	r26
    2342:	97 95       	ror	r25
    2344:	87 95       	ror	r24
    2346:	ee 0c       	add	r14, r14
    2348:	ff 1c       	adc	r15, r15
    234a:	00 1f       	adc	r16, r16
    234c:	11 1f       	adc	r17, r17
    234e:	6f 5f       	subi	r22, 0xFF	; 255
    2350:	7f 4f       	sbci	r23, 0xFF	; 255
    2352:	6f 31       	cpi	r22, 0x1F	; 31
    2354:	71 05       	cpc	r23, r1
    2356:	31 f7       	brne	.-52     	; 0x2324 <__divsf3+0xda>
    2358:	da 01       	movw	r26, r20
    235a:	c9 01       	movw	r24, r18
    235c:	8f 77       	andi	r24, 0x7F	; 127
    235e:	90 70       	andi	r25, 0x00	; 0
    2360:	a0 70       	andi	r26, 0x00	; 0
    2362:	b0 70       	andi	r27, 0x00	; 0
    2364:	80 34       	cpi	r24, 0x40	; 64
    2366:	91 05       	cpc	r25, r1
    2368:	a1 05       	cpc	r26, r1
    236a:	b1 05       	cpc	r27, r1
    236c:	61 f4       	brne	.+24     	; 0x2386 <__divsf3+0x13c>
    236e:	27 fd       	sbrc	r18, 7
    2370:	0a c0       	rjmp	.+20     	; 0x2386 <__divsf3+0x13c>
    2372:	e1 14       	cp	r14, r1
    2374:	f1 04       	cpc	r15, r1
    2376:	01 05       	cpc	r16, r1
    2378:	11 05       	cpc	r17, r1
    237a:	29 f0       	breq	.+10     	; 0x2386 <__divsf3+0x13c>
    237c:	20 5c       	subi	r18, 0xC0	; 192
    237e:	3f 4f       	sbci	r19, 0xFF	; 255
    2380:	4f 4f       	sbci	r20, 0xFF	; 255
    2382:	5f 4f       	sbci	r21, 0xFF	; 255
    2384:	20 78       	andi	r18, 0x80	; 128
    2386:	2d 87       	std	Y+13, r18	; 0x0d
    2388:	3e 87       	std	Y+14, r19	; 0x0e
    238a:	4f 87       	std	Y+15, r20	; 0x0f
    238c:	58 8b       	std	Y+16, r21	; 0x10
    238e:	be 01       	movw	r22, r28
    2390:	67 5f       	subi	r22, 0xF7	; 247
    2392:	7f 4f       	sbci	r23, 0xFF	; 255
    2394:	cb 01       	movw	r24, r22
    2396:	0e 94 7d 13 	call	0x26fa	; 0x26fa <__pack_f>
    239a:	68 96       	adiw	r28, 0x18	; 24
    239c:	ea e0       	ldi	r30, 0x0A	; 10
    239e:	0c 94 d6 2d 	jmp	0x5bac	; 0x5bac <__epilogue_restores__+0x10>

000023a2 <__gtsf2>:
    23a2:	a8 e1       	ldi	r26, 0x18	; 24
    23a4:	b0 e0       	ldi	r27, 0x00	; 0
    23a6:	e7 ed       	ldi	r30, 0xD7	; 215
    23a8:	f1 e1       	ldi	r31, 0x11	; 17
    23aa:	0c 94 be 2d 	jmp	0x5b7c	; 0x5b7c <__prologue_saves__+0x18>
    23ae:	69 83       	std	Y+1, r22	; 0x01
    23b0:	7a 83       	std	Y+2, r23	; 0x02
    23b2:	8b 83       	std	Y+3, r24	; 0x03
    23b4:	9c 83       	std	Y+4, r25	; 0x04
    23b6:	2d 83       	std	Y+5, r18	; 0x05
    23b8:	3e 83       	std	Y+6, r19	; 0x06
    23ba:	4f 83       	std	Y+7, r20	; 0x07
    23bc:	58 87       	std	Y+8, r21	; 0x08
    23be:	89 e0       	ldi	r24, 0x09	; 9
    23c0:	e8 2e       	mov	r14, r24
    23c2:	f1 2c       	mov	r15, r1
    23c4:	ec 0e       	add	r14, r28
    23c6:	fd 1e       	adc	r15, r29
    23c8:	ce 01       	movw	r24, r28
    23ca:	01 96       	adiw	r24, 0x01	; 1
    23cc:	b7 01       	movw	r22, r14
    23ce:	0e 94 52 14 	call	0x28a4	; 0x28a4 <__unpack_f>
    23d2:	8e 01       	movw	r16, r28
    23d4:	0f 5e       	subi	r16, 0xEF	; 239
    23d6:	1f 4f       	sbci	r17, 0xFF	; 255
    23d8:	ce 01       	movw	r24, r28
    23da:	05 96       	adiw	r24, 0x05	; 5
    23dc:	b8 01       	movw	r22, r16
    23de:	0e 94 52 14 	call	0x28a4	; 0x28a4 <__unpack_f>
    23e2:	89 85       	ldd	r24, Y+9	; 0x09
    23e4:	82 30       	cpi	r24, 0x02	; 2
    23e6:	40 f0       	brcs	.+16     	; 0x23f8 <__gtsf2+0x56>
    23e8:	89 89       	ldd	r24, Y+17	; 0x11
    23ea:	82 30       	cpi	r24, 0x02	; 2
    23ec:	28 f0       	brcs	.+10     	; 0x23f8 <__gtsf2+0x56>
    23ee:	c7 01       	movw	r24, r14
    23f0:	b8 01       	movw	r22, r16
    23f2:	0e 94 ca 14 	call	0x2994	; 0x2994 <__fpcmp_parts_f>
    23f6:	01 c0       	rjmp	.+2      	; 0x23fa <__gtsf2+0x58>
    23f8:	8f ef       	ldi	r24, 0xFF	; 255
    23fa:	68 96       	adiw	r28, 0x18	; 24
    23fc:	e6 e0       	ldi	r30, 0x06	; 6
    23fe:	0c 94 da 2d 	jmp	0x5bb4	; 0x5bb4 <__epilogue_restores__+0x18>

00002402 <__gesf2>:
    2402:	a8 e1       	ldi	r26, 0x18	; 24
    2404:	b0 e0       	ldi	r27, 0x00	; 0
    2406:	e7 e0       	ldi	r30, 0x07	; 7
    2408:	f2 e1       	ldi	r31, 0x12	; 18
    240a:	0c 94 be 2d 	jmp	0x5b7c	; 0x5b7c <__prologue_saves__+0x18>
    240e:	69 83       	std	Y+1, r22	; 0x01
    2410:	7a 83       	std	Y+2, r23	; 0x02
    2412:	8b 83       	std	Y+3, r24	; 0x03
    2414:	9c 83       	std	Y+4, r25	; 0x04
    2416:	2d 83       	std	Y+5, r18	; 0x05
    2418:	3e 83       	std	Y+6, r19	; 0x06
    241a:	4f 83       	std	Y+7, r20	; 0x07
    241c:	58 87       	std	Y+8, r21	; 0x08
    241e:	89 e0       	ldi	r24, 0x09	; 9
    2420:	e8 2e       	mov	r14, r24
    2422:	f1 2c       	mov	r15, r1
    2424:	ec 0e       	add	r14, r28
    2426:	fd 1e       	adc	r15, r29
    2428:	ce 01       	movw	r24, r28
    242a:	01 96       	adiw	r24, 0x01	; 1
    242c:	b7 01       	movw	r22, r14
    242e:	0e 94 52 14 	call	0x28a4	; 0x28a4 <__unpack_f>
    2432:	8e 01       	movw	r16, r28
    2434:	0f 5e       	subi	r16, 0xEF	; 239
    2436:	1f 4f       	sbci	r17, 0xFF	; 255
    2438:	ce 01       	movw	r24, r28
    243a:	05 96       	adiw	r24, 0x05	; 5
    243c:	b8 01       	movw	r22, r16
    243e:	0e 94 52 14 	call	0x28a4	; 0x28a4 <__unpack_f>
    2442:	89 85       	ldd	r24, Y+9	; 0x09
    2444:	82 30       	cpi	r24, 0x02	; 2
    2446:	40 f0       	brcs	.+16     	; 0x2458 <__gesf2+0x56>
    2448:	89 89       	ldd	r24, Y+17	; 0x11
    244a:	82 30       	cpi	r24, 0x02	; 2
    244c:	28 f0       	brcs	.+10     	; 0x2458 <__gesf2+0x56>
    244e:	c7 01       	movw	r24, r14
    2450:	b8 01       	movw	r22, r16
    2452:	0e 94 ca 14 	call	0x2994	; 0x2994 <__fpcmp_parts_f>
    2456:	01 c0       	rjmp	.+2      	; 0x245a <__gesf2+0x58>
    2458:	8f ef       	ldi	r24, 0xFF	; 255
    245a:	68 96       	adiw	r28, 0x18	; 24
    245c:	e6 e0       	ldi	r30, 0x06	; 6
    245e:	0c 94 da 2d 	jmp	0x5bb4	; 0x5bb4 <__epilogue_restores__+0x18>

00002462 <__ltsf2>:
    2462:	a8 e1       	ldi	r26, 0x18	; 24
    2464:	b0 e0       	ldi	r27, 0x00	; 0
    2466:	e7 e3       	ldi	r30, 0x37	; 55
    2468:	f2 e1       	ldi	r31, 0x12	; 18
    246a:	0c 94 be 2d 	jmp	0x5b7c	; 0x5b7c <__prologue_saves__+0x18>
    246e:	69 83       	std	Y+1, r22	; 0x01
    2470:	7a 83       	std	Y+2, r23	; 0x02
    2472:	8b 83       	std	Y+3, r24	; 0x03
    2474:	9c 83       	std	Y+4, r25	; 0x04
    2476:	2d 83       	std	Y+5, r18	; 0x05
    2478:	3e 83       	std	Y+6, r19	; 0x06
    247a:	4f 83       	std	Y+7, r20	; 0x07
    247c:	58 87       	std	Y+8, r21	; 0x08
    247e:	89 e0       	ldi	r24, 0x09	; 9
    2480:	e8 2e       	mov	r14, r24
    2482:	f1 2c       	mov	r15, r1
    2484:	ec 0e       	add	r14, r28
    2486:	fd 1e       	adc	r15, r29
    2488:	ce 01       	movw	r24, r28
    248a:	01 96       	adiw	r24, 0x01	; 1
    248c:	b7 01       	movw	r22, r14
    248e:	0e 94 52 14 	call	0x28a4	; 0x28a4 <__unpack_f>
    2492:	8e 01       	movw	r16, r28
    2494:	0f 5e       	subi	r16, 0xEF	; 239
    2496:	1f 4f       	sbci	r17, 0xFF	; 255
    2498:	ce 01       	movw	r24, r28
    249a:	05 96       	adiw	r24, 0x05	; 5
    249c:	b8 01       	movw	r22, r16
    249e:	0e 94 52 14 	call	0x28a4	; 0x28a4 <__unpack_f>
    24a2:	89 85       	ldd	r24, Y+9	; 0x09
    24a4:	82 30       	cpi	r24, 0x02	; 2
    24a6:	40 f0       	brcs	.+16     	; 0x24b8 <__ltsf2+0x56>
    24a8:	89 89       	ldd	r24, Y+17	; 0x11
    24aa:	82 30       	cpi	r24, 0x02	; 2
    24ac:	28 f0       	brcs	.+10     	; 0x24b8 <__ltsf2+0x56>
    24ae:	c7 01       	movw	r24, r14
    24b0:	b8 01       	movw	r22, r16
    24b2:	0e 94 ca 14 	call	0x2994	; 0x2994 <__fpcmp_parts_f>
    24b6:	01 c0       	rjmp	.+2      	; 0x24ba <__ltsf2+0x58>
    24b8:	81 e0       	ldi	r24, 0x01	; 1
    24ba:	68 96       	adiw	r28, 0x18	; 24
    24bc:	e6 e0       	ldi	r30, 0x06	; 6
    24be:	0c 94 da 2d 	jmp	0x5bb4	; 0x5bb4 <__epilogue_restores__+0x18>

000024c2 <__fixsfsi>:
    24c2:	ac e0       	ldi	r26, 0x0C	; 12
    24c4:	b0 e0       	ldi	r27, 0x00	; 0
    24c6:	e7 e6       	ldi	r30, 0x67	; 103
    24c8:	f2 e1       	ldi	r31, 0x12	; 18
    24ca:	0c 94 c2 2d 	jmp	0x5b84	; 0x5b84 <__prologue_saves__+0x20>
    24ce:	69 83       	std	Y+1, r22	; 0x01
    24d0:	7a 83       	std	Y+2, r23	; 0x02
    24d2:	8b 83       	std	Y+3, r24	; 0x03
    24d4:	9c 83       	std	Y+4, r25	; 0x04
    24d6:	ce 01       	movw	r24, r28
    24d8:	01 96       	adiw	r24, 0x01	; 1
    24da:	be 01       	movw	r22, r28
    24dc:	6b 5f       	subi	r22, 0xFB	; 251
    24de:	7f 4f       	sbci	r23, 0xFF	; 255
    24e0:	0e 94 52 14 	call	0x28a4	; 0x28a4 <__unpack_f>
    24e4:	8d 81       	ldd	r24, Y+5	; 0x05
    24e6:	82 30       	cpi	r24, 0x02	; 2
    24e8:	61 f1       	breq	.+88     	; 0x2542 <__fixsfsi+0x80>
    24ea:	82 30       	cpi	r24, 0x02	; 2
    24ec:	50 f1       	brcs	.+84     	; 0x2542 <__fixsfsi+0x80>
    24ee:	84 30       	cpi	r24, 0x04	; 4
    24f0:	21 f4       	brne	.+8      	; 0x24fa <__fixsfsi+0x38>
    24f2:	8e 81       	ldd	r24, Y+6	; 0x06
    24f4:	88 23       	and	r24, r24
    24f6:	51 f1       	breq	.+84     	; 0x254c <__fixsfsi+0x8a>
    24f8:	2e c0       	rjmp	.+92     	; 0x2556 <__fixsfsi+0x94>
    24fa:	2f 81       	ldd	r18, Y+7	; 0x07
    24fc:	38 85       	ldd	r19, Y+8	; 0x08
    24fe:	37 fd       	sbrc	r19, 7
    2500:	20 c0       	rjmp	.+64     	; 0x2542 <__fixsfsi+0x80>
    2502:	6e 81       	ldd	r22, Y+6	; 0x06
    2504:	2f 31       	cpi	r18, 0x1F	; 31
    2506:	31 05       	cpc	r19, r1
    2508:	1c f0       	brlt	.+6      	; 0x2510 <__fixsfsi+0x4e>
    250a:	66 23       	and	r22, r22
    250c:	f9 f0       	breq	.+62     	; 0x254c <__fixsfsi+0x8a>
    250e:	23 c0       	rjmp	.+70     	; 0x2556 <__fixsfsi+0x94>
    2510:	8e e1       	ldi	r24, 0x1E	; 30
    2512:	90 e0       	ldi	r25, 0x00	; 0
    2514:	82 1b       	sub	r24, r18
    2516:	93 0b       	sbc	r25, r19
    2518:	29 85       	ldd	r18, Y+9	; 0x09
    251a:	3a 85       	ldd	r19, Y+10	; 0x0a
    251c:	4b 85       	ldd	r20, Y+11	; 0x0b
    251e:	5c 85       	ldd	r21, Y+12	; 0x0c
    2520:	04 c0       	rjmp	.+8      	; 0x252a <__fixsfsi+0x68>
    2522:	56 95       	lsr	r21
    2524:	47 95       	ror	r20
    2526:	37 95       	ror	r19
    2528:	27 95       	ror	r18
    252a:	8a 95       	dec	r24
    252c:	d2 f7       	brpl	.-12     	; 0x2522 <__fixsfsi+0x60>
    252e:	66 23       	and	r22, r22
    2530:	b1 f0       	breq	.+44     	; 0x255e <__fixsfsi+0x9c>
    2532:	50 95       	com	r21
    2534:	40 95       	com	r20
    2536:	30 95       	com	r19
    2538:	21 95       	neg	r18
    253a:	3f 4f       	sbci	r19, 0xFF	; 255
    253c:	4f 4f       	sbci	r20, 0xFF	; 255
    253e:	5f 4f       	sbci	r21, 0xFF	; 255
    2540:	0e c0       	rjmp	.+28     	; 0x255e <__fixsfsi+0x9c>
    2542:	20 e0       	ldi	r18, 0x00	; 0
    2544:	30 e0       	ldi	r19, 0x00	; 0
    2546:	40 e0       	ldi	r20, 0x00	; 0
    2548:	50 e0       	ldi	r21, 0x00	; 0
    254a:	09 c0       	rjmp	.+18     	; 0x255e <__fixsfsi+0x9c>
    254c:	2f ef       	ldi	r18, 0xFF	; 255
    254e:	3f ef       	ldi	r19, 0xFF	; 255
    2550:	4f ef       	ldi	r20, 0xFF	; 255
    2552:	5f e7       	ldi	r21, 0x7F	; 127
    2554:	04 c0       	rjmp	.+8      	; 0x255e <__fixsfsi+0x9c>
    2556:	20 e0       	ldi	r18, 0x00	; 0
    2558:	30 e0       	ldi	r19, 0x00	; 0
    255a:	40 e0       	ldi	r20, 0x00	; 0
    255c:	50 e8       	ldi	r21, 0x80	; 128
    255e:	b9 01       	movw	r22, r18
    2560:	ca 01       	movw	r24, r20
    2562:	2c 96       	adiw	r28, 0x0c	; 12
    2564:	e2 e0       	ldi	r30, 0x02	; 2
    2566:	0c 94 de 2d 	jmp	0x5bbc	; 0x5bbc <__epilogue_restores__+0x20>

0000256a <__floatunsisf>:
    256a:	a8 e0       	ldi	r26, 0x08	; 8
    256c:	b0 e0       	ldi	r27, 0x00	; 0
    256e:	eb eb       	ldi	r30, 0xBB	; 187
    2570:	f2 e1       	ldi	r31, 0x12	; 18
    2572:	0c 94 ba 2d 	jmp	0x5b74	; 0x5b74 <__prologue_saves__+0x10>
    2576:	7b 01       	movw	r14, r22
    2578:	8c 01       	movw	r16, r24
    257a:	61 15       	cp	r22, r1
    257c:	71 05       	cpc	r23, r1
    257e:	81 05       	cpc	r24, r1
    2580:	91 05       	cpc	r25, r1
    2582:	19 f4       	brne	.+6      	; 0x258a <__floatunsisf+0x20>
    2584:	82 e0       	ldi	r24, 0x02	; 2
    2586:	89 83       	std	Y+1, r24	; 0x01
    2588:	60 c0       	rjmp	.+192    	; 0x264a <__floatunsisf+0xe0>
    258a:	83 e0       	ldi	r24, 0x03	; 3
    258c:	89 83       	std	Y+1, r24	; 0x01
    258e:	8e e1       	ldi	r24, 0x1E	; 30
    2590:	c8 2e       	mov	r12, r24
    2592:	d1 2c       	mov	r13, r1
    2594:	dc 82       	std	Y+4, r13	; 0x04
    2596:	cb 82       	std	Y+3, r12	; 0x03
    2598:	ed 82       	std	Y+5, r14	; 0x05
    259a:	fe 82       	std	Y+6, r15	; 0x06
    259c:	0f 83       	std	Y+7, r16	; 0x07
    259e:	18 87       	std	Y+8, r17	; 0x08
    25a0:	c8 01       	movw	r24, r16
    25a2:	b7 01       	movw	r22, r14
    25a4:	0e 94 2e 13 	call	0x265c	; 0x265c <__clzsi2>
    25a8:	fc 01       	movw	r30, r24
    25aa:	31 97       	sbiw	r30, 0x01	; 1
    25ac:	f7 ff       	sbrs	r31, 7
    25ae:	3b c0       	rjmp	.+118    	; 0x2626 <__floatunsisf+0xbc>
    25b0:	22 27       	eor	r18, r18
    25b2:	33 27       	eor	r19, r19
    25b4:	2e 1b       	sub	r18, r30
    25b6:	3f 0b       	sbc	r19, r31
    25b8:	57 01       	movw	r10, r14
    25ba:	68 01       	movw	r12, r16
    25bc:	02 2e       	mov	r0, r18
    25be:	04 c0       	rjmp	.+8      	; 0x25c8 <__floatunsisf+0x5e>
    25c0:	d6 94       	lsr	r13
    25c2:	c7 94       	ror	r12
    25c4:	b7 94       	ror	r11
    25c6:	a7 94       	ror	r10
    25c8:	0a 94       	dec	r0
    25ca:	d2 f7       	brpl	.-12     	; 0x25c0 <__floatunsisf+0x56>
    25cc:	40 e0       	ldi	r20, 0x00	; 0
    25ce:	50 e0       	ldi	r21, 0x00	; 0
    25d0:	60 e0       	ldi	r22, 0x00	; 0
    25d2:	70 e0       	ldi	r23, 0x00	; 0
    25d4:	81 e0       	ldi	r24, 0x01	; 1
    25d6:	90 e0       	ldi	r25, 0x00	; 0
    25d8:	a0 e0       	ldi	r26, 0x00	; 0
    25da:	b0 e0       	ldi	r27, 0x00	; 0
    25dc:	04 c0       	rjmp	.+8      	; 0x25e6 <__floatunsisf+0x7c>
    25de:	88 0f       	add	r24, r24
    25e0:	99 1f       	adc	r25, r25
    25e2:	aa 1f       	adc	r26, r26
    25e4:	bb 1f       	adc	r27, r27
    25e6:	2a 95       	dec	r18
    25e8:	d2 f7       	brpl	.-12     	; 0x25de <__floatunsisf+0x74>
    25ea:	01 97       	sbiw	r24, 0x01	; 1
    25ec:	a1 09       	sbc	r26, r1
    25ee:	b1 09       	sbc	r27, r1
    25f0:	8e 21       	and	r24, r14
    25f2:	9f 21       	and	r25, r15
    25f4:	a0 23       	and	r26, r16
    25f6:	b1 23       	and	r27, r17
    25f8:	00 97       	sbiw	r24, 0x00	; 0
    25fa:	a1 05       	cpc	r26, r1
    25fc:	b1 05       	cpc	r27, r1
    25fe:	21 f0       	breq	.+8      	; 0x2608 <__floatunsisf+0x9e>
    2600:	41 e0       	ldi	r20, 0x01	; 1
    2602:	50 e0       	ldi	r21, 0x00	; 0
    2604:	60 e0       	ldi	r22, 0x00	; 0
    2606:	70 e0       	ldi	r23, 0x00	; 0
    2608:	4a 29       	or	r20, r10
    260a:	5b 29       	or	r21, r11
    260c:	6c 29       	or	r22, r12
    260e:	7d 29       	or	r23, r13
    2610:	4d 83       	std	Y+5, r20	; 0x05
    2612:	5e 83       	std	Y+6, r21	; 0x06
    2614:	6f 83       	std	Y+7, r22	; 0x07
    2616:	78 87       	std	Y+8, r23	; 0x08
    2618:	8e e1       	ldi	r24, 0x1E	; 30
    261a:	90 e0       	ldi	r25, 0x00	; 0
    261c:	8e 1b       	sub	r24, r30
    261e:	9f 0b       	sbc	r25, r31
    2620:	9c 83       	std	Y+4, r25	; 0x04
    2622:	8b 83       	std	Y+3, r24	; 0x03
    2624:	12 c0       	rjmp	.+36     	; 0x264a <__floatunsisf+0xe0>
    2626:	30 97       	sbiw	r30, 0x00	; 0
    2628:	81 f0       	breq	.+32     	; 0x264a <__floatunsisf+0xe0>
    262a:	0e 2e       	mov	r0, r30
    262c:	04 c0       	rjmp	.+8      	; 0x2636 <__floatunsisf+0xcc>
    262e:	ee 0c       	add	r14, r14
    2630:	ff 1c       	adc	r15, r15
    2632:	00 1f       	adc	r16, r16
    2634:	11 1f       	adc	r17, r17
    2636:	0a 94       	dec	r0
    2638:	d2 f7       	brpl	.-12     	; 0x262e <__floatunsisf+0xc4>
    263a:	ed 82       	std	Y+5, r14	; 0x05
    263c:	fe 82       	std	Y+6, r15	; 0x06
    263e:	0f 83       	std	Y+7, r16	; 0x07
    2640:	18 87       	std	Y+8, r17	; 0x08
    2642:	ce 1a       	sub	r12, r30
    2644:	df 0a       	sbc	r13, r31
    2646:	dc 82       	std	Y+4, r13	; 0x04
    2648:	cb 82       	std	Y+3, r12	; 0x03
    264a:	1a 82       	std	Y+2, r1	; 0x02
    264c:	ce 01       	movw	r24, r28
    264e:	01 96       	adiw	r24, 0x01	; 1
    2650:	0e 94 7d 13 	call	0x26fa	; 0x26fa <__pack_f>
    2654:	28 96       	adiw	r28, 0x08	; 8
    2656:	ea e0       	ldi	r30, 0x0A	; 10
    2658:	0c 94 d6 2d 	jmp	0x5bac	; 0x5bac <__epilogue_restores__+0x10>

0000265c <__clzsi2>:
    265c:	ef 92       	push	r14
    265e:	ff 92       	push	r15
    2660:	0f 93       	push	r16
    2662:	1f 93       	push	r17
    2664:	7b 01       	movw	r14, r22
    2666:	8c 01       	movw	r16, r24
    2668:	80 e0       	ldi	r24, 0x00	; 0
    266a:	e8 16       	cp	r14, r24
    266c:	80 e0       	ldi	r24, 0x00	; 0
    266e:	f8 06       	cpc	r15, r24
    2670:	81 e0       	ldi	r24, 0x01	; 1
    2672:	08 07       	cpc	r16, r24
    2674:	80 e0       	ldi	r24, 0x00	; 0
    2676:	18 07       	cpc	r17, r24
    2678:	88 f4       	brcc	.+34     	; 0x269c <__clzsi2+0x40>
    267a:	8f ef       	ldi	r24, 0xFF	; 255
    267c:	e8 16       	cp	r14, r24
    267e:	f1 04       	cpc	r15, r1
    2680:	01 05       	cpc	r16, r1
    2682:	11 05       	cpc	r17, r1
    2684:	31 f0       	breq	.+12     	; 0x2692 <__clzsi2+0x36>
    2686:	28 f0       	brcs	.+10     	; 0x2692 <__clzsi2+0x36>
    2688:	88 e0       	ldi	r24, 0x08	; 8
    268a:	90 e0       	ldi	r25, 0x00	; 0
    268c:	a0 e0       	ldi	r26, 0x00	; 0
    268e:	b0 e0       	ldi	r27, 0x00	; 0
    2690:	17 c0       	rjmp	.+46     	; 0x26c0 <__clzsi2+0x64>
    2692:	80 e0       	ldi	r24, 0x00	; 0
    2694:	90 e0       	ldi	r25, 0x00	; 0
    2696:	a0 e0       	ldi	r26, 0x00	; 0
    2698:	b0 e0       	ldi	r27, 0x00	; 0
    269a:	12 c0       	rjmp	.+36     	; 0x26c0 <__clzsi2+0x64>
    269c:	80 e0       	ldi	r24, 0x00	; 0
    269e:	e8 16       	cp	r14, r24
    26a0:	80 e0       	ldi	r24, 0x00	; 0
    26a2:	f8 06       	cpc	r15, r24
    26a4:	80 e0       	ldi	r24, 0x00	; 0
    26a6:	08 07       	cpc	r16, r24
    26a8:	81 e0       	ldi	r24, 0x01	; 1
    26aa:	18 07       	cpc	r17, r24
    26ac:	28 f0       	brcs	.+10     	; 0x26b8 <__clzsi2+0x5c>
    26ae:	88 e1       	ldi	r24, 0x18	; 24
    26b0:	90 e0       	ldi	r25, 0x00	; 0
    26b2:	a0 e0       	ldi	r26, 0x00	; 0
    26b4:	b0 e0       	ldi	r27, 0x00	; 0
    26b6:	04 c0       	rjmp	.+8      	; 0x26c0 <__clzsi2+0x64>
    26b8:	80 e1       	ldi	r24, 0x10	; 16
    26ba:	90 e0       	ldi	r25, 0x00	; 0
    26bc:	a0 e0       	ldi	r26, 0x00	; 0
    26be:	b0 e0       	ldi	r27, 0x00	; 0
    26c0:	20 e2       	ldi	r18, 0x20	; 32
    26c2:	30 e0       	ldi	r19, 0x00	; 0
    26c4:	40 e0       	ldi	r20, 0x00	; 0
    26c6:	50 e0       	ldi	r21, 0x00	; 0
    26c8:	28 1b       	sub	r18, r24
    26ca:	39 0b       	sbc	r19, r25
    26cc:	4a 0b       	sbc	r20, r26
    26ce:	5b 0b       	sbc	r21, r27
    26d0:	04 c0       	rjmp	.+8      	; 0x26da <__clzsi2+0x7e>
    26d2:	16 95       	lsr	r17
    26d4:	07 95       	ror	r16
    26d6:	f7 94       	ror	r15
    26d8:	e7 94       	ror	r14
    26da:	8a 95       	dec	r24
    26dc:	d2 f7       	brpl	.-12     	; 0x26d2 <__clzsi2+0x76>
    26de:	f7 01       	movw	r30, r14
    26e0:	e3 58       	subi	r30, 0x83	; 131
    26e2:	ff 4f       	sbci	r31, 0xFF	; 255
    26e4:	80 81       	ld	r24, Z
    26e6:	28 1b       	sub	r18, r24
    26e8:	31 09       	sbc	r19, r1
    26ea:	41 09       	sbc	r20, r1
    26ec:	51 09       	sbc	r21, r1
    26ee:	c9 01       	movw	r24, r18
    26f0:	1f 91       	pop	r17
    26f2:	0f 91       	pop	r16
    26f4:	ff 90       	pop	r15
    26f6:	ef 90       	pop	r14
    26f8:	08 95       	ret

000026fa <__pack_f>:
    26fa:	df 92       	push	r13
    26fc:	ef 92       	push	r14
    26fe:	ff 92       	push	r15
    2700:	0f 93       	push	r16
    2702:	1f 93       	push	r17
    2704:	fc 01       	movw	r30, r24
    2706:	e4 80       	ldd	r14, Z+4	; 0x04
    2708:	f5 80       	ldd	r15, Z+5	; 0x05
    270a:	06 81       	ldd	r16, Z+6	; 0x06
    270c:	17 81       	ldd	r17, Z+7	; 0x07
    270e:	d1 80       	ldd	r13, Z+1	; 0x01
    2710:	80 81       	ld	r24, Z
    2712:	82 30       	cpi	r24, 0x02	; 2
    2714:	48 f4       	brcc	.+18     	; 0x2728 <__pack_f+0x2e>
    2716:	80 e0       	ldi	r24, 0x00	; 0
    2718:	90 e0       	ldi	r25, 0x00	; 0
    271a:	a0 e1       	ldi	r26, 0x10	; 16
    271c:	b0 e0       	ldi	r27, 0x00	; 0
    271e:	e8 2a       	or	r14, r24
    2720:	f9 2a       	or	r15, r25
    2722:	0a 2b       	or	r16, r26
    2724:	1b 2b       	or	r17, r27
    2726:	a5 c0       	rjmp	.+330    	; 0x2872 <__pack_f+0x178>
    2728:	84 30       	cpi	r24, 0x04	; 4
    272a:	09 f4       	brne	.+2      	; 0x272e <__pack_f+0x34>
    272c:	9f c0       	rjmp	.+318    	; 0x286c <__pack_f+0x172>
    272e:	82 30       	cpi	r24, 0x02	; 2
    2730:	21 f4       	brne	.+8      	; 0x273a <__pack_f+0x40>
    2732:	ee 24       	eor	r14, r14
    2734:	ff 24       	eor	r15, r15
    2736:	87 01       	movw	r16, r14
    2738:	05 c0       	rjmp	.+10     	; 0x2744 <__pack_f+0x4a>
    273a:	e1 14       	cp	r14, r1
    273c:	f1 04       	cpc	r15, r1
    273e:	01 05       	cpc	r16, r1
    2740:	11 05       	cpc	r17, r1
    2742:	19 f4       	brne	.+6      	; 0x274a <__pack_f+0x50>
    2744:	e0 e0       	ldi	r30, 0x00	; 0
    2746:	f0 e0       	ldi	r31, 0x00	; 0
    2748:	96 c0       	rjmp	.+300    	; 0x2876 <__pack_f+0x17c>
    274a:	62 81       	ldd	r22, Z+2	; 0x02
    274c:	73 81       	ldd	r23, Z+3	; 0x03
    274e:	9f ef       	ldi	r25, 0xFF	; 255
    2750:	62 38       	cpi	r22, 0x82	; 130
    2752:	79 07       	cpc	r23, r25
    2754:	0c f0       	brlt	.+2      	; 0x2758 <__pack_f+0x5e>
    2756:	5b c0       	rjmp	.+182    	; 0x280e <__pack_f+0x114>
    2758:	22 e8       	ldi	r18, 0x82	; 130
    275a:	3f ef       	ldi	r19, 0xFF	; 255
    275c:	26 1b       	sub	r18, r22
    275e:	37 0b       	sbc	r19, r23
    2760:	2a 31       	cpi	r18, 0x1A	; 26
    2762:	31 05       	cpc	r19, r1
    2764:	2c f0       	brlt	.+10     	; 0x2770 <__pack_f+0x76>
    2766:	20 e0       	ldi	r18, 0x00	; 0
    2768:	30 e0       	ldi	r19, 0x00	; 0
    276a:	40 e0       	ldi	r20, 0x00	; 0
    276c:	50 e0       	ldi	r21, 0x00	; 0
    276e:	2a c0       	rjmp	.+84     	; 0x27c4 <__pack_f+0xca>
    2770:	b8 01       	movw	r22, r16
    2772:	a7 01       	movw	r20, r14
    2774:	02 2e       	mov	r0, r18
    2776:	04 c0       	rjmp	.+8      	; 0x2780 <__pack_f+0x86>
    2778:	76 95       	lsr	r23
    277a:	67 95       	ror	r22
    277c:	57 95       	ror	r21
    277e:	47 95       	ror	r20
    2780:	0a 94       	dec	r0
    2782:	d2 f7       	brpl	.-12     	; 0x2778 <__pack_f+0x7e>
    2784:	81 e0       	ldi	r24, 0x01	; 1
    2786:	90 e0       	ldi	r25, 0x00	; 0
    2788:	a0 e0       	ldi	r26, 0x00	; 0
    278a:	b0 e0       	ldi	r27, 0x00	; 0
    278c:	04 c0       	rjmp	.+8      	; 0x2796 <__pack_f+0x9c>
    278e:	88 0f       	add	r24, r24
    2790:	99 1f       	adc	r25, r25
    2792:	aa 1f       	adc	r26, r26
    2794:	bb 1f       	adc	r27, r27
    2796:	2a 95       	dec	r18
    2798:	d2 f7       	brpl	.-12     	; 0x278e <__pack_f+0x94>
    279a:	01 97       	sbiw	r24, 0x01	; 1
    279c:	a1 09       	sbc	r26, r1
    279e:	b1 09       	sbc	r27, r1
    27a0:	8e 21       	and	r24, r14
    27a2:	9f 21       	and	r25, r15
    27a4:	a0 23       	and	r26, r16
    27a6:	b1 23       	and	r27, r17
    27a8:	00 97       	sbiw	r24, 0x00	; 0
    27aa:	a1 05       	cpc	r26, r1
    27ac:	b1 05       	cpc	r27, r1
    27ae:	21 f0       	breq	.+8      	; 0x27b8 <__pack_f+0xbe>
    27b0:	81 e0       	ldi	r24, 0x01	; 1
    27b2:	90 e0       	ldi	r25, 0x00	; 0
    27b4:	a0 e0       	ldi	r26, 0x00	; 0
    27b6:	b0 e0       	ldi	r27, 0x00	; 0
    27b8:	9a 01       	movw	r18, r20
    27ba:	ab 01       	movw	r20, r22
    27bc:	28 2b       	or	r18, r24
    27be:	39 2b       	or	r19, r25
    27c0:	4a 2b       	or	r20, r26
    27c2:	5b 2b       	or	r21, r27
    27c4:	da 01       	movw	r26, r20
    27c6:	c9 01       	movw	r24, r18
    27c8:	8f 77       	andi	r24, 0x7F	; 127
    27ca:	90 70       	andi	r25, 0x00	; 0
    27cc:	a0 70       	andi	r26, 0x00	; 0
    27ce:	b0 70       	andi	r27, 0x00	; 0
    27d0:	80 34       	cpi	r24, 0x40	; 64
    27d2:	91 05       	cpc	r25, r1
    27d4:	a1 05       	cpc	r26, r1
    27d6:	b1 05       	cpc	r27, r1
    27d8:	39 f4       	brne	.+14     	; 0x27e8 <__pack_f+0xee>
    27da:	27 ff       	sbrs	r18, 7
    27dc:	09 c0       	rjmp	.+18     	; 0x27f0 <__pack_f+0xf6>
    27de:	20 5c       	subi	r18, 0xC0	; 192
    27e0:	3f 4f       	sbci	r19, 0xFF	; 255
    27e2:	4f 4f       	sbci	r20, 0xFF	; 255
    27e4:	5f 4f       	sbci	r21, 0xFF	; 255
    27e6:	04 c0       	rjmp	.+8      	; 0x27f0 <__pack_f+0xf6>
    27e8:	21 5c       	subi	r18, 0xC1	; 193
    27ea:	3f 4f       	sbci	r19, 0xFF	; 255
    27ec:	4f 4f       	sbci	r20, 0xFF	; 255
    27ee:	5f 4f       	sbci	r21, 0xFF	; 255
    27f0:	e0 e0       	ldi	r30, 0x00	; 0
    27f2:	f0 e0       	ldi	r31, 0x00	; 0
    27f4:	20 30       	cpi	r18, 0x00	; 0
    27f6:	a0 e0       	ldi	r26, 0x00	; 0
    27f8:	3a 07       	cpc	r19, r26
    27fa:	a0 e0       	ldi	r26, 0x00	; 0
    27fc:	4a 07       	cpc	r20, r26
    27fe:	a0 e4       	ldi	r26, 0x40	; 64
    2800:	5a 07       	cpc	r21, r26
    2802:	10 f0       	brcs	.+4      	; 0x2808 <__pack_f+0x10e>
    2804:	e1 e0       	ldi	r30, 0x01	; 1
    2806:	f0 e0       	ldi	r31, 0x00	; 0
    2808:	79 01       	movw	r14, r18
    280a:	8a 01       	movw	r16, r20
    280c:	27 c0       	rjmp	.+78     	; 0x285c <__pack_f+0x162>
    280e:	60 38       	cpi	r22, 0x80	; 128
    2810:	71 05       	cpc	r23, r1
    2812:	64 f5       	brge	.+88     	; 0x286c <__pack_f+0x172>
    2814:	fb 01       	movw	r30, r22
    2816:	e1 58       	subi	r30, 0x81	; 129
    2818:	ff 4f       	sbci	r31, 0xFF	; 255
    281a:	d8 01       	movw	r26, r16
    281c:	c7 01       	movw	r24, r14
    281e:	8f 77       	andi	r24, 0x7F	; 127
    2820:	90 70       	andi	r25, 0x00	; 0
    2822:	a0 70       	andi	r26, 0x00	; 0
    2824:	b0 70       	andi	r27, 0x00	; 0
    2826:	80 34       	cpi	r24, 0x40	; 64
    2828:	91 05       	cpc	r25, r1
    282a:	a1 05       	cpc	r26, r1
    282c:	b1 05       	cpc	r27, r1
    282e:	39 f4       	brne	.+14     	; 0x283e <__pack_f+0x144>
    2830:	e7 fe       	sbrs	r14, 7
    2832:	0d c0       	rjmp	.+26     	; 0x284e <__pack_f+0x154>
    2834:	80 e4       	ldi	r24, 0x40	; 64
    2836:	90 e0       	ldi	r25, 0x00	; 0
    2838:	a0 e0       	ldi	r26, 0x00	; 0
    283a:	b0 e0       	ldi	r27, 0x00	; 0
    283c:	04 c0       	rjmp	.+8      	; 0x2846 <__pack_f+0x14c>
    283e:	8f e3       	ldi	r24, 0x3F	; 63
    2840:	90 e0       	ldi	r25, 0x00	; 0
    2842:	a0 e0       	ldi	r26, 0x00	; 0
    2844:	b0 e0       	ldi	r27, 0x00	; 0
    2846:	e8 0e       	add	r14, r24
    2848:	f9 1e       	adc	r15, r25
    284a:	0a 1f       	adc	r16, r26
    284c:	1b 1f       	adc	r17, r27
    284e:	17 ff       	sbrs	r17, 7
    2850:	05 c0       	rjmp	.+10     	; 0x285c <__pack_f+0x162>
    2852:	16 95       	lsr	r17
    2854:	07 95       	ror	r16
    2856:	f7 94       	ror	r15
    2858:	e7 94       	ror	r14
    285a:	31 96       	adiw	r30, 0x01	; 1
    285c:	87 e0       	ldi	r24, 0x07	; 7
    285e:	16 95       	lsr	r17
    2860:	07 95       	ror	r16
    2862:	f7 94       	ror	r15
    2864:	e7 94       	ror	r14
    2866:	8a 95       	dec	r24
    2868:	d1 f7       	brne	.-12     	; 0x285e <__pack_f+0x164>
    286a:	05 c0       	rjmp	.+10     	; 0x2876 <__pack_f+0x17c>
    286c:	ee 24       	eor	r14, r14
    286e:	ff 24       	eor	r15, r15
    2870:	87 01       	movw	r16, r14
    2872:	ef ef       	ldi	r30, 0xFF	; 255
    2874:	f0 e0       	ldi	r31, 0x00	; 0
    2876:	6e 2f       	mov	r22, r30
    2878:	67 95       	ror	r22
    287a:	66 27       	eor	r22, r22
    287c:	67 95       	ror	r22
    287e:	90 2f       	mov	r25, r16
    2880:	9f 77       	andi	r25, 0x7F	; 127
    2882:	d7 94       	ror	r13
    2884:	dd 24       	eor	r13, r13
    2886:	d7 94       	ror	r13
    2888:	8e 2f       	mov	r24, r30
    288a:	86 95       	lsr	r24
    288c:	49 2f       	mov	r20, r25
    288e:	46 2b       	or	r20, r22
    2890:	58 2f       	mov	r21, r24
    2892:	5d 29       	or	r21, r13
    2894:	b7 01       	movw	r22, r14
    2896:	ca 01       	movw	r24, r20
    2898:	1f 91       	pop	r17
    289a:	0f 91       	pop	r16
    289c:	ff 90       	pop	r15
    289e:	ef 90       	pop	r14
    28a0:	df 90       	pop	r13
    28a2:	08 95       	ret

000028a4 <__unpack_f>:
    28a4:	fc 01       	movw	r30, r24
    28a6:	db 01       	movw	r26, r22
    28a8:	40 81       	ld	r20, Z
    28aa:	51 81       	ldd	r21, Z+1	; 0x01
    28ac:	22 81       	ldd	r18, Z+2	; 0x02
    28ae:	62 2f       	mov	r22, r18
    28b0:	6f 77       	andi	r22, 0x7F	; 127
    28b2:	70 e0       	ldi	r23, 0x00	; 0
    28b4:	22 1f       	adc	r18, r18
    28b6:	22 27       	eor	r18, r18
    28b8:	22 1f       	adc	r18, r18
    28ba:	93 81       	ldd	r25, Z+3	; 0x03
    28bc:	89 2f       	mov	r24, r25
    28be:	88 0f       	add	r24, r24
    28c0:	82 2b       	or	r24, r18
    28c2:	28 2f       	mov	r18, r24
    28c4:	30 e0       	ldi	r19, 0x00	; 0
    28c6:	99 1f       	adc	r25, r25
    28c8:	99 27       	eor	r25, r25
    28ca:	99 1f       	adc	r25, r25
    28cc:	11 96       	adiw	r26, 0x01	; 1
    28ce:	9c 93       	st	X, r25
    28d0:	11 97       	sbiw	r26, 0x01	; 1
    28d2:	21 15       	cp	r18, r1
    28d4:	31 05       	cpc	r19, r1
    28d6:	a9 f5       	brne	.+106    	; 0x2942 <__unpack_f+0x9e>
    28d8:	41 15       	cp	r20, r1
    28da:	51 05       	cpc	r21, r1
    28dc:	61 05       	cpc	r22, r1
    28de:	71 05       	cpc	r23, r1
    28e0:	11 f4       	brne	.+4      	; 0x28e6 <__unpack_f+0x42>
    28e2:	82 e0       	ldi	r24, 0x02	; 2
    28e4:	37 c0       	rjmp	.+110    	; 0x2954 <__unpack_f+0xb0>
    28e6:	82 e8       	ldi	r24, 0x82	; 130
    28e8:	9f ef       	ldi	r25, 0xFF	; 255
    28ea:	13 96       	adiw	r26, 0x03	; 3
    28ec:	9c 93       	st	X, r25
    28ee:	8e 93       	st	-X, r24
    28f0:	12 97       	sbiw	r26, 0x02	; 2
    28f2:	9a 01       	movw	r18, r20
    28f4:	ab 01       	movw	r20, r22
    28f6:	67 e0       	ldi	r22, 0x07	; 7
    28f8:	22 0f       	add	r18, r18
    28fa:	33 1f       	adc	r19, r19
    28fc:	44 1f       	adc	r20, r20
    28fe:	55 1f       	adc	r21, r21
    2900:	6a 95       	dec	r22
    2902:	d1 f7       	brne	.-12     	; 0x28f8 <__unpack_f+0x54>
    2904:	83 e0       	ldi	r24, 0x03	; 3
    2906:	8c 93       	st	X, r24
    2908:	0d c0       	rjmp	.+26     	; 0x2924 <__unpack_f+0x80>
    290a:	22 0f       	add	r18, r18
    290c:	33 1f       	adc	r19, r19
    290e:	44 1f       	adc	r20, r20
    2910:	55 1f       	adc	r21, r21
    2912:	12 96       	adiw	r26, 0x02	; 2
    2914:	8d 91       	ld	r24, X+
    2916:	9c 91       	ld	r25, X
    2918:	13 97       	sbiw	r26, 0x03	; 3
    291a:	01 97       	sbiw	r24, 0x01	; 1
    291c:	13 96       	adiw	r26, 0x03	; 3
    291e:	9c 93       	st	X, r25
    2920:	8e 93       	st	-X, r24
    2922:	12 97       	sbiw	r26, 0x02	; 2
    2924:	20 30       	cpi	r18, 0x00	; 0
    2926:	80 e0       	ldi	r24, 0x00	; 0
    2928:	38 07       	cpc	r19, r24
    292a:	80 e0       	ldi	r24, 0x00	; 0
    292c:	48 07       	cpc	r20, r24
    292e:	80 e4       	ldi	r24, 0x40	; 64
    2930:	58 07       	cpc	r21, r24
    2932:	58 f3       	brcs	.-42     	; 0x290a <__unpack_f+0x66>
    2934:	14 96       	adiw	r26, 0x04	; 4
    2936:	2d 93       	st	X+, r18
    2938:	3d 93       	st	X+, r19
    293a:	4d 93       	st	X+, r20
    293c:	5c 93       	st	X, r21
    293e:	17 97       	sbiw	r26, 0x07	; 7
    2940:	08 95       	ret
    2942:	2f 3f       	cpi	r18, 0xFF	; 255
    2944:	31 05       	cpc	r19, r1
    2946:	79 f4       	brne	.+30     	; 0x2966 <__unpack_f+0xc2>
    2948:	41 15       	cp	r20, r1
    294a:	51 05       	cpc	r21, r1
    294c:	61 05       	cpc	r22, r1
    294e:	71 05       	cpc	r23, r1
    2950:	19 f4       	brne	.+6      	; 0x2958 <__unpack_f+0xb4>
    2952:	84 e0       	ldi	r24, 0x04	; 4
    2954:	8c 93       	st	X, r24
    2956:	08 95       	ret
    2958:	64 ff       	sbrs	r22, 4
    295a:	03 c0       	rjmp	.+6      	; 0x2962 <__unpack_f+0xbe>
    295c:	81 e0       	ldi	r24, 0x01	; 1
    295e:	8c 93       	st	X, r24
    2960:	12 c0       	rjmp	.+36     	; 0x2986 <__unpack_f+0xe2>
    2962:	1c 92       	st	X, r1
    2964:	10 c0       	rjmp	.+32     	; 0x2986 <__unpack_f+0xe2>
    2966:	2f 57       	subi	r18, 0x7F	; 127
    2968:	30 40       	sbci	r19, 0x00	; 0
    296a:	13 96       	adiw	r26, 0x03	; 3
    296c:	3c 93       	st	X, r19
    296e:	2e 93       	st	-X, r18
    2970:	12 97       	sbiw	r26, 0x02	; 2
    2972:	83 e0       	ldi	r24, 0x03	; 3
    2974:	8c 93       	st	X, r24
    2976:	87 e0       	ldi	r24, 0x07	; 7
    2978:	44 0f       	add	r20, r20
    297a:	55 1f       	adc	r21, r21
    297c:	66 1f       	adc	r22, r22
    297e:	77 1f       	adc	r23, r23
    2980:	8a 95       	dec	r24
    2982:	d1 f7       	brne	.-12     	; 0x2978 <__unpack_f+0xd4>
    2984:	70 64       	ori	r23, 0x40	; 64
    2986:	14 96       	adiw	r26, 0x04	; 4
    2988:	4d 93       	st	X+, r20
    298a:	5d 93       	st	X+, r21
    298c:	6d 93       	st	X+, r22
    298e:	7c 93       	st	X, r23
    2990:	17 97       	sbiw	r26, 0x07	; 7
    2992:	08 95       	ret

00002994 <__fpcmp_parts_f>:
    2994:	1f 93       	push	r17
    2996:	dc 01       	movw	r26, r24
    2998:	fb 01       	movw	r30, r22
    299a:	9c 91       	ld	r25, X
    299c:	92 30       	cpi	r25, 0x02	; 2
    299e:	08 f4       	brcc	.+2      	; 0x29a2 <__fpcmp_parts_f+0xe>
    29a0:	47 c0       	rjmp	.+142    	; 0x2a30 <__fpcmp_parts_f+0x9c>
    29a2:	80 81       	ld	r24, Z
    29a4:	82 30       	cpi	r24, 0x02	; 2
    29a6:	08 f4       	brcc	.+2      	; 0x29aa <__fpcmp_parts_f+0x16>
    29a8:	43 c0       	rjmp	.+134    	; 0x2a30 <__fpcmp_parts_f+0x9c>
    29aa:	94 30       	cpi	r25, 0x04	; 4
    29ac:	51 f4       	brne	.+20     	; 0x29c2 <__fpcmp_parts_f+0x2e>
    29ae:	11 96       	adiw	r26, 0x01	; 1
    29b0:	1c 91       	ld	r17, X
    29b2:	84 30       	cpi	r24, 0x04	; 4
    29b4:	99 f5       	brne	.+102    	; 0x2a1c <__fpcmp_parts_f+0x88>
    29b6:	81 81       	ldd	r24, Z+1	; 0x01
    29b8:	68 2f       	mov	r22, r24
    29ba:	70 e0       	ldi	r23, 0x00	; 0
    29bc:	61 1b       	sub	r22, r17
    29be:	71 09       	sbc	r23, r1
    29c0:	3f c0       	rjmp	.+126    	; 0x2a40 <__fpcmp_parts_f+0xac>
    29c2:	84 30       	cpi	r24, 0x04	; 4
    29c4:	21 f0       	breq	.+8      	; 0x29ce <__fpcmp_parts_f+0x3a>
    29c6:	92 30       	cpi	r25, 0x02	; 2
    29c8:	31 f4       	brne	.+12     	; 0x29d6 <__fpcmp_parts_f+0x42>
    29ca:	82 30       	cpi	r24, 0x02	; 2
    29cc:	b9 f1       	breq	.+110    	; 0x2a3c <__fpcmp_parts_f+0xa8>
    29ce:	81 81       	ldd	r24, Z+1	; 0x01
    29d0:	88 23       	and	r24, r24
    29d2:	89 f1       	breq	.+98     	; 0x2a36 <__fpcmp_parts_f+0xa2>
    29d4:	2d c0       	rjmp	.+90     	; 0x2a30 <__fpcmp_parts_f+0x9c>
    29d6:	11 96       	adiw	r26, 0x01	; 1
    29d8:	1c 91       	ld	r17, X
    29da:	11 97       	sbiw	r26, 0x01	; 1
    29dc:	82 30       	cpi	r24, 0x02	; 2
    29de:	f1 f0       	breq	.+60     	; 0x2a1c <__fpcmp_parts_f+0x88>
    29e0:	81 81       	ldd	r24, Z+1	; 0x01
    29e2:	18 17       	cp	r17, r24
    29e4:	d9 f4       	brne	.+54     	; 0x2a1c <__fpcmp_parts_f+0x88>
    29e6:	12 96       	adiw	r26, 0x02	; 2
    29e8:	2d 91       	ld	r18, X+
    29ea:	3c 91       	ld	r19, X
    29ec:	13 97       	sbiw	r26, 0x03	; 3
    29ee:	82 81       	ldd	r24, Z+2	; 0x02
    29f0:	93 81       	ldd	r25, Z+3	; 0x03
    29f2:	82 17       	cp	r24, r18
    29f4:	93 07       	cpc	r25, r19
    29f6:	94 f0       	brlt	.+36     	; 0x2a1c <__fpcmp_parts_f+0x88>
    29f8:	28 17       	cp	r18, r24
    29fa:	39 07       	cpc	r19, r25
    29fc:	bc f0       	brlt	.+46     	; 0x2a2c <__fpcmp_parts_f+0x98>
    29fe:	14 96       	adiw	r26, 0x04	; 4
    2a00:	8d 91       	ld	r24, X+
    2a02:	9d 91       	ld	r25, X+
    2a04:	0d 90       	ld	r0, X+
    2a06:	bc 91       	ld	r27, X
    2a08:	a0 2d       	mov	r26, r0
    2a0a:	24 81       	ldd	r18, Z+4	; 0x04
    2a0c:	35 81       	ldd	r19, Z+5	; 0x05
    2a0e:	46 81       	ldd	r20, Z+6	; 0x06
    2a10:	57 81       	ldd	r21, Z+7	; 0x07
    2a12:	28 17       	cp	r18, r24
    2a14:	39 07       	cpc	r19, r25
    2a16:	4a 07       	cpc	r20, r26
    2a18:	5b 07       	cpc	r21, r27
    2a1a:	18 f4       	brcc	.+6      	; 0x2a22 <__fpcmp_parts_f+0x8e>
    2a1c:	11 23       	and	r17, r17
    2a1e:	41 f0       	breq	.+16     	; 0x2a30 <__fpcmp_parts_f+0x9c>
    2a20:	0a c0       	rjmp	.+20     	; 0x2a36 <__fpcmp_parts_f+0xa2>
    2a22:	82 17       	cp	r24, r18
    2a24:	93 07       	cpc	r25, r19
    2a26:	a4 07       	cpc	r26, r20
    2a28:	b5 07       	cpc	r27, r21
    2a2a:	40 f4       	brcc	.+16     	; 0x2a3c <__fpcmp_parts_f+0xa8>
    2a2c:	11 23       	and	r17, r17
    2a2e:	19 f0       	breq	.+6      	; 0x2a36 <__fpcmp_parts_f+0xa2>
    2a30:	61 e0       	ldi	r22, 0x01	; 1
    2a32:	70 e0       	ldi	r23, 0x00	; 0
    2a34:	05 c0       	rjmp	.+10     	; 0x2a40 <__fpcmp_parts_f+0xac>
    2a36:	6f ef       	ldi	r22, 0xFF	; 255
    2a38:	7f ef       	ldi	r23, 0xFF	; 255
    2a3a:	02 c0       	rjmp	.+4      	; 0x2a40 <__fpcmp_parts_f+0xac>
    2a3c:	60 e0       	ldi	r22, 0x00	; 0
    2a3e:	70 e0       	ldi	r23, 0x00	; 0
    2a40:	cb 01       	movw	r24, r22
    2a42:	1f 91       	pop	r17
    2a44:	08 95       	ret

00002a46 <ICU_LED>:
u16 ofTime = 0;
u16 onTime = 0;
f32 dutyCycle = 0;

void ICU_LED()
{
    2a46:	ef 92       	push	r14
    2a48:	ff 92       	push	r15
    2a4a:	0f 93       	push	r16
    2a4c:	1f 93       	push	r17
    2a4e:	df 93       	push	r29
    2a50:	cf 93       	push	r28
    2a52:	cd b7       	in	r28, 0x3d	; 61
    2a54:	de b7       	in	r29, 0x3e	; 62
    static u8 edgeFlag = 0;

    if (edgeFlag == 0)
    2a56:	80 91 a6 01 	lds	r24, 0x01A6
    2a5a:	88 23       	and	r24, r24
    2a5c:	69 f4       	brne	.+26     	; 0x2a78 <ICU_LED+0x32>
    {
        risingEdgeTime = TMR1_u16ICU_Read();
    2a5e:	0e 94 87 24 	call	0x490e	; 0x490e <TMR1_u16ICU_Read>
    2a62:	90 93 9b 01 	sts	0x019B, r25
    2a66:	80 93 9a 01 	sts	0x019A, r24
        TMR1_voidICU_SetEdge(ICU_FALLING_EDGE);
    2a6a:	80 e0       	ldi	r24, 0x00	; 0
    2a6c:	0e 94 92 24 	call	0x4924	; 0x4924 <TMR1_voidICU_SetEdge>
        edgeFlag = 1;
    2a70:	81 e0       	ldi	r24, 0x01	; 1
    2a72:	80 93 a6 01 	sts	0x01A6, r24
    2a76:	71 c0       	rjmp	.+226    	; 0x2b5a <ICU_LED+0x114>
    }
    else if (edgeFlag == 1)
    2a78:	80 91 a6 01 	lds	r24, 0x01A6
    2a7c:	81 30       	cpi	r24, 0x01	; 1
    2a7e:	e9 f4       	brne	.+58     	; 0x2aba <ICU_LED+0x74>
    {
        fallingEdgeTime = TMR1_u16ICU_Read();
    2a80:	0e 94 87 24 	call	0x490e	; 0x490e <TMR1_u16ICU_Read>
    2a84:	90 93 9d 01 	sts	0x019D, r25
    2a88:	80 93 9c 01 	sts	0x019C, r24
        ofTime = fallingEdgeTime - risingEdgeTime;
    2a8c:	20 91 9c 01 	lds	r18, 0x019C
    2a90:	30 91 9d 01 	lds	r19, 0x019D
    2a94:	80 91 9a 01 	lds	r24, 0x019A
    2a98:	90 91 9b 01 	lds	r25, 0x019B
    2a9c:	a9 01       	movw	r20, r18
    2a9e:	48 1b       	sub	r20, r24
    2aa0:	59 0b       	sbc	r21, r25
    2aa2:	ca 01       	movw	r24, r20
    2aa4:	90 93 9f 01 	sts	0x019F, r25
    2aa8:	80 93 9e 01 	sts	0x019E, r24
        TMR1_voidICU_SetEdge(ICU_RISING_EDGE);
    2aac:	81 e0       	ldi	r24, 0x01	; 1
    2aae:	0e 94 92 24 	call	0x4924	; 0x4924 <TMR1_voidICU_SetEdge>
        edgeFlag = 2;
    2ab2:	82 e0       	ldi	r24, 0x02	; 2
    2ab4:	80 93 a6 01 	sts	0x01A6, r24
    2ab8:	50 c0       	rjmp	.+160    	; 0x2b5a <ICU_LED+0x114>
    }
    else if (edgeFlag == 2)
    2aba:	80 91 a6 01 	lds	r24, 0x01A6
    2abe:	82 30       	cpi	r24, 0x02	; 2
    2ac0:	09 f0       	breq	.+2      	; 0x2ac4 <ICU_LED+0x7e>
    2ac2:	4b c0       	rjmp	.+150    	; 0x2b5a <ICU_LED+0x114>
    {
        onTime = TMR1_u16ICU_Read() - fallingEdgeTime;
    2ac4:	0e 94 87 24 	call	0x490e	; 0x490e <TMR1_u16ICU_Read>
    2ac8:	9c 01       	movw	r18, r24
    2aca:	80 91 9c 01 	lds	r24, 0x019C
    2ace:	90 91 9d 01 	lds	r25, 0x019D
    2ad2:	a9 01       	movw	r20, r18
    2ad4:	48 1b       	sub	r20, r24
    2ad6:	59 0b       	sbc	r21, r25
    2ad8:	ca 01       	movw	r24, r20
    2ada:	90 93 a1 01 	sts	0x01A1, r25
    2ade:	80 93 a0 01 	sts	0x01A0, r24
         dutyCycle = (onTime * 100.0) / (onTime + ofTime);
    2ae2:	80 91 a0 01 	lds	r24, 0x01A0
    2ae6:	90 91 a1 01 	lds	r25, 0x01A1
    2aea:	cc 01       	movw	r24, r24
    2aec:	a0 e0       	ldi	r26, 0x00	; 0
    2aee:	b0 e0       	ldi	r27, 0x00	; 0
    2af0:	bc 01       	movw	r22, r24
    2af2:	cd 01       	movw	r24, r26
    2af4:	0e 94 b5 12 	call	0x256a	; 0x256a <__floatunsisf>
    2af8:	dc 01       	movw	r26, r24
    2afa:	cb 01       	movw	r24, r22
    2afc:	bc 01       	movw	r22, r24
    2afe:	cd 01       	movw	r24, r26
    2b00:	20 e0       	ldi	r18, 0x00	; 0
    2b02:	30 e0       	ldi	r19, 0x00	; 0
    2b04:	48 ec       	ldi	r20, 0xC8	; 200
    2b06:	52 e4       	ldi	r21, 0x42	; 66
    2b08:	0e 94 2b 10 	call	0x2056	; 0x2056 <__mulsf3>
    2b0c:	dc 01       	movw	r26, r24
    2b0e:	cb 01       	movw	r24, r22
    2b10:	7c 01       	movw	r14, r24
    2b12:	8d 01       	movw	r16, r26
    2b14:	20 91 a0 01 	lds	r18, 0x01A0
    2b18:	30 91 a1 01 	lds	r19, 0x01A1
    2b1c:	80 91 9e 01 	lds	r24, 0x019E
    2b20:	90 91 9f 01 	lds	r25, 0x019F
    2b24:	82 0f       	add	r24, r18
    2b26:	93 1f       	adc	r25, r19
    2b28:	cc 01       	movw	r24, r24
    2b2a:	a0 e0       	ldi	r26, 0x00	; 0
    2b2c:	b0 e0       	ldi	r27, 0x00	; 0
    2b2e:	bc 01       	movw	r22, r24
    2b30:	cd 01       	movw	r24, r26
    2b32:	0e 94 b5 12 	call	0x256a	; 0x256a <__floatunsisf>
    2b36:	9b 01       	movw	r18, r22
    2b38:	ac 01       	movw	r20, r24
    2b3a:	c8 01       	movw	r24, r16
    2b3c:	b7 01       	movw	r22, r14
    2b3e:	0e 94 25 11 	call	0x224a	; 0x224a <__divsf3>
    2b42:	dc 01       	movw	r26, r24
    2b44:	cb 01       	movw	r24, r22
    2b46:	80 93 a2 01 	sts	0x01A2, r24
    2b4a:	90 93 a3 01 	sts	0x01A3, r25
    2b4e:	a0 93 a4 01 	sts	0x01A4, r26
    2b52:	b0 93 a5 01 	sts	0x01A5, r27

        // Display Period and Duty Cycle on LCD

        edgeFlag = 0;
    2b56:	10 92 a6 01 	sts	0x01A6, r1
    }

    LED_voidToggle(led1);
    2b5a:	60 91 7d 01 	lds	r22, 0x017D
    2b5e:	70 91 7e 01 	lds	r23, 0x017E
    2b62:	80 91 7f 01 	lds	r24, 0x017F
    2b66:	0e 94 6f 23 	call	0x46de	; 0x46de <LED_voidToggle>
}
    2b6a:	cf 91       	pop	r28
    2b6c:	df 91       	pop	r29
    2b6e:	1f 91       	pop	r17
    2b70:	0f 91       	pop	r16
    2b72:	ff 90       	pop	r15
    2b74:	ef 90       	pop	r14
    2b76:	08 95       	ret

00002b78 <main>:

int main()
{
    2b78:	af 92       	push	r10
    2b7a:	bf 92       	push	r11
    2b7c:	cf 92       	push	r12
    2b7e:	df 92       	push	r13
    2b80:	ef 92       	push	r14
    2b82:	ff 92       	push	r15
    2b84:	0f 93       	push	r16
    2b86:	1f 93       	push	r17
    2b88:	df 93       	push	r29
    2b8a:	cf 93       	push	r28
    2b8c:	cd b7       	in	r28, 0x3d	; 61
    2b8e:	de b7       	in	r29, 0x3e	; 62
    2b90:	6c 97       	sbiw	r28, 0x1c	; 28
    2b92:	0f b6       	in	r0, 0x3f	; 63
    2b94:	f8 94       	cli
    2b96:	de bf       	out	0x3e, r29	; 62
    2b98:	0f be       	out	0x3f, r0	; 63
    2b9a:	cd bf       	out	0x3d, r28	; 61
    LED_voidInit(led1);
    2b9c:	60 91 7d 01 	lds	r22, 0x017D
    2ba0:	70 91 7e 01 	lds	r23, 0x017E
    2ba4:	80 91 7f 01 	lds	r24, 0x017F
    2ba8:	0e 94 19 23 	call	0x4632	; 0x4632 <LED_voidInit>
    LCD_voidInit();
    2bac:	0e 94 b1 18 	call	0x3162	; 0x3162 <LCD_voidInit>
    TMR1_voidICU_Init();
    2bb0:	0e 94 48 24 	call	0x4890	; 0x4890 <TMR1_voidICU_Init>
    TMR1_voidICU_SetEdge(ICU_RISING_EDGE);
    2bb4:	81 e0       	ldi	r24, 0x01	; 1
    2bb6:	0e 94 92 24 	call	0x4924	; 0x4924 <TMR1_voidICU_SetEdge>
    TMR1_voidSetCallBack(ICU_LED);
    2bba:	83 e2       	ldi	r24, 0x23	; 35
    2bbc:	95 e1       	ldi	r25, 0x15	; 21
    2bbe:	0e 94 bd 24 	call	0x497a	; 0x497a <TMR1_voidSetCallBack>
    GIE_voidEnable();
    2bc2:	0e 94 83 23 	call	0x4706	; 0x4706 <GIE_voidEnable>

    while(1)
    {
    	LCD_voidSendCommand(LCD_CLEAR);
    2bc6:	81 e0       	ldi	r24, 0x01	; 1
    2bc8:	0e 94 e1 1b 	call	0x37c2	; 0x37c2 <LCD_voidSendCommand>
    	        LCD_voidSendString("Period: ");
    2bcc:	80 e6       	ldi	r24, 0x60	; 96
    2bce:	90 e0       	ldi	r25, 0x00	; 0
    2bd0:	0e 94 bb 1c 	call	0x3976	; 0x3976 <LCD_voidSendString>
    	        LCD_voidSendNumber(onTime+ofTime);
    2bd4:	20 91 a0 01 	lds	r18, 0x01A0
    2bd8:	30 91 a1 01 	lds	r19, 0x01A1
    2bdc:	80 91 9e 01 	lds	r24, 0x019E
    2be0:	90 91 9f 01 	lds	r25, 0x019F
    2be4:	82 0f       	add	r24, r18
    2be6:	93 1f       	adc	r25, r19
    2be8:	5c 01       	movw	r10, r24
    2bea:	cc 24       	eor	r12, r12
    2bec:	dd 24       	eor	r13, r13
    2bee:	ee 24       	eor	r14, r14
    2bf0:	ff 24       	eor	r15, r15
    2bf2:	87 01       	movw	r16, r14
    2bf4:	2a 2d       	mov	r18, r10
    2bf6:	3b 2d       	mov	r19, r11
    2bf8:	4c 2d       	mov	r20, r12
    2bfa:	5d 2d       	mov	r21, r13
    2bfc:	6e 2d       	mov	r22, r14
    2bfe:	7f 2d       	mov	r23, r15
    2c00:	80 2f       	mov	r24, r16
    2c02:	91 2f       	mov	r25, r17
    2c04:	0e 94 e4 1c 	call	0x39c8	; 0x39c8 <LCD_voidSendNumber>
    	        LCD_voidSendString(" us");
    2c08:	89 e6       	ldi	r24, 0x69	; 105
    2c0a:	90 e0       	ldi	r25, 0x00	; 0
    2c0c:	0e 94 bb 1c 	call	0x3976	; 0x3976 <LCD_voidSendString>
    2c10:	80 e0       	ldi	r24, 0x00	; 0
    2c12:	90 e0       	ldi	r25, 0x00	; 0
    2c14:	aa e7       	ldi	r26, 0x7A	; 122
    2c16:	b4 e4       	ldi	r27, 0x44	; 68
    2c18:	89 8f       	std	Y+25, r24	; 0x19
    2c1a:	9a 8f       	std	Y+26, r25	; 0x1a
    2c1c:	ab 8f       	std	Y+27, r26	; 0x1b
    2c1e:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2c20:	69 8d       	ldd	r22, Y+25	; 0x19
    2c22:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2c24:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2c26:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2c28:	20 e0       	ldi	r18, 0x00	; 0
    2c2a:	30 e0       	ldi	r19, 0x00	; 0
    2c2c:	4a ef       	ldi	r20, 0xFA	; 250
    2c2e:	54 e4       	ldi	r21, 0x44	; 68
    2c30:	0e 94 2b 10 	call	0x2056	; 0x2056 <__mulsf3>
    2c34:	dc 01       	movw	r26, r24
    2c36:	cb 01       	movw	r24, r22
    2c38:	8d 8b       	std	Y+21, r24	; 0x15
    2c3a:	9e 8b       	std	Y+22, r25	; 0x16
    2c3c:	af 8b       	std	Y+23, r26	; 0x17
    2c3e:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    2c40:	6d 89       	ldd	r22, Y+21	; 0x15
    2c42:	7e 89       	ldd	r23, Y+22	; 0x16
    2c44:	8f 89       	ldd	r24, Y+23	; 0x17
    2c46:	98 8d       	ldd	r25, Y+24	; 0x18
    2c48:	20 e0       	ldi	r18, 0x00	; 0
    2c4a:	30 e0       	ldi	r19, 0x00	; 0
    2c4c:	40 e8       	ldi	r20, 0x80	; 128
    2c4e:	5f e3       	ldi	r21, 0x3F	; 63
    2c50:	0e 94 31 12 	call	0x2462	; 0x2462 <__ltsf2>
    2c54:	88 23       	and	r24, r24
    2c56:	2c f4       	brge	.+10     	; 0x2c62 <main+0xea>
		__ticks = 1;
    2c58:	81 e0       	ldi	r24, 0x01	; 1
    2c5a:	90 e0       	ldi	r25, 0x00	; 0
    2c5c:	9c 8b       	std	Y+20, r25	; 0x14
    2c5e:	8b 8b       	std	Y+19, r24	; 0x13
    2c60:	3f c0       	rjmp	.+126    	; 0x2ce0 <main+0x168>
	else if (__tmp > 65535)
    2c62:	6d 89       	ldd	r22, Y+21	; 0x15
    2c64:	7e 89       	ldd	r23, Y+22	; 0x16
    2c66:	8f 89       	ldd	r24, Y+23	; 0x17
    2c68:	98 8d       	ldd	r25, Y+24	; 0x18
    2c6a:	20 e0       	ldi	r18, 0x00	; 0
    2c6c:	3f ef       	ldi	r19, 0xFF	; 255
    2c6e:	4f e7       	ldi	r20, 0x7F	; 127
    2c70:	57 e4       	ldi	r21, 0x47	; 71
    2c72:	0e 94 d1 11 	call	0x23a2	; 0x23a2 <__gtsf2>
    2c76:	18 16       	cp	r1, r24
    2c78:	4c f5       	brge	.+82     	; 0x2ccc <main+0x154>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2c7a:	69 8d       	ldd	r22, Y+25	; 0x19
    2c7c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2c7e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2c80:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2c82:	20 e0       	ldi	r18, 0x00	; 0
    2c84:	30 e0       	ldi	r19, 0x00	; 0
    2c86:	40 e2       	ldi	r20, 0x20	; 32
    2c88:	51 e4       	ldi	r21, 0x41	; 65
    2c8a:	0e 94 2b 10 	call	0x2056	; 0x2056 <__mulsf3>
    2c8e:	dc 01       	movw	r26, r24
    2c90:	cb 01       	movw	r24, r22
    2c92:	bc 01       	movw	r22, r24
    2c94:	cd 01       	movw	r24, r26
    2c96:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    2c9a:	dc 01       	movw	r26, r24
    2c9c:	cb 01       	movw	r24, r22
    2c9e:	9c 8b       	std	Y+20, r25	; 0x14
    2ca0:	8b 8b       	std	Y+19, r24	; 0x13
    2ca2:	0f c0       	rjmp	.+30     	; 0x2cc2 <main+0x14a>
    2ca4:	88 ec       	ldi	r24, 0xC8	; 200
    2ca6:	90 e0       	ldi	r25, 0x00	; 0
    2ca8:	9a 8b       	std	Y+18, r25	; 0x12
    2caa:	89 8b       	std	Y+17, r24	; 0x11
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    2cac:	89 89       	ldd	r24, Y+17	; 0x11
    2cae:	9a 89       	ldd	r25, Y+18	; 0x12
    2cb0:	01 97       	sbiw	r24, 0x01	; 1
    2cb2:	f1 f7       	brne	.-4      	; 0x2cb0 <main+0x138>
    2cb4:	9a 8b       	std	Y+18, r25	; 0x12
    2cb6:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2cb8:	8b 89       	ldd	r24, Y+19	; 0x13
    2cba:	9c 89       	ldd	r25, Y+20	; 0x14
    2cbc:	01 97       	sbiw	r24, 0x01	; 1
    2cbe:	9c 8b       	std	Y+20, r25	; 0x14
    2cc0:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2cc2:	8b 89       	ldd	r24, Y+19	; 0x13
    2cc4:	9c 89       	ldd	r25, Y+20	; 0x14
    2cc6:	00 97       	sbiw	r24, 0x00	; 0
    2cc8:	69 f7       	brne	.-38     	; 0x2ca4 <main+0x12c>
    2cca:	14 c0       	rjmp	.+40     	; 0x2cf4 <main+0x17c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2ccc:	6d 89       	ldd	r22, Y+21	; 0x15
    2cce:	7e 89       	ldd	r23, Y+22	; 0x16
    2cd0:	8f 89       	ldd	r24, Y+23	; 0x17
    2cd2:	98 8d       	ldd	r25, Y+24	; 0x18
    2cd4:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    2cd8:	dc 01       	movw	r26, r24
    2cda:	cb 01       	movw	r24, r22
    2cdc:	9c 8b       	std	Y+20, r25	; 0x14
    2cde:	8b 8b       	std	Y+19, r24	; 0x13
    2ce0:	8b 89       	ldd	r24, Y+19	; 0x13
    2ce2:	9c 89       	ldd	r25, Y+20	; 0x14
    2ce4:	98 8b       	std	Y+16, r25	; 0x10
    2ce6:	8f 87       	std	Y+15, r24	; 0x0f
    2ce8:	8f 85       	ldd	r24, Y+15	; 0x0f
    2cea:	98 89       	ldd	r25, Y+16	; 0x10
    2cec:	01 97       	sbiw	r24, 0x01	; 1
    2cee:	f1 f7       	brne	.-4      	; 0x2cec <main+0x174>
    2cf0:	98 8b       	std	Y+16, r25	; 0x10
    2cf2:	8f 87       	std	Y+15, r24	; 0x0f
    	        _delay_ms(1000);
    	        LCD_voidSendCommand(LCD_CLEAR);
    2cf4:	81 e0       	ldi	r24, 0x01	; 1
    2cf6:	0e 94 e1 1b 	call	0x37c2	; 0x37c2 <LCD_voidSendCommand>
    	        LCD_voidSendString("DC: ");
    2cfa:	8d e6       	ldi	r24, 0x6D	; 109
    2cfc:	90 e0       	ldi	r25, 0x00	; 0
    2cfe:	0e 94 bb 1c 	call	0x3976	; 0x3976 <LCD_voidSendString>
    	        LCD_voidSendNumber(dutyCycle);
    2d02:	80 91 a2 01 	lds	r24, 0x01A2
    2d06:	90 91 a3 01 	lds	r25, 0x01A3
    2d0a:	a0 91 a4 01 	lds	r26, 0x01A4
    2d0e:	b0 91 a5 01 	lds	r27, 0x01A5
    2d12:	bc 01       	movw	r22, r24
    2d14:	cd 01       	movw	r24, r26
    2d16:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <__fixunssfdi>
    2d1a:	a2 2e       	mov	r10, r18
    2d1c:	b3 2e       	mov	r11, r19
    2d1e:	c4 2e       	mov	r12, r20
    2d20:	d5 2e       	mov	r13, r21
    2d22:	e6 2e       	mov	r14, r22
    2d24:	f7 2e       	mov	r15, r23
    2d26:	08 2f       	mov	r16, r24
    2d28:	19 2f       	mov	r17, r25
    2d2a:	2a 2d       	mov	r18, r10
    2d2c:	3b 2d       	mov	r19, r11
    2d2e:	4c 2d       	mov	r20, r12
    2d30:	5d 2d       	mov	r21, r13
    2d32:	6e 2d       	mov	r22, r14
    2d34:	7f 2d       	mov	r23, r15
    2d36:	80 2f       	mov	r24, r16
    2d38:	91 2f       	mov	r25, r17
    2d3a:	0e 94 e4 1c 	call	0x39c8	; 0x39c8 <LCD_voidSendNumber>
    	        LCD_voidSendString(" %");
    2d3e:	82 e7       	ldi	r24, 0x72	; 114
    2d40:	90 e0       	ldi	r25, 0x00	; 0
    2d42:	0e 94 bb 1c 	call	0x3976	; 0x3976 <LCD_voidSendString>
    2d46:	80 e0       	ldi	r24, 0x00	; 0
    2d48:	90 e0       	ldi	r25, 0x00	; 0
    2d4a:	aa e7       	ldi	r26, 0x7A	; 122
    2d4c:	b4 e4       	ldi	r27, 0x44	; 68
    2d4e:	8b 87       	std	Y+11, r24	; 0x0b
    2d50:	9c 87       	std	Y+12, r25	; 0x0c
    2d52:	ad 87       	std	Y+13, r26	; 0x0d
    2d54:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2d56:	6b 85       	ldd	r22, Y+11	; 0x0b
    2d58:	7c 85       	ldd	r23, Y+12	; 0x0c
    2d5a:	8d 85       	ldd	r24, Y+13	; 0x0d
    2d5c:	9e 85       	ldd	r25, Y+14	; 0x0e
    2d5e:	20 e0       	ldi	r18, 0x00	; 0
    2d60:	30 e0       	ldi	r19, 0x00	; 0
    2d62:	4a ef       	ldi	r20, 0xFA	; 250
    2d64:	54 e4       	ldi	r21, 0x44	; 68
    2d66:	0e 94 2b 10 	call	0x2056	; 0x2056 <__mulsf3>
    2d6a:	dc 01       	movw	r26, r24
    2d6c:	cb 01       	movw	r24, r22
    2d6e:	8f 83       	std	Y+7, r24	; 0x07
    2d70:	98 87       	std	Y+8, r25	; 0x08
    2d72:	a9 87       	std	Y+9, r26	; 0x09
    2d74:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2d76:	6f 81       	ldd	r22, Y+7	; 0x07
    2d78:	78 85       	ldd	r23, Y+8	; 0x08
    2d7a:	89 85       	ldd	r24, Y+9	; 0x09
    2d7c:	9a 85       	ldd	r25, Y+10	; 0x0a
    2d7e:	20 e0       	ldi	r18, 0x00	; 0
    2d80:	30 e0       	ldi	r19, 0x00	; 0
    2d82:	40 e8       	ldi	r20, 0x80	; 128
    2d84:	5f e3       	ldi	r21, 0x3F	; 63
    2d86:	0e 94 31 12 	call	0x2462	; 0x2462 <__ltsf2>
    2d8a:	88 23       	and	r24, r24
    2d8c:	2c f4       	brge	.+10     	; 0x2d98 <main+0x220>
		__ticks = 1;
    2d8e:	81 e0       	ldi	r24, 0x01	; 1
    2d90:	90 e0       	ldi	r25, 0x00	; 0
    2d92:	9e 83       	std	Y+6, r25	; 0x06
    2d94:	8d 83       	std	Y+5, r24	; 0x05
    2d96:	3f c0       	rjmp	.+126    	; 0x2e16 <main+0x29e>
	else if (__tmp > 65535)
    2d98:	6f 81       	ldd	r22, Y+7	; 0x07
    2d9a:	78 85       	ldd	r23, Y+8	; 0x08
    2d9c:	89 85       	ldd	r24, Y+9	; 0x09
    2d9e:	9a 85       	ldd	r25, Y+10	; 0x0a
    2da0:	20 e0       	ldi	r18, 0x00	; 0
    2da2:	3f ef       	ldi	r19, 0xFF	; 255
    2da4:	4f e7       	ldi	r20, 0x7F	; 127
    2da6:	57 e4       	ldi	r21, 0x47	; 71
    2da8:	0e 94 d1 11 	call	0x23a2	; 0x23a2 <__gtsf2>
    2dac:	18 16       	cp	r1, r24
    2dae:	4c f5       	brge	.+82     	; 0x2e02 <main+0x28a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2db0:	6b 85       	ldd	r22, Y+11	; 0x0b
    2db2:	7c 85       	ldd	r23, Y+12	; 0x0c
    2db4:	8d 85       	ldd	r24, Y+13	; 0x0d
    2db6:	9e 85       	ldd	r25, Y+14	; 0x0e
    2db8:	20 e0       	ldi	r18, 0x00	; 0
    2dba:	30 e0       	ldi	r19, 0x00	; 0
    2dbc:	40 e2       	ldi	r20, 0x20	; 32
    2dbe:	51 e4       	ldi	r21, 0x41	; 65
    2dc0:	0e 94 2b 10 	call	0x2056	; 0x2056 <__mulsf3>
    2dc4:	dc 01       	movw	r26, r24
    2dc6:	cb 01       	movw	r24, r22
    2dc8:	bc 01       	movw	r22, r24
    2dca:	cd 01       	movw	r24, r26
    2dcc:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    2dd0:	dc 01       	movw	r26, r24
    2dd2:	cb 01       	movw	r24, r22
    2dd4:	9e 83       	std	Y+6, r25	; 0x06
    2dd6:	8d 83       	std	Y+5, r24	; 0x05
    2dd8:	0f c0       	rjmp	.+30     	; 0x2df8 <main+0x280>
    2dda:	88 ec       	ldi	r24, 0xC8	; 200
    2ddc:	90 e0       	ldi	r25, 0x00	; 0
    2dde:	9c 83       	std	Y+4, r25	; 0x04
    2de0:	8b 83       	std	Y+3, r24	; 0x03
    2de2:	8b 81       	ldd	r24, Y+3	; 0x03
    2de4:	9c 81       	ldd	r25, Y+4	; 0x04
    2de6:	01 97       	sbiw	r24, 0x01	; 1
    2de8:	f1 f7       	brne	.-4      	; 0x2de6 <main+0x26e>
    2dea:	9c 83       	std	Y+4, r25	; 0x04
    2dec:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2dee:	8d 81       	ldd	r24, Y+5	; 0x05
    2df0:	9e 81       	ldd	r25, Y+6	; 0x06
    2df2:	01 97       	sbiw	r24, 0x01	; 1
    2df4:	9e 83       	std	Y+6, r25	; 0x06
    2df6:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2df8:	8d 81       	ldd	r24, Y+5	; 0x05
    2dfa:	9e 81       	ldd	r25, Y+6	; 0x06
    2dfc:	00 97       	sbiw	r24, 0x00	; 0
    2dfe:	69 f7       	brne	.-38     	; 0x2dda <main+0x262>
    2e00:	e2 ce       	rjmp	.-572    	; 0x2bc6 <main+0x4e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2e02:	6f 81       	ldd	r22, Y+7	; 0x07
    2e04:	78 85       	ldd	r23, Y+8	; 0x08
    2e06:	89 85       	ldd	r24, Y+9	; 0x09
    2e08:	9a 85       	ldd	r25, Y+10	; 0x0a
    2e0a:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    2e0e:	dc 01       	movw	r26, r24
    2e10:	cb 01       	movw	r24, r22
    2e12:	9e 83       	std	Y+6, r25	; 0x06
    2e14:	8d 83       	std	Y+5, r24	; 0x05
    2e16:	8d 81       	ldd	r24, Y+5	; 0x05
    2e18:	9e 81       	ldd	r25, Y+6	; 0x06
    2e1a:	9a 83       	std	Y+2, r25	; 0x02
    2e1c:	89 83       	std	Y+1, r24	; 0x01
    2e1e:	89 81       	ldd	r24, Y+1	; 0x01
    2e20:	9a 81       	ldd	r25, Y+2	; 0x02
    2e22:	01 97       	sbiw	r24, 0x01	; 1
    2e24:	f1 f7       	brne	.-4      	; 0x2e22 <main+0x2aa>
    2e26:	9a 83       	std	Y+2, r25	; 0x02
    2e28:	89 83       	std	Y+1, r24	; 0x01
    2e2a:	cd ce       	rjmp	.-614    	; 0x2bc6 <main+0x4e>

00002e2c <KPD_voidInit>:
#include "KPD_interface.h"
#include "KPD_config.h"
#include "KPD_private.h"

void KPD_voidInit(void)
{
    2e2c:	df 93       	push	r29
    2e2e:	cf 93       	push	r28
    2e30:	cd b7       	in	r28, 0x3d	; 61
    2e32:	de b7       	in	r29, 0x3e	; 62
	/* ROWS -> INT_PULLUP */
	DIO_enumSetPinDirection(KPD_PORT, KPD_R0, DIO_PIN_INPUT);
    2e34:	82 e0       	ldi	r24, 0x02	; 2
    2e36:	60 e0       	ldi	r22, 0x00	; 0
    2e38:	40 e0       	ldi	r20, 0x00	; 0
    2e3a:	0e 94 97 27 	call	0x4f2e	; 0x4f2e <DIO_enumSetPinDirection>
	DIO_enumSetPinValue(KPD_PORT, KPD_R0, DIO_PIN_HIGH);
    2e3e:	82 e0       	ldi	r24, 0x02	; 2
    2e40:	60 e0       	ldi	r22, 0x00	; 0
    2e42:	41 e0       	ldi	r20, 0x01	; 1
    2e44:	0e 94 a6 28 	call	0x514c	; 0x514c <DIO_enumSetPinValue>
	
	DIO_enumSetPinDirection(KPD_PORT, KPD_R1, DIO_PIN_INPUT);
    2e48:	82 e0       	ldi	r24, 0x02	; 2
    2e4a:	61 e0       	ldi	r22, 0x01	; 1
    2e4c:	40 e0       	ldi	r20, 0x00	; 0
    2e4e:	0e 94 97 27 	call	0x4f2e	; 0x4f2e <DIO_enumSetPinDirection>
	DIO_enumSetPinValue(KPD_PORT, KPD_R1, DIO_PIN_HIGH);
    2e52:	82 e0       	ldi	r24, 0x02	; 2
    2e54:	61 e0       	ldi	r22, 0x01	; 1
    2e56:	41 e0       	ldi	r20, 0x01	; 1
    2e58:	0e 94 a6 28 	call	0x514c	; 0x514c <DIO_enumSetPinValue>
	
	DIO_enumSetPinDirection(KPD_PORT, KPD_R2, DIO_PIN_INPUT);
    2e5c:	82 e0       	ldi	r24, 0x02	; 2
    2e5e:	62 e0       	ldi	r22, 0x02	; 2
    2e60:	40 e0       	ldi	r20, 0x00	; 0
    2e62:	0e 94 97 27 	call	0x4f2e	; 0x4f2e <DIO_enumSetPinDirection>
	DIO_enumSetPinValue(KPD_PORT, KPD_R2, DIO_PIN_HIGH);
    2e66:	82 e0       	ldi	r24, 0x02	; 2
    2e68:	62 e0       	ldi	r22, 0x02	; 2
    2e6a:	41 e0       	ldi	r20, 0x01	; 1
    2e6c:	0e 94 a6 28 	call	0x514c	; 0x514c <DIO_enumSetPinValue>
	
	DIO_enumSetPinDirection(KPD_PORT, KPD_R3, DIO_PIN_INPUT);
    2e70:	82 e0       	ldi	r24, 0x02	; 2
    2e72:	63 e0       	ldi	r22, 0x03	; 3
    2e74:	40 e0       	ldi	r20, 0x00	; 0
    2e76:	0e 94 97 27 	call	0x4f2e	; 0x4f2e <DIO_enumSetPinDirection>
	DIO_enumSetPinValue(KPD_PORT, KPD_R3, DIO_PIN_HIGH);
    2e7a:	82 e0       	ldi	r24, 0x02	; 2
    2e7c:	63 e0       	ldi	r22, 0x03	; 3
    2e7e:	41 e0       	ldi	r20, 0x01	; 1
    2e80:	0e 94 a6 28 	call	0x514c	; 0x514c <DIO_enumSetPinValue>
	
	/* COLS -> OUTPUT, HIGH */
	DIO_enumSetPinDirection(KPD_PORT, KPD_C0, DIO_PIN_OUTPUT);
    2e84:	82 e0       	ldi	r24, 0x02	; 2
    2e86:	64 e0       	ldi	r22, 0x04	; 4
    2e88:	41 e0       	ldi	r20, 0x01	; 1
    2e8a:	0e 94 97 27 	call	0x4f2e	; 0x4f2e <DIO_enumSetPinDirection>
	DIO_enumSetPinValue(KPD_PORT, KPD_C0, DIO_PIN_HIGH);
    2e8e:	82 e0       	ldi	r24, 0x02	; 2
    2e90:	64 e0       	ldi	r22, 0x04	; 4
    2e92:	41 e0       	ldi	r20, 0x01	; 1
    2e94:	0e 94 a6 28 	call	0x514c	; 0x514c <DIO_enumSetPinValue>
	
	DIO_enumSetPinDirection(KPD_PORT, KPD_C1, DIO_PIN_OUTPUT);
    2e98:	82 e0       	ldi	r24, 0x02	; 2
    2e9a:	65 e0       	ldi	r22, 0x05	; 5
    2e9c:	41 e0       	ldi	r20, 0x01	; 1
    2e9e:	0e 94 97 27 	call	0x4f2e	; 0x4f2e <DIO_enumSetPinDirection>
	DIO_enumSetPinValue(KPD_PORT, KPD_C1, DIO_PIN_HIGH);
    2ea2:	82 e0       	ldi	r24, 0x02	; 2
    2ea4:	65 e0       	ldi	r22, 0x05	; 5
    2ea6:	41 e0       	ldi	r20, 0x01	; 1
    2ea8:	0e 94 a6 28 	call	0x514c	; 0x514c <DIO_enumSetPinValue>
	
	DIO_enumSetPinDirection(KPD_PORT, KPD_C2, DIO_PIN_OUTPUT);
    2eac:	82 e0       	ldi	r24, 0x02	; 2
    2eae:	66 e0       	ldi	r22, 0x06	; 6
    2eb0:	41 e0       	ldi	r20, 0x01	; 1
    2eb2:	0e 94 97 27 	call	0x4f2e	; 0x4f2e <DIO_enumSetPinDirection>
	DIO_enumSetPinValue(KPD_PORT, KPD_C2, DIO_PIN_HIGH);
    2eb6:	82 e0       	ldi	r24, 0x02	; 2
    2eb8:	66 e0       	ldi	r22, 0x06	; 6
    2eba:	41 e0       	ldi	r20, 0x01	; 1
    2ebc:	0e 94 a6 28 	call	0x514c	; 0x514c <DIO_enumSetPinValue>
	
	DIO_enumSetPinDirection(KPD_PORT, KPD_C3, DIO_PIN_OUTPUT);
    2ec0:	82 e0       	ldi	r24, 0x02	; 2
    2ec2:	67 e0       	ldi	r22, 0x07	; 7
    2ec4:	41 e0       	ldi	r20, 0x01	; 1
    2ec6:	0e 94 97 27 	call	0x4f2e	; 0x4f2e <DIO_enumSetPinDirection>
	DIO_enumSetPinValue(KPD_PORT, KPD_C3, DIO_PIN_HIGH);
    2eca:	82 e0       	ldi	r24, 0x02	; 2
    2ecc:	67 e0       	ldi	r22, 0x07	; 7
    2ece:	41 e0       	ldi	r20, 0x01	; 1
    2ed0:	0e 94 a6 28 	call	0x514c	; 0x514c <DIO_enumSetPinValue>
	
	
	
}
    2ed4:	cf 91       	pop	r28
    2ed6:	df 91       	pop	r29
    2ed8:	08 95       	ret

00002eda <KPD_u8GetPressed>:

u8 KPD_u8GetPressed(void)
{
    2eda:	df 93       	push	r29
    2edc:	cf 93       	push	r28
    2ede:	cd b7       	in	r28, 0x3d	; 61
    2ee0:	de b7       	in	r29, 0x3e	; 62
    2ee2:	a0 97       	sbiw	r28, 0x20	; 32
    2ee4:	0f b6       	in	r0, 0x3f	; 63
    2ee6:	f8 94       	cli
    2ee8:	de bf       	out	0x3e, r29	; 62
    2eea:	0f be       	out	0x3f, r0	; 63
    2eec:	cd bf       	out	0x3d, r28	; 61
	u8 LOC_u8RetVal = NOT_PRESSED;
    2eee:	8f ef       	ldi	r24, 0xFF	; 255
    2ef0:	8f 8f       	std	Y+31, r24	; 0x1f
	u8 LOC_u8GetPressed;
	
	u8 LOC_u8ROW_Iterator;
	u8 LOC_u8COL_Iterator;
	
	for(LOC_u8COL_Iterator = KPD_COL_INIT; LOC_u8COL_Iterator < KPD_COL_END; LOC_u8COL_Iterator++)
    2ef2:	84 e0       	ldi	r24, 0x04	; 4
    2ef4:	8d 8f       	std	Y+29, r24	; 0x1d
    2ef6:	27 c1       	rjmp	.+590    	; 0x3146 <KPD_u8GetPressed+0x26c>
	{
		DIO_enumSetPinValue(KPD_PORT, LOC_u8COL_Iterator, DIO_PIN_LOW);
    2ef8:	82 e0       	ldi	r24, 0x02	; 2
    2efa:	6d 8d       	ldd	r22, Y+29	; 0x1d
    2efc:	40 e0       	ldi	r20, 0x00	; 0
    2efe:	0e 94 a6 28 	call	0x514c	; 0x514c <DIO_enumSetPinValue>
		for(LOC_u8ROW_Iterator = KPD_ROW_INIT; LOC_u8ROW_Iterator < KPD_ROW_END; LOC_u8ROW_Iterator++)
    2f02:	1e 8e       	std	Y+30, r1	; 0x1e
    2f04:	14 c1       	rjmp	.+552    	; 0x312e <KPD_u8GetPressed+0x254>
		{
			DIO_enumGetPinValue(KPD_PORT, LOC_u8ROW_Iterator, &LOC_u8GetPressed);
    2f06:	9e 01       	movw	r18, r28
    2f08:	20 5e       	subi	r18, 0xE0	; 224
    2f0a:	3f 4f       	sbci	r19, 0xFF	; 255
    2f0c:	82 e0       	ldi	r24, 0x02	; 2
    2f0e:	6e 8d       	ldd	r22, Y+30	; 0x1e
    2f10:	a9 01       	movw	r20, r18
    2f12:	0e 94 b5 29 	call	0x536a	; 0x536a <DIO_enumGetPinValue>
			
			if(LOC_u8GetPressed == 0)
    2f16:	88 a1       	ldd	r24, Y+32	; 0x20
    2f18:	88 23       	and	r24, r24
    2f1a:	09 f0       	breq	.+2      	; 0x2f1e <KPD_u8GetPressed+0x44>
    2f1c:	05 c1       	rjmp	.+522    	; 0x3128 <KPD_u8GetPressed+0x24e>
    2f1e:	80 e0       	ldi	r24, 0x00	; 0
    2f20:	90 e0       	ldi	r25, 0x00	; 0
    2f22:	a8 e4       	ldi	r26, 0x48	; 72
    2f24:	b2 e4       	ldi	r27, 0x42	; 66
    2f26:	89 8f       	std	Y+25, r24	; 0x19
    2f28:	9a 8f       	std	Y+26, r25	; 0x1a
    2f2a:	ab 8f       	std	Y+27, r26	; 0x1b
    2f2c:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2f2e:	69 8d       	ldd	r22, Y+25	; 0x19
    2f30:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2f32:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2f34:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2f36:	20 e0       	ldi	r18, 0x00	; 0
    2f38:	30 e0       	ldi	r19, 0x00	; 0
    2f3a:	4a e7       	ldi	r20, 0x7A	; 122
    2f3c:	53 e4       	ldi	r21, 0x43	; 67
    2f3e:	0e 94 2b 10 	call	0x2056	; 0x2056 <__mulsf3>
    2f42:	dc 01       	movw	r26, r24
    2f44:	cb 01       	movw	r24, r22
    2f46:	8d 8b       	std	Y+21, r24	; 0x15
    2f48:	9e 8b       	std	Y+22, r25	; 0x16
    2f4a:	af 8b       	std	Y+23, r26	; 0x17
    2f4c:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    2f4e:	6d 89       	ldd	r22, Y+21	; 0x15
    2f50:	7e 89       	ldd	r23, Y+22	; 0x16
    2f52:	8f 89       	ldd	r24, Y+23	; 0x17
    2f54:	98 8d       	ldd	r25, Y+24	; 0x18
    2f56:	20 e0       	ldi	r18, 0x00	; 0
    2f58:	30 e0       	ldi	r19, 0x00	; 0
    2f5a:	40 e8       	ldi	r20, 0x80	; 128
    2f5c:	5f e3       	ldi	r21, 0x3F	; 63
    2f5e:	0e 94 31 12 	call	0x2462	; 0x2462 <__ltsf2>
    2f62:	88 23       	and	r24, r24
    2f64:	2c f4       	brge	.+10     	; 0x2f70 <KPD_u8GetPressed+0x96>
		__ticks = 1;
    2f66:	81 e0       	ldi	r24, 0x01	; 1
    2f68:	90 e0       	ldi	r25, 0x00	; 0
    2f6a:	9c 8b       	std	Y+20, r25	; 0x14
    2f6c:	8b 8b       	std	Y+19, r24	; 0x13
    2f6e:	3f c0       	rjmp	.+126    	; 0x2fee <KPD_u8GetPressed+0x114>
	else if (__tmp > 65535)
    2f70:	6d 89       	ldd	r22, Y+21	; 0x15
    2f72:	7e 89       	ldd	r23, Y+22	; 0x16
    2f74:	8f 89       	ldd	r24, Y+23	; 0x17
    2f76:	98 8d       	ldd	r25, Y+24	; 0x18
    2f78:	20 e0       	ldi	r18, 0x00	; 0
    2f7a:	3f ef       	ldi	r19, 0xFF	; 255
    2f7c:	4f e7       	ldi	r20, 0x7F	; 127
    2f7e:	57 e4       	ldi	r21, 0x47	; 71
    2f80:	0e 94 d1 11 	call	0x23a2	; 0x23a2 <__gtsf2>
    2f84:	18 16       	cp	r1, r24
    2f86:	4c f5       	brge	.+82     	; 0x2fda <KPD_u8GetPressed+0x100>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2f88:	69 8d       	ldd	r22, Y+25	; 0x19
    2f8a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2f8c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2f8e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2f90:	20 e0       	ldi	r18, 0x00	; 0
    2f92:	30 e0       	ldi	r19, 0x00	; 0
    2f94:	40 e2       	ldi	r20, 0x20	; 32
    2f96:	51 e4       	ldi	r21, 0x41	; 65
    2f98:	0e 94 2b 10 	call	0x2056	; 0x2056 <__mulsf3>
    2f9c:	dc 01       	movw	r26, r24
    2f9e:	cb 01       	movw	r24, r22
    2fa0:	bc 01       	movw	r22, r24
    2fa2:	cd 01       	movw	r24, r26
    2fa4:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    2fa8:	dc 01       	movw	r26, r24
    2faa:	cb 01       	movw	r24, r22
    2fac:	9c 8b       	std	Y+20, r25	; 0x14
    2fae:	8b 8b       	std	Y+19, r24	; 0x13
    2fb0:	0f c0       	rjmp	.+30     	; 0x2fd0 <KPD_u8GetPressed+0xf6>
    2fb2:	89 e1       	ldi	r24, 0x19	; 25
    2fb4:	90 e0       	ldi	r25, 0x00	; 0
    2fb6:	9a 8b       	std	Y+18, r25	; 0x12
    2fb8:	89 8b       	std	Y+17, r24	; 0x11
    2fba:	89 89       	ldd	r24, Y+17	; 0x11
    2fbc:	9a 89       	ldd	r25, Y+18	; 0x12
    2fbe:	01 97       	sbiw	r24, 0x01	; 1
    2fc0:	f1 f7       	brne	.-4      	; 0x2fbe <KPD_u8GetPressed+0xe4>
    2fc2:	9a 8b       	std	Y+18, r25	; 0x12
    2fc4:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2fc6:	8b 89       	ldd	r24, Y+19	; 0x13
    2fc8:	9c 89       	ldd	r25, Y+20	; 0x14
    2fca:	01 97       	sbiw	r24, 0x01	; 1
    2fcc:	9c 8b       	std	Y+20, r25	; 0x14
    2fce:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2fd0:	8b 89       	ldd	r24, Y+19	; 0x13
    2fd2:	9c 89       	ldd	r25, Y+20	; 0x14
    2fd4:	00 97       	sbiw	r24, 0x00	; 0
    2fd6:	69 f7       	brne	.-38     	; 0x2fb2 <KPD_u8GetPressed+0xd8>
    2fd8:	14 c0       	rjmp	.+40     	; 0x3002 <KPD_u8GetPressed+0x128>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2fda:	6d 89       	ldd	r22, Y+21	; 0x15
    2fdc:	7e 89       	ldd	r23, Y+22	; 0x16
    2fde:	8f 89       	ldd	r24, Y+23	; 0x17
    2fe0:	98 8d       	ldd	r25, Y+24	; 0x18
    2fe2:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    2fe6:	dc 01       	movw	r26, r24
    2fe8:	cb 01       	movw	r24, r22
    2fea:	9c 8b       	std	Y+20, r25	; 0x14
    2fec:	8b 8b       	std	Y+19, r24	; 0x13
    2fee:	8b 89       	ldd	r24, Y+19	; 0x13
    2ff0:	9c 89       	ldd	r25, Y+20	; 0x14
    2ff2:	98 8b       	std	Y+16, r25	; 0x10
    2ff4:	8f 87       	std	Y+15, r24	; 0x0f
    2ff6:	8f 85       	ldd	r24, Y+15	; 0x0f
    2ff8:	98 89       	ldd	r25, Y+16	; 0x10
    2ffa:	01 97       	sbiw	r24, 0x01	; 1
    2ffc:	f1 f7       	brne	.-4      	; 0x2ffa <KPD_u8GetPressed+0x120>
    2ffe:	98 8b       	std	Y+16, r25	; 0x10
    3000:	8f 87       	std	Y+15, r24	; 0x0f
			{
				_delay_ms(50); // bouncing
				DIO_enumGetPinValue(KPD_PORT, LOC_u8ROW_Iterator, &LOC_u8GetPressed);
    3002:	9e 01       	movw	r18, r28
    3004:	20 5e       	subi	r18, 0xE0	; 224
    3006:	3f 4f       	sbci	r19, 0xFF	; 255
    3008:	82 e0       	ldi	r24, 0x02	; 2
    300a:	6e 8d       	ldd	r22, Y+30	; 0x1e
    300c:	a9 01       	movw	r20, r18
    300e:	0e 94 b5 29 	call	0x536a	; 0x536a <DIO_enumGetPinValue>
				
				if(LOC_u8GetPressed == 0)
    3012:	88 a1       	ldd	r24, Y+32	; 0x20
    3014:	88 23       	and	r24, r24
    3016:	a9 f4       	brne	.+42     	; 0x3042 <KPD_u8GetPressed+0x168>
				{
					LOC_u8RetVal = KPD_u8Buttons[LOC_u8ROW_Iterator - KPD_ROW_INIT][LOC_u8COL_Iterator - KPD_COL_INIT];
    3018:	8e 8d       	ldd	r24, Y+30	; 0x1e
    301a:	48 2f       	mov	r20, r24
    301c:	50 e0       	ldi	r21, 0x00	; 0
    301e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    3020:	88 2f       	mov	r24, r24
    3022:	90 e0       	ldi	r25, 0x00	; 0
    3024:	9c 01       	movw	r18, r24
    3026:	24 50       	subi	r18, 0x04	; 4
    3028:	30 40       	sbci	r19, 0x00	; 0
    302a:	ca 01       	movw	r24, r20
    302c:	88 0f       	add	r24, r24
    302e:	99 1f       	adc	r25, r25
    3030:	88 0f       	add	r24, r24
    3032:	99 1f       	adc	r25, r25
    3034:	82 0f       	add	r24, r18
    3036:	93 1f       	adc	r25, r19
    3038:	fc 01       	movw	r30, r24
    303a:	e0 58       	subi	r30, 0x80	; 128
    303c:	fe 4f       	sbci	r31, 0xFE	; 254
    303e:	80 81       	ld	r24, Z
    3040:	8f 8f       	std	Y+31, r24	; 0x1f
    3042:	80 e0       	ldi	r24, 0x00	; 0
    3044:	90 e0       	ldi	r25, 0x00	; 0
    3046:	a8 e4       	ldi	r26, 0x48	; 72
    3048:	b3 e4       	ldi	r27, 0x43	; 67
    304a:	8b 87       	std	Y+11, r24	; 0x0b
    304c:	9c 87       	std	Y+12, r25	; 0x0c
    304e:	ad 87       	std	Y+13, r26	; 0x0d
    3050:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3052:	6b 85       	ldd	r22, Y+11	; 0x0b
    3054:	7c 85       	ldd	r23, Y+12	; 0x0c
    3056:	8d 85       	ldd	r24, Y+13	; 0x0d
    3058:	9e 85       	ldd	r25, Y+14	; 0x0e
    305a:	20 e0       	ldi	r18, 0x00	; 0
    305c:	30 e0       	ldi	r19, 0x00	; 0
    305e:	4a e7       	ldi	r20, 0x7A	; 122
    3060:	53 e4       	ldi	r21, 0x43	; 67
    3062:	0e 94 2b 10 	call	0x2056	; 0x2056 <__mulsf3>
    3066:	dc 01       	movw	r26, r24
    3068:	cb 01       	movw	r24, r22
    306a:	8f 83       	std	Y+7, r24	; 0x07
    306c:	98 87       	std	Y+8, r25	; 0x08
    306e:	a9 87       	std	Y+9, r26	; 0x09
    3070:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3072:	6f 81       	ldd	r22, Y+7	; 0x07
    3074:	78 85       	ldd	r23, Y+8	; 0x08
    3076:	89 85       	ldd	r24, Y+9	; 0x09
    3078:	9a 85       	ldd	r25, Y+10	; 0x0a
    307a:	20 e0       	ldi	r18, 0x00	; 0
    307c:	30 e0       	ldi	r19, 0x00	; 0
    307e:	40 e8       	ldi	r20, 0x80	; 128
    3080:	5f e3       	ldi	r21, 0x3F	; 63
    3082:	0e 94 31 12 	call	0x2462	; 0x2462 <__ltsf2>
    3086:	88 23       	and	r24, r24
    3088:	2c f4       	brge	.+10     	; 0x3094 <KPD_u8GetPressed+0x1ba>
		__ticks = 1;
    308a:	81 e0       	ldi	r24, 0x01	; 1
    308c:	90 e0       	ldi	r25, 0x00	; 0
    308e:	9e 83       	std	Y+6, r25	; 0x06
    3090:	8d 83       	std	Y+5, r24	; 0x05
    3092:	3f c0       	rjmp	.+126    	; 0x3112 <KPD_u8GetPressed+0x238>
	else if (__tmp > 65535)
    3094:	6f 81       	ldd	r22, Y+7	; 0x07
    3096:	78 85       	ldd	r23, Y+8	; 0x08
    3098:	89 85       	ldd	r24, Y+9	; 0x09
    309a:	9a 85       	ldd	r25, Y+10	; 0x0a
    309c:	20 e0       	ldi	r18, 0x00	; 0
    309e:	3f ef       	ldi	r19, 0xFF	; 255
    30a0:	4f e7       	ldi	r20, 0x7F	; 127
    30a2:	57 e4       	ldi	r21, 0x47	; 71
    30a4:	0e 94 d1 11 	call	0x23a2	; 0x23a2 <__gtsf2>
    30a8:	18 16       	cp	r1, r24
    30aa:	4c f5       	brge	.+82     	; 0x30fe <KPD_u8GetPressed+0x224>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    30ac:	6b 85       	ldd	r22, Y+11	; 0x0b
    30ae:	7c 85       	ldd	r23, Y+12	; 0x0c
    30b0:	8d 85       	ldd	r24, Y+13	; 0x0d
    30b2:	9e 85       	ldd	r25, Y+14	; 0x0e
    30b4:	20 e0       	ldi	r18, 0x00	; 0
    30b6:	30 e0       	ldi	r19, 0x00	; 0
    30b8:	40 e2       	ldi	r20, 0x20	; 32
    30ba:	51 e4       	ldi	r21, 0x41	; 65
    30bc:	0e 94 2b 10 	call	0x2056	; 0x2056 <__mulsf3>
    30c0:	dc 01       	movw	r26, r24
    30c2:	cb 01       	movw	r24, r22
    30c4:	bc 01       	movw	r22, r24
    30c6:	cd 01       	movw	r24, r26
    30c8:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    30cc:	dc 01       	movw	r26, r24
    30ce:	cb 01       	movw	r24, r22
    30d0:	9e 83       	std	Y+6, r25	; 0x06
    30d2:	8d 83       	std	Y+5, r24	; 0x05
    30d4:	0f c0       	rjmp	.+30     	; 0x30f4 <KPD_u8GetPressed+0x21a>
    30d6:	89 e1       	ldi	r24, 0x19	; 25
    30d8:	90 e0       	ldi	r25, 0x00	; 0
    30da:	9c 83       	std	Y+4, r25	; 0x04
    30dc:	8b 83       	std	Y+3, r24	; 0x03
    30de:	8b 81       	ldd	r24, Y+3	; 0x03
    30e0:	9c 81       	ldd	r25, Y+4	; 0x04
    30e2:	01 97       	sbiw	r24, 0x01	; 1
    30e4:	f1 f7       	brne	.-4      	; 0x30e2 <KPD_u8GetPressed+0x208>
    30e6:	9c 83       	std	Y+4, r25	; 0x04
    30e8:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    30ea:	8d 81       	ldd	r24, Y+5	; 0x05
    30ec:	9e 81       	ldd	r25, Y+6	; 0x06
    30ee:	01 97       	sbiw	r24, 0x01	; 1
    30f0:	9e 83       	std	Y+6, r25	; 0x06
    30f2:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    30f4:	8d 81       	ldd	r24, Y+5	; 0x05
    30f6:	9e 81       	ldd	r25, Y+6	; 0x06
    30f8:	00 97       	sbiw	r24, 0x00	; 0
    30fa:	69 f7       	brne	.-38     	; 0x30d6 <KPD_u8GetPressed+0x1fc>
    30fc:	1c c0       	rjmp	.+56     	; 0x3136 <KPD_u8GetPressed+0x25c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    30fe:	6f 81       	ldd	r22, Y+7	; 0x07
    3100:	78 85       	ldd	r23, Y+8	; 0x08
    3102:	89 85       	ldd	r24, Y+9	; 0x09
    3104:	9a 85       	ldd	r25, Y+10	; 0x0a
    3106:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    310a:	dc 01       	movw	r26, r24
    310c:	cb 01       	movw	r24, r22
    310e:	9e 83       	std	Y+6, r25	; 0x06
    3110:	8d 83       	std	Y+5, r24	; 0x05
    3112:	8d 81       	ldd	r24, Y+5	; 0x05
    3114:	9e 81       	ldd	r25, Y+6	; 0x06
    3116:	9a 83       	std	Y+2, r25	; 0x02
    3118:	89 83       	std	Y+1, r24	; 0x01
    311a:	89 81       	ldd	r24, Y+1	; 0x01
    311c:	9a 81       	ldd	r25, Y+2	; 0x02
    311e:	01 97       	sbiw	r24, 0x01	; 1
    3120:	f1 f7       	brne	.-4      	; 0x311e <KPD_u8GetPressed+0x244>
    3122:	9a 83       	std	Y+2, r25	; 0x02
    3124:	89 83       	std	Y+1, r24	; 0x01
    3126:	07 c0       	rjmp	.+14     	; 0x3136 <KPD_u8GetPressed+0x25c>
	u8 LOC_u8COL_Iterator;
	
	for(LOC_u8COL_Iterator = KPD_COL_INIT; LOC_u8COL_Iterator < KPD_COL_END; LOC_u8COL_Iterator++)
	{
		DIO_enumSetPinValue(KPD_PORT, LOC_u8COL_Iterator, DIO_PIN_LOW);
		for(LOC_u8ROW_Iterator = KPD_ROW_INIT; LOC_u8ROW_Iterator < KPD_ROW_END; LOC_u8ROW_Iterator++)
    3128:	8e 8d       	ldd	r24, Y+30	; 0x1e
    312a:	8f 5f       	subi	r24, 0xFF	; 255
    312c:	8e 8f       	std	Y+30, r24	; 0x1e
    312e:	8e 8d       	ldd	r24, Y+30	; 0x1e
    3130:	83 30       	cpi	r24, 0x03	; 3
    3132:	08 f4       	brcc	.+2      	; 0x3136 <KPD_u8GetPressed+0x25c>
    3134:	e8 ce       	rjmp	.-560    	; 0x2f06 <KPD_u8GetPressed+0x2c>
				_delay_ms(200); // if continuous pressing
				break;
			}
		}
		
		DIO_enumSetPinValue(KPD_PORT, LOC_u8COL_Iterator, DIO_PIN_HIGH);
    3136:	82 e0       	ldi	r24, 0x02	; 2
    3138:	6d 8d       	ldd	r22, Y+29	; 0x1d
    313a:	41 e0       	ldi	r20, 0x01	; 1
    313c:	0e 94 a6 28 	call	0x514c	; 0x514c <DIO_enumSetPinValue>
	u8 LOC_u8GetPressed;
	
	u8 LOC_u8ROW_Iterator;
	u8 LOC_u8COL_Iterator;
	
	for(LOC_u8COL_Iterator = KPD_COL_INIT; LOC_u8COL_Iterator < KPD_COL_END; LOC_u8COL_Iterator++)
    3140:	8d 8d       	ldd	r24, Y+29	; 0x1d
    3142:	8f 5f       	subi	r24, 0xFF	; 255
    3144:	8d 8f       	std	Y+29, r24	; 0x1d
    3146:	8d 8d       	ldd	r24, Y+29	; 0x1d
    3148:	87 30       	cpi	r24, 0x07	; 7
    314a:	08 f4       	brcc	.+2      	; 0x314e <KPD_u8GetPressed+0x274>
    314c:	d5 ce       	rjmp	.-598    	; 0x2ef8 <KPD_u8GetPressed+0x1e>
		}
		
		DIO_enumSetPinValue(KPD_PORT, LOC_u8COL_Iterator, DIO_PIN_HIGH);
	}
	
	return LOC_u8RetVal;
    314e:	8f 8d       	ldd	r24, Y+31	; 0x1f
}
    3150:	a0 96       	adiw	r28, 0x20	; 32
    3152:	0f b6       	in	r0, 0x3f	; 63
    3154:	f8 94       	cli
    3156:	de bf       	out	0x3e, r29	; 62
    3158:	0f be       	out	0x3f, r0	; 63
    315a:	cd bf       	out	0x3d, r28	; 61
    315c:	cf 91       	pop	r28
    315e:	df 91       	pop	r29
    3160:	08 95       	ret

00003162 <LCD_voidInit>:
#include "LCD_private.h"
#include "LCD_config.h"
#include "util/delay.h"

void LCD_voidInit()
{
    3162:	0f 93       	push	r16
    3164:	1f 93       	push	r17
    3166:	df 93       	push	r29
    3168:	cf 93       	push	r28
    316a:	cd b7       	in	r28, 0x3d	; 61
    316c:	de b7       	in	r29, 0x3e	; 62
    316e:	c4 55       	subi	r28, 0x54	; 84
    3170:	d0 40       	sbci	r29, 0x00	; 0
    3172:	0f b6       	in	r0, 0x3f	; 63
    3174:	f8 94       	cli
    3176:	de bf       	out	0x3e, r29	; 62
    3178:	0f be       	out	0x3f, r0	; 63
    317a:	cd bf       	out	0x3d, r28	; 61
	DIO_enumSetPortDirection(LCD_CTRL_PORT, DIO_PORT_OUTPUT);
    317c:	81 e0       	ldi	r24, 0x01	; 1
    317e:	6f ef       	ldi	r22, 0xFF	; 255
    3180:	0e 94 d7 2c 	call	0x59ae	; 0x59ae <DIO_enumSetPortDirection>
	DIO_enumSetPortDirection(LCD_DATA_PORT, DIO_PORT_OUTPUT);
    3184:	80 e0       	ldi	r24, 0x00	; 0
    3186:	6f ef       	ldi	r22, 0xFF	; 255
    3188:	0e 94 d7 2c 	call	0x59ae	; 0x59ae <DIO_enumSetPortDirection>
    318c:	fe 01       	movw	r30, r28
    318e:	ef 5a       	subi	r30, 0xAF	; 175
    3190:	ff 4f       	sbci	r31, 0xFF	; 255
    3192:	80 e0       	ldi	r24, 0x00	; 0
    3194:	90 e0       	ldi	r25, 0x00	; 0
    3196:	a0 ef       	ldi	r26, 0xF0	; 240
    3198:	b1 e4       	ldi	r27, 0x41	; 65
    319a:	80 83       	st	Z, r24
    319c:	91 83       	std	Z+1, r25	; 0x01
    319e:	a2 83       	std	Z+2, r26	; 0x02
    31a0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    31a2:	8e 01       	movw	r16, r28
    31a4:	03 5b       	subi	r16, 0xB3	; 179
    31a6:	1f 4f       	sbci	r17, 0xFF	; 255
    31a8:	fe 01       	movw	r30, r28
    31aa:	ef 5a       	subi	r30, 0xAF	; 175
    31ac:	ff 4f       	sbci	r31, 0xFF	; 255
    31ae:	60 81       	ld	r22, Z
    31b0:	71 81       	ldd	r23, Z+1	; 0x01
    31b2:	82 81       	ldd	r24, Z+2	; 0x02
    31b4:	93 81       	ldd	r25, Z+3	; 0x03
    31b6:	20 e0       	ldi	r18, 0x00	; 0
    31b8:	30 e0       	ldi	r19, 0x00	; 0
    31ba:	4a e7       	ldi	r20, 0x7A	; 122
    31bc:	53 e4       	ldi	r21, 0x43	; 67
    31be:	0e 94 2b 10 	call	0x2056	; 0x2056 <__mulsf3>
    31c2:	dc 01       	movw	r26, r24
    31c4:	cb 01       	movw	r24, r22
    31c6:	f8 01       	movw	r30, r16
    31c8:	80 83       	st	Z, r24
    31ca:	91 83       	std	Z+1, r25	; 0x01
    31cc:	a2 83       	std	Z+2, r26	; 0x02
    31ce:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    31d0:	fe 01       	movw	r30, r28
    31d2:	e3 5b       	subi	r30, 0xB3	; 179
    31d4:	ff 4f       	sbci	r31, 0xFF	; 255
    31d6:	60 81       	ld	r22, Z
    31d8:	71 81       	ldd	r23, Z+1	; 0x01
    31da:	82 81       	ldd	r24, Z+2	; 0x02
    31dc:	93 81       	ldd	r25, Z+3	; 0x03
    31de:	20 e0       	ldi	r18, 0x00	; 0
    31e0:	30 e0       	ldi	r19, 0x00	; 0
    31e2:	40 e8       	ldi	r20, 0x80	; 128
    31e4:	5f e3       	ldi	r21, 0x3F	; 63
    31e6:	0e 94 31 12 	call	0x2462	; 0x2462 <__ltsf2>
    31ea:	88 23       	and	r24, r24
    31ec:	44 f4       	brge	.+16     	; 0x31fe <LCD_voidInit+0x9c>
		__ticks = 1;
    31ee:	fe 01       	movw	r30, r28
    31f0:	e5 5b       	subi	r30, 0xB5	; 181
    31f2:	ff 4f       	sbci	r31, 0xFF	; 255
    31f4:	81 e0       	ldi	r24, 0x01	; 1
    31f6:	90 e0       	ldi	r25, 0x00	; 0
    31f8:	91 83       	std	Z+1, r25	; 0x01
    31fa:	80 83       	st	Z, r24
    31fc:	64 c0       	rjmp	.+200    	; 0x32c6 <LCD_voidInit+0x164>
	else if (__tmp > 65535)
    31fe:	fe 01       	movw	r30, r28
    3200:	e3 5b       	subi	r30, 0xB3	; 179
    3202:	ff 4f       	sbci	r31, 0xFF	; 255
    3204:	60 81       	ld	r22, Z
    3206:	71 81       	ldd	r23, Z+1	; 0x01
    3208:	82 81       	ldd	r24, Z+2	; 0x02
    320a:	93 81       	ldd	r25, Z+3	; 0x03
    320c:	20 e0       	ldi	r18, 0x00	; 0
    320e:	3f ef       	ldi	r19, 0xFF	; 255
    3210:	4f e7       	ldi	r20, 0x7F	; 127
    3212:	57 e4       	ldi	r21, 0x47	; 71
    3214:	0e 94 d1 11 	call	0x23a2	; 0x23a2 <__gtsf2>
    3218:	18 16       	cp	r1, r24
    321a:	0c f0       	brlt	.+2      	; 0x321e <LCD_voidInit+0xbc>
    321c:	43 c0       	rjmp	.+134    	; 0x32a4 <LCD_voidInit+0x142>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    321e:	fe 01       	movw	r30, r28
    3220:	ef 5a       	subi	r30, 0xAF	; 175
    3222:	ff 4f       	sbci	r31, 0xFF	; 255
    3224:	60 81       	ld	r22, Z
    3226:	71 81       	ldd	r23, Z+1	; 0x01
    3228:	82 81       	ldd	r24, Z+2	; 0x02
    322a:	93 81       	ldd	r25, Z+3	; 0x03
    322c:	20 e0       	ldi	r18, 0x00	; 0
    322e:	30 e0       	ldi	r19, 0x00	; 0
    3230:	40 e2       	ldi	r20, 0x20	; 32
    3232:	51 e4       	ldi	r21, 0x41	; 65
    3234:	0e 94 2b 10 	call	0x2056	; 0x2056 <__mulsf3>
    3238:	dc 01       	movw	r26, r24
    323a:	cb 01       	movw	r24, r22
    323c:	8e 01       	movw	r16, r28
    323e:	05 5b       	subi	r16, 0xB5	; 181
    3240:	1f 4f       	sbci	r17, 0xFF	; 255
    3242:	bc 01       	movw	r22, r24
    3244:	cd 01       	movw	r24, r26
    3246:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    324a:	dc 01       	movw	r26, r24
    324c:	cb 01       	movw	r24, r22
    324e:	f8 01       	movw	r30, r16
    3250:	91 83       	std	Z+1, r25	; 0x01
    3252:	80 83       	st	Z, r24
    3254:	1f c0       	rjmp	.+62     	; 0x3294 <LCD_voidInit+0x132>
    3256:	fe 01       	movw	r30, r28
    3258:	e7 5b       	subi	r30, 0xB7	; 183
    325a:	ff 4f       	sbci	r31, 0xFF	; 255
    325c:	89 e1       	ldi	r24, 0x19	; 25
    325e:	90 e0       	ldi	r25, 0x00	; 0
    3260:	91 83       	std	Z+1, r25	; 0x01
    3262:	80 83       	st	Z, r24
    3264:	fe 01       	movw	r30, r28
    3266:	e7 5b       	subi	r30, 0xB7	; 183
    3268:	ff 4f       	sbci	r31, 0xFF	; 255
    326a:	80 81       	ld	r24, Z
    326c:	91 81       	ldd	r25, Z+1	; 0x01
    326e:	01 97       	sbiw	r24, 0x01	; 1
    3270:	f1 f7       	brne	.-4      	; 0x326e <LCD_voidInit+0x10c>
    3272:	fe 01       	movw	r30, r28
    3274:	e7 5b       	subi	r30, 0xB7	; 183
    3276:	ff 4f       	sbci	r31, 0xFF	; 255
    3278:	91 83       	std	Z+1, r25	; 0x01
    327a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    327c:	de 01       	movw	r26, r28
    327e:	a5 5b       	subi	r26, 0xB5	; 181
    3280:	bf 4f       	sbci	r27, 0xFF	; 255
    3282:	fe 01       	movw	r30, r28
    3284:	e5 5b       	subi	r30, 0xB5	; 181
    3286:	ff 4f       	sbci	r31, 0xFF	; 255
    3288:	80 81       	ld	r24, Z
    328a:	91 81       	ldd	r25, Z+1	; 0x01
    328c:	01 97       	sbiw	r24, 0x01	; 1
    328e:	11 96       	adiw	r26, 0x01	; 1
    3290:	9c 93       	st	X, r25
    3292:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3294:	fe 01       	movw	r30, r28
    3296:	e5 5b       	subi	r30, 0xB5	; 181
    3298:	ff 4f       	sbci	r31, 0xFF	; 255
    329a:	80 81       	ld	r24, Z
    329c:	91 81       	ldd	r25, Z+1	; 0x01
    329e:	00 97       	sbiw	r24, 0x00	; 0
    32a0:	d1 f6       	brne	.-76     	; 0x3256 <LCD_voidInit+0xf4>
    32a2:	27 c0       	rjmp	.+78     	; 0x32f2 <LCD_voidInit+0x190>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    32a4:	8e 01       	movw	r16, r28
    32a6:	05 5b       	subi	r16, 0xB5	; 181
    32a8:	1f 4f       	sbci	r17, 0xFF	; 255
    32aa:	fe 01       	movw	r30, r28
    32ac:	e3 5b       	subi	r30, 0xB3	; 179
    32ae:	ff 4f       	sbci	r31, 0xFF	; 255
    32b0:	60 81       	ld	r22, Z
    32b2:	71 81       	ldd	r23, Z+1	; 0x01
    32b4:	82 81       	ldd	r24, Z+2	; 0x02
    32b6:	93 81       	ldd	r25, Z+3	; 0x03
    32b8:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    32bc:	dc 01       	movw	r26, r24
    32be:	cb 01       	movw	r24, r22
    32c0:	f8 01       	movw	r30, r16
    32c2:	91 83       	std	Z+1, r25	; 0x01
    32c4:	80 83       	st	Z, r24
    32c6:	de 01       	movw	r26, r28
    32c8:	a9 5b       	subi	r26, 0xB9	; 185
    32ca:	bf 4f       	sbci	r27, 0xFF	; 255
    32cc:	fe 01       	movw	r30, r28
    32ce:	e5 5b       	subi	r30, 0xB5	; 181
    32d0:	ff 4f       	sbci	r31, 0xFF	; 255
    32d2:	80 81       	ld	r24, Z
    32d4:	91 81       	ldd	r25, Z+1	; 0x01
    32d6:	8d 93       	st	X+, r24
    32d8:	9c 93       	st	X, r25
    32da:	fe 01       	movw	r30, r28
    32dc:	e9 5b       	subi	r30, 0xB9	; 185
    32de:	ff 4f       	sbci	r31, 0xFF	; 255
    32e0:	80 81       	ld	r24, Z
    32e2:	91 81       	ldd	r25, Z+1	; 0x01
    32e4:	01 97       	sbiw	r24, 0x01	; 1
    32e6:	f1 f7       	brne	.-4      	; 0x32e4 <LCD_voidInit+0x182>
    32e8:	fe 01       	movw	r30, r28
    32ea:	e9 5b       	subi	r30, 0xB9	; 185
    32ec:	ff 4f       	sbci	r31, 0xFF	; 255
    32ee:	91 83       	std	Z+1, r25	; 0x01
    32f0:	80 83       	st	Z, r24
	//DIO_enumSetPortValue(LCD_CTRL_PORT, DIO_PORT_HIGH);
	_delay_ms(30);

	LCD_voidSendCommand(LCD_HOME);
    32f2:	82 e0       	ldi	r24, 0x02	; 2
    32f4:	0e 94 e1 1b 	call	0x37c2	; 0x37c2 <LCD_voidSendCommand>
    32f8:	fe 01       	movw	r30, r28
    32fa:	ed 5b       	subi	r30, 0xBD	; 189
    32fc:	ff 4f       	sbci	r31, 0xFF	; 255
    32fe:	80 e0       	ldi	r24, 0x00	; 0
    3300:	90 e0       	ldi	r25, 0x00	; 0
    3302:	a0 e8       	ldi	r26, 0x80	; 128
    3304:	bf e3       	ldi	r27, 0x3F	; 63
    3306:	80 83       	st	Z, r24
    3308:	91 83       	std	Z+1, r25	; 0x01
    330a:	a2 83       	std	Z+2, r26	; 0x02
    330c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    330e:	8e 01       	movw	r16, r28
    3310:	01 5c       	subi	r16, 0xC1	; 193
    3312:	1f 4f       	sbci	r17, 0xFF	; 255
    3314:	fe 01       	movw	r30, r28
    3316:	ed 5b       	subi	r30, 0xBD	; 189
    3318:	ff 4f       	sbci	r31, 0xFF	; 255
    331a:	60 81       	ld	r22, Z
    331c:	71 81       	ldd	r23, Z+1	; 0x01
    331e:	82 81       	ldd	r24, Z+2	; 0x02
    3320:	93 81       	ldd	r25, Z+3	; 0x03
    3322:	20 e0       	ldi	r18, 0x00	; 0
    3324:	30 e0       	ldi	r19, 0x00	; 0
    3326:	4a e7       	ldi	r20, 0x7A	; 122
    3328:	53 e4       	ldi	r21, 0x43	; 67
    332a:	0e 94 2b 10 	call	0x2056	; 0x2056 <__mulsf3>
    332e:	dc 01       	movw	r26, r24
    3330:	cb 01       	movw	r24, r22
    3332:	f8 01       	movw	r30, r16
    3334:	80 83       	st	Z, r24
    3336:	91 83       	std	Z+1, r25	; 0x01
    3338:	a2 83       	std	Z+2, r26	; 0x02
    333a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    333c:	fe 01       	movw	r30, r28
    333e:	ff 96       	adiw	r30, 0x3f	; 63
    3340:	60 81       	ld	r22, Z
    3342:	71 81       	ldd	r23, Z+1	; 0x01
    3344:	82 81       	ldd	r24, Z+2	; 0x02
    3346:	93 81       	ldd	r25, Z+3	; 0x03
    3348:	20 e0       	ldi	r18, 0x00	; 0
    334a:	30 e0       	ldi	r19, 0x00	; 0
    334c:	40 e8       	ldi	r20, 0x80	; 128
    334e:	5f e3       	ldi	r21, 0x3F	; 63
    3350:	0e 94 31 12 	call	0x2462	; 0x2462 <__ltsf2>
    3354:	88 23       	and	r24, r24
    3356:	2c f4       	brge	.+10     	; 0x3362 <LCD_voidInit+0x200>
		__ticks = 1;
    3358:	81 e0       	ldi	r24, 0x01	; 1
    335a:	90 e0       	ldi	r25, 0x00	; 0
    335c:	9e af       	std	Y+62, r25	; 0x3e
    335e:	8d af       	std	Y+61, r24	; 0x3d
    3360:	46 c0       	rjmp	.+140    	; 0x33ee <LCD_voidInit+0x28c>
	else if (__tmp > 65535)
    3362:	fe 01       	movw	r30, r28
    3364:	ff 96       	adiw	r30, 0x3f	; 63
    3366:	60 81       	ld	r22, Z
    3368:	71 81       	ldd	r23, Z+1	; 0x01
    336a:	82 81       	ldd	r24, Z+2	; 0x02
    336c:	93 81       	ldd	r25, Z+3	; 0x03
    336e:	20 e0       	ldi	r18, 0x00	; 0
    3370:	3f ef       	ldi	r19, 0xFF	; 255
    3372:	4f e7       	ldi	r20, 0x7F	; 127
    3374:	57 e4       	ldi	r21, 0x47	; 71
    3376:	0e 94 d1 11 	call	0x23a2	; 0x23a2 <__gtsf2>
    337a:	18 16       	cp	r1, r24
    337c:	64 f5       	brge	.+88     	; 0x33d6 <LCD_voidInit+0x274>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    337e:	fe 01       	movw	r30, r28
    3380:	ed 5b       	subi	r30, 0xBD	; 189
    3382:	ff 4f       	sbci	r31, 0xFF	; 255
    3384:	60 81       	ld	r22, Z
    3386:	71 81       	ldd	r23, Z+1	; 0x01
    3388:	82 81       	ldd	r24, Z+2	; 0x02
    338a:	93 81       	ldd	r25, Z+3	; 0x03
    338c:	20 e0       	ldi	r18, 0x00	; 0
    338e:	30 e0       	ldi	r19, 0x00	; 0
    3390:	40 e2       	ldi	r20, 0x20	; 32
    3392:	51 e4       	ldi	r21, 0x41	; 65
    3394:	0e 94 2b 10 	call	0x2056	; 0x2056 <__mulsf3>
    3398:	dc 01       	movw	r26, r24
    339a:	cb 01       	movw	r24, r22
    339c:	bc 01       	movw	r22, r24
    339e:	cd 01       	movw	r24, r26
    33a0:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    33a4:	dc 01       	movw	r26, r24
    33a6:	cb 01       	movw	r24, r22
    33a8:	9e af       	std	Y+62, r25	; 0x3e
    33aa:	8d af       	std	Y+61, r24	; 0x3d
    33ac:	0f c0       	rjmp	.+30     	; 0x33cc <LCD_voidInit+0x26a>
    33ae:	89 e1       	ldi	r24, 0x19	; 25
    33b0:	90 e0       	ldi	r25, 0x00	; 0
    33b2:	9c af       	std	Y+60, r25	; 0x3c
    33b4:	8b af       	std	Y+59, r24	; 0x3b
    33b6:	8b ad       	ldd	r24, Y+59	; 0x3b
    33b8:	9c ad       	ldd	r25, Y+60	; 0x3c
    33ba:	01 97       	sbiw	r24, 0x01	; 1
    33bc:	f1 f7       	brne	.-4      	; 0x33ba <LCD_voidInit+0x258>
    33be:	9c af       	std	Y+60, r25	; 0x3c
    33c0:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    33c2:	8d ad       	ldd	r24, Y+61	; 0x3d
    33c4:	9e ad       	ldd	r25, Y+62	; 0x3e
    33c6:	01 97       	sbiw	r24, 0x01	; 1
    33c8:	9e af       	std	Y+62, r25	; 0x3e
    33ca:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    33cc:	8d ad       	ldd	r24, Y+61	; 0x3d
    33ce:	9e ad       	ldd	r25, Y+62	; 0x3e
    33d0:	00 97       	sbiw	r24, 0x00	; 0
    33d2:	69 f7       	brne	.-38     	; 0x33ae <LCD_voidInit+0x24c>
    33d4:	16 c0       	rjmp	.+44     	; 0x3402 <LCD_voidInit+0x2a0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    33d6:	fe 01       	movw	r30, r28
    33d8:	ff 96       	adiw	r30, 0x3f	; 63
    33da:	60 81       	ld	r22, Z
    33dc:	71 81       	ldd	r23, Z+1	; 0x01
    33de:	82 81       	ldd	r24, Z+2	; 0x02
    33e0:	93 81       	ldd	r25, Z+3	; 0x03
    33e2:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    33e6:	dc 01       	movw	r26, r24
    33e8:	cb 01       	movw	r24, r22
    33ea:	9e af       	std	Y+62, r25	; 0x3e
    33ec:	8d af       	std	Y+61, r24	; 0x3d
    33ee:	8d ad       	ldd	r24, Y+61	; 0x3d
    33f0:	9e ad       	ldd	r25, Y+62	; 0x3e
    33f2:	9a af       	std	Y+58, r25	; 0x3a
    33f4:	89 af       	std	Y+57, r24	; 0x39
    33f6:	89 ad       	ldd	r24, Y+57	; 0x39
    33f8:	9a ad       	ldd	r25, Y+58	; 0x3a
    33fa:	01 97       	sbiw	r24, 0x01	; 1
    33fc:	f1 f7       	brne	.-4      	; 0x33fa <LCD_voidInit+0x298>
    33fe:	9a af       	std	Y+58, r25	; 0x3a
    3400:	89 af       	std	Y+57, r24	; 0x39
	_delay_ms(1);

	LCD_voidSendCommand(0X38);
    3402:	88 e3       	ldi	r24, 0x38	; 56
    3404:	0e 94 e1 1b 	call	0x37c2	; 0x37c2 <LCD_voidSendCommand>
    3408:	80 e0       	ldi	r24, 0x00	; 0
    340a:	90 e0       	ldi	r25, 0x00	; 0
    340c:	a0 e8       	ldi	r26, 0x80	; 128
    340e:	bf e3       	ldi	r27, 0x3F	; 63
    3410:	8d ab       	std	Y+53, r24	; 0x35
    3412:	9e ab       	std	Y+54, r25	; 0x36
    3414:	af ab       	std	Y+55, r26	; 0x37
    3416:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3418:	6d a9       	ldd	r22, Y+53	; 0x35
    341a:	7e a9       	ldd	r23, Y+54	; 0x36
    341c:	8f a9       	ldd	r24, Y+55	; 0x37
    341e:	98 ad       	ldd	r25, Y+56	; 0x38
    3420:	20 e0       	ldi	r18, 0x00	; 0
    3422:	30 e0       	ldi	r19, 0x00	; 0
    3424:	4a e7       	ldi	r20, 0x7A	; 122
    3426:	53 e4       	ldi	r21, 0x43	; 67
    3428:	0e 94 2b 10 	call	0x2056	; 0x2056 <__mulsf3>
    342c:	dc 01       	movw	r26, r24
    342e:	cb 01       	movw	r24, r22
    3430:	89 ab       	std	Y+49, r24	; 0x31
    3432:	9a ab       	std	Y+50, r25	; 0x32
    3434:	ab ab       	std	Y+51, r26	; 0x33
    3436:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    3438:	69 a9       	ldd	r22, Y+49	; 0x31
    343a:	7a a9       	ldd	r23, Y+50	; 0x32
    343c:	8b a9       	ldd	r24, Y+51	; 0x33
    343e:	9c a9       	ldd	r25, Y+52	; 0x34
    3440:	20 e0       	ldi	r18, 0x00	; 0
    3442:	30 e0       	ldi	r19, 0x00	; 0
    3444:	40 e8       	ldi	r20, 0x80	; 128
    3446:	5f e3       	ldi	r21, 0x3F	; 63
    3448:	0e 94 31 12 	call	0x2462	; 0x2462 <__ltsf2>
    344c:	88 23       	and	r24, r24
    344e:	2c f4       	brge	.+10     	; 0x345a <LCD_voidInit+0x2f8>
		__ticks = 1;
    3450:	81 e0       	ldi	r24, 0x01	; 1
    3452:	90 e0       	ldi	r25, 0x00	; 0
    3454:	98 ab       	std	Y+48, r25	; 0x30
    3456:	8f a7       	std	Y+47, r24	; 0x2f
    3458:	3f c0       	rjmp	.+126    	; 0x34d8 <LCD_voidInit+0x376>
	else if (__tmp > 65535)
    345a:	69 a9       	ldd	r22, Y+49	; 0x31
    345c:	7a a9       	ldd	r23, Y+50	; 0x32
    345e:	8b a9       	ldd	r24, Y+51	; 0x33
    3460:	9c a9       	ldd	r25, Y+52	; 0x34
    3462:	20 e0       	ldi	r18, 0x00	; 0
    3464:	3f ef       	ldi	r19, 0xFF	; 255
    3466:	4f e7       	ldi	r20, 0x7F	; 127
    3468:	57 e4       	ldi	r21, 0x47	; 71
    346a:	0e 94 d1 11 	call	0x23a2	; 0x23a2 <__gtsf2>
    346e:	18 16       	cp	r1, r24
    3470:	4c f5       	brge	.+82     	; 0x34c4 <LCD_voidInit+0x362>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3472:	6d a9       	ldd	r22, Y+53	; 0x35
    3474:	7e a9       	ldd	r23, Y+54	; 0x36
    3476:	8f a9       	ldd	r24, Y+55	; 0x37
    3478:	98 ad       	ldd	r25, Y+56	; 0x38
    347a:	20 e0       	ldi	r18, 0x00	; 0
    347c:	30 e0       	ldi	r19, 0x00	; 0
    347e:	40 e2       	ldi	r20, 0x20	; 32
    3480:	51 e4       	ldi	r21, 0x41	; 65
    3482:	0e 94 2b 10 	call	0x2056	; 0x2056 <__mulsf3>
    3486:	dc 01       	movw	r26, r24
    3488:	cb 01       	movw	r24, r22
    348a:	bc 01       	movw	r22, r24
    348c:	cd 01       	movw	r24, r26
    348e:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    3492:	dc 01       	movw	r26, r24
    3494:	cb 01       	movw	r24, r22
    3496:	98 ab       	std	Y+48, r25	; 0x30
    3498:	8f a7       	std	Y+47, r24	; 0x2f
    349a:	0f c0       	rjmp	.+30     	; 0x34ba <LCD_voidInit+0x358>
    349c:	89 e1       	ldi	r24, 0x19	; 25
    349e:	90 e0       	ldi	r25, 0x00	; 0
    34a0:	9e a7       	std	Y+46, r25	; 0x2e
    34a2:	8d a7       	std	Y+45, r24	; 0x2d
    34a4:	8d a5       	ldd	r24, Y+45	; 0x2d
    34a6:	9e a5       	ldd	r25, Y+46	; 0x2e
    34a8:	01 97       	sbiw	r24, 0x01	; 1
    34aa:	f1 f7       	brne	.-4      	; 0x34a8 <LCD_voidInit+0x346>
    34ac:	9e a7       	std	Y+46, r25	; 0x2e
    34ae:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    34b0:	8f a5       	ldd	r24, Y+47	; 0x2f
    34b2:	98 a9       	ldd	r25, Y+48	; 0x30
    34b4:	01 97       	sbiw	r24, 0x01	; 1
    34b6:	98 ab       	std	Y+48, r25	; 0x30
    34b8:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    34ba:	8f a5       	ldd	r24, Y+47	; 0x2f
    34bc:	98 a9       	ldd	r25, Y+48	; 0x30
    34be:	00 97       	sbiw	r24, 0x00	; 0
    34c0:	69 f7       	brne	.-38     	; 0x349c <LCD_voidInit+0x33a>
    34c2:	14 c0       	rjmp	.+40     	; 0x34ec <LCD_voidInit+0x38a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    34c4:	69 a9       	ldd	r22, Y+49	; 0x31
    34c6:	7a a9       	ldd	r23, Y+50	; 0x32
    34c8:	8b a9       	ldd	r24, Y+51	; 0x33
    34ca:	9c a9       	ldd	r25, Y+52	; 0x34
    34cc:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    34d0:	dc 01       	movw	r26, r24
    34d2:	cb 01       	movw	r24, r22
    34d4:	98 ab       	std	Y+48, r25	; 0x30
    34d6:	8f a7       	std	Y+47, r24	; 0x2f
    34d8:	8f a5       	ldd	r24, Y+47	; 0x2f
    34da:	98 a9       	ldd	r25, Y+48	; 0x30
    34dc:	9c a7       	std	Y+44, r25	; 0x2c
    34de:	8b a7       	std	Y+43, r24	; 0x2b
    34e0:	8b a5       	ldd	r24, Y+43	; 0x2b
    34e2:	9c a5       	ldd	r25, Y+44	; 0x2c
    34e4:	01 97       	sbiw	r24, 0x01	; 1
    34e6:	f1 f7       	brne	.-4      	; 0x34e4 <LCD_voidInit+0x382>
    34e8:	9c a7       	std	Y+44, r25	; 0x2c
    34ea:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(1);

	LCD_voidSendCommand(LCD_DISPLAY_ON_CURSOR_OFF);
    34ec:	8c e0       	ldi	r24, 0x0C	; 12
    34ee:	0e 94 e1 1b 	call	0x37c2	; 0x37c2 <LCD_voidSendCommand>
    34f2:	80 e0       	ldi	r24, 0x00	; 0
    34f4:	90 e0       	ldi	r25, 0x00	; 0
    34f6:	a0 e8       	ldi	r26, 0x80	; 128
    34f8:	bf e3       	ldi	r27, 0x3F	; 63
    34fa:	8f a3       	std	Y+39, r24	; 0x27
    34fc:	98 a7       	std	Y+40, r25	; 0x28
    34fe:	a9 a7       	std	Y+41, r26	; 0x29
    3500:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3502:	6f a1       	ldd	r22, Y+39	; 0x27
    3504:	78 a5       	ldd	r23, Y+40	; 0x28
    3506:	89 a5       	ldd	r24, Y+41	; 0x29
    3508:	9a a5       	ldd	r25, Y+42	; 0x2a
    350a:	20 e0       	ldi	r18, 0x00	; 0
    350c:	30 e0       	ldi	r19, 0x00	; 0
    350e:	4a e7       	ldi	r20, 0x7A	; 122
    3510:	53 e4       	ldi	r21, 0x43	; 67
    3512:	0e 94 2b 10 	call	0x2056	; 0x2056 <__mulsf3>
    3516:	dc 01       	movw	r26, r24
    3518:	cb 01       	movw	r24, r22
    351a:	8b a3       	std	Y+35, r24	; 0x23
    351c:	9c a3       	std	Y+36, r25	; 0x24
    351e:	ad a3       	std	Y+37, r26	; 0x25
    3520:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    3522:	6b a1       	ldd	r22, Y+35	; 0x23
    3524:	7c a1       	ldd	r23, Y+36	; 0x24
    3526:	8d a1       	ldd	r24, Y+37	; 0x25
    3528:	9e a1       	ldd	r25, Y+38	; 0x26
    352a:	20 e0       	ldi	r18, 0x00	; 0
    352c:	30 e0       	ldi	r19, 0x00	; 0
    352e:	40 e8       	ldi	r20, 0x80	; 128
    3530:	5f e3       	ldi	r21, 0x3F	; 63
    3532:	0e 94 31 12 	call	0x2462	; 0x2462 <__ltsf2>
    3536:	88 23       	and	r24, r24
    3538:	2c f4       	brge	.+10     	; 0x3544 <LCD_voidInit+0x3e2>
		__ticks = 1;
    353a:	81 e0       	ldi	r24, 0x01	; 1
    353c:	90 e0       	ldi	r25, 0x00	; 0
    353e:	9a a3       	std	Y+34, r25	; 0x22
    3540:	89 a3       	std	Y+33, r24	; 0x21
    3542:	3f c0       	rjmp	.+126    	; 0x35c2 <LCD_voidInit+0x460>
	else if (__tmp > 65535)
    3544:	6b a1       	ldd	r22, Y+35	; 0x23
    3546:	7c a1       	ldd	r23, Y+36	; 0x24
    3548:	8d a1       	ldd	r24, Y+37	; 0x25
    354a:	9e a1       	ldd	r25, Y+38	; 0x26
    354c:	20 e0       	ldi	r18, 0x00	; 0
    354e:	3f ef       	ldi	r19, 0xFF	; 255
    3550:	4f e7       	ldi	r20, 0x7F	; 127
    3552:	57 e4       	ldi	r21, 0x47	; 71
    3554:	0e 94 d1 11 	call	0x23a2	; 0x23a2 <__gtsf2>
    3558:	18 16       	cp	r1, r24
    355a:	4c f5       	brge	.+82     	; 0x35ae <LCD_voidInit+0x44c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    355c:	6f a1       	ldd	r22, Y+39	; 0x27
    355e:	78 a5       	ldd	r23, Y+40	; 0x28
    3560:	89 a5       	ldd	r24, Y+41	; 0x29
    3562:	9a a5       	ldd	r25, Y+42	; 0x2a
    3564:	20 e0       	ldi	r18, 0x00	; 0
    3566:	30 e0       	ldi	r19, 0x00	; 0
    3568:	40 e2       	ldi	r20, 0x20	; 32
    356a:	51 e4       	ldi	r21, 0x41	; 65
    356c:	0e 94 2b 10 	call	0x2056	; 0x2056 <__mulsf3>
    3570:	dc 01       	movw	r26, r24
    3572:	cb 01       	movw	r24, r22
    3574:	bc 01       	movw	r22, r24
    3576:	cd 01       	movw	r24, r26
    3578:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    357c:	dc 01       	movw	r26, r24
    357e:	cb 01       	movw	r24, r22
    3580:	9a a3       	std	Y+34, r25	; 0x22
    3582:	89 a3       	std	Y+33, r24	; 0x21
    3584:	0f c0       	rjmp	.+30     	; 0x35a4 <LCD_voidInit+0x442>
    3586:	89 e1       	ldi	r24, 0x19	; 25
    3588:	90 e0       	ldi	r25, 0x00	; 0
    358a:	98 a3       	std	Y+32, r25	; 0x20
    358c:	8f 8f       	std	Y+31, r24	; 0x1f
    358e:	8f 8d       	ldd	r24, Y+31	; 0x1f
    3590:	98 a1       	ldd	r25, Y+32	; 0x20
    3592:	01 97       	sbiw	r24, 0x01	; 1
    3594:	f1 f7       	brne	.-4      	; 0x3592 <LCD_voidInit+0x430>
    3596:	98 a3       	std	Y+32, r25	; 0x20
    3598:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    359a:	89 a1       	ldd	r24, Y+33	; 0x21
    359c:	9a a1       	ldd	r25, Y+34	; 0x22
    359e:	01 97       	sbiw	r24, 0x01	; 1
    35a0:	9a a3       	std	Y+34, r25	; 0x22
    35a2:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    35a4:	89 a1       	ldd	r24, Y+33	; 0x21
    35a6:	9a a1       	ldd	r25, Y+34	; 0x22
    35a8:	00 97       	sbiw	r24, 0x00	; 0
    35aa:	69 f7       	brne	.-38     	; 0x3586 <LCD_voidInit+0x424>
    35ac:	14 c0       	rjmp	.+40     	; 0x35d6 <LCD_voidInit+0x474>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    35ae:	6b a1       	ldd	r22, Y+35	; 0x23
    35b0:	7c a1       	ldd	r23, Y+36	; 0x24
    35b2:	8d a1       	ldd	r24, Y+37	; 0x25
    35b4:	9e a1       	ldd	r25, Y+38	; 0x26
    35b6:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    35ba:	dc 01       	movw	r26, r24
    35bc:	cb 01       	movw	r24, r22
    35be:	9a a3       	std	Y+34, r25	; 0x22
    35c0:	89 a3       	std	Y+33, r24	; 0x21
    35c2:	89 a1       	ldd	r24, Y+33	; 0x21
    35c4:	9a a1       	ldd	r25, Y+34	; 0x22
    35c6:	9e 8f       	std	Y+30, r25	; 0x1e
    35c8:	8d 8f       	std	Y+29, r24	; 0x1d
    35ca:	8d 8d       	ldd	r24, Y+29	; 0x1d
    35cc:	9e 8d       	ldd	r25, Y+30	; 0x1e
    35ce:	01 97       	sbiw	r24, 0x01	; 1
    35d0:	f1 f7       	brne	.-4      	; 0x35ce <LCD_voidInit+0x46c>
    35d2:	9e 8f       	std	Y+30, r25	; 0x1e
    35d4:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(1);

	LCD_voidSendCommand(LCD_CLEAR);
    35d6:	81 e0       	ldi	r24, 0x01	; 1
    35d8:	0e 94 e1 1b 	call	0x37c2	; 0x37c2 <LCD_voidSendCommand>
    35dc:	80 e0       	ldi	r24, 0x00	; 0
    35de:	90 e0       	ldi	r25, 0x00	; 0
    35e0:	a0 e0       	ldi	r26, 0x00	; 0
    35e2:	b0 e4       	ldi	r27, 0x40	; 64
    35e4:	89 8f       	std	Y+25, r24	; 0x19
    35e6:	9a 8f       	std	Y+26, r25	; 0x1a
    35e8:	ab 8f       	std	Y+27, r26	; 0x1b
    35ea:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    35ec:	69 8d       	ldd	r22, Y+25	; 0x19
    35ee:	7a 8d       	ldd	r23, Y+26	; 0x1a
    35f0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    35f2:	9c 8d       	ldd	r25, Y+28	; 0x1c
    35f4:	20 e0       	ldi	r18, 0x00	; 0
    35f6:	30 e0       	ldi	r19, 0x00	; 0
    35f8:	4a e7       	ldi	r20, 0x7A	; 122
    35fa:	53 e4       	ldi	r21, 0x43	; 67
    35fc:	0e 94 2b 10 	call	0x2056	; 0x2056 <__mulsf3>
    3600:	dc 01       	movw	r26, r24
    3602:	cb 01       	movw	r24, r22
    3604:	8d 8b       	std	Y+21, r24	; 0x15
    3606:	9e 8b       	std	Y+22, r25	; 0x16
    3608:	af 8b       	std	Y+23, r26	; 0x17
    360a:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    360c:	6d 89       	ldd	r22, Y+21	; 0x15
    360e:	7e 89       	ldd	r23, Y+22	; 0x16
    3610:	8f 89       	ldd	r24, Y+23	; 0x17
    3612:	98 8d       	ldd	r25, Y+24	; 0x18
    3614:	20 e0       	ldi	r18, 0x00	; 0
    3616:	30 e0       	ldi	r19, 0x00	; 0
    3618:	40 e8       	ldi	r20, 0x80	; 128
    361a:	5f e3       	ldi	r21, 0x3F	; 63
    361c:	0e 94 31 12 	call	0x2462	; 0x2462 <__ltsf2>
    3620:	88 23       	and	r24, r24
    3622:	2c f4       	brge	.+10     	; 0x362e <LCD_voidInit+0x4cc>
		__ticks = 1;
    3624:	81 e0       	ldi	r24, 0x01	; 1
    3626:	90 e0       	ldi	r25, 0x00	; 0
    3628:	9c 8b       	std	Y+20, r25	; 0x14
    362a:	8b 8b       	std	Y+19, r24	; 0x13
    362c:	3f c0       	rjmp	.+126    	; 0x36ac <LCD_voidInit+0x54a>
	else if (__tmp > 65535)
    362e:	6d 89       	ldd	r22, Y+21	; 0x15
    3630:	7e 89       	ldd	r23, Y+22	; 0x16
    3632:	8f 89       	ldd	r24, Y+23	; 0x17
    3634:	98 8d       	ldd	r25, Y+24	; 0x18
    3636:	20 e0       	ldi	r18, 0x00	; 0
    3638:	3f ef       	ldi	r19, 0xFF	; 255
    363a:	4f e7       	ldi	r20, 0x7F	; 127
    363c:	57 e4       	ldi	r21, 0x47	; 71
    363e:	0e 94 d1 11 	call	0x23a2	; 0x23a2 <__gtsf2>
    3642:	18 16       	cp	r1, r24
    3644:	4c f5       	brge	.+82     	; 0x3698 <LCD_voidInit+0x536>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3646:	69 8d       	ldd	r22, Y+25	; 0x19
    3648:	7a 8d       	ldd	r23, Y+26	; 0x1a
    364a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    364c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    364e:	20 e0       	ldi	r18, 0x00	; 0
    3650:	30 e0       	ldi	r19, 0x00	; 0
    3652:	40 e2       	ldi	r20, 0x20	; 32
    3654:	51 e4       	ldi	r21, 0x41	; 65
    3656:	0e 94 2b 10 	call	0x2056	; 0x2056 <__mulsf3>
    365a:	dc 01       	movw	r26, r24
    365c:	cb 01       	movw	r24, r22
    365e:	bc 01       	movw	r22, r24
    3660:	cd 01       	movw	r24, r26
    3662:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    3666:	dc 01       	movw	r26, r24
    3668:	cb 01       	movw	r24, r22
    366a:	9c 8b       	std	Y+20, r25	; 0x14
    366c:	8b 8b       	std	Y+19, r24	; 0x13
    366e:	0f c0       	rjmp	.+30     	; 0x368e <LCD_voidInit+0x52c>
    3670:	89 e1       	ldi	r24, 0x19	; 25
    3672:	90 e0       	ldi	r25, 0x00	; 0
    3674:	9a 8b       	std	Y+18, r25	; 0x12
    3676:	89 8b       	std	Y+17, r24	; 0x11
    3678:	89 89       	ldd	r24, Y+17	; 0x11
    367a:	9a 89       	ldd	r25, Y+18	; 0x12
    367c:	01 97       	sbiw	r24, 0x01	; 1
    367e:	f1 f7       	brne	.-4      	; 0x367c <LCD_voidInit+0x51a>
    3680:	9a 8b       	std	Y+18, r25	; 0x12
    3682:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3684:	8b 89       	ldd	r24, Y+19	; 0x13
    3686:	9c 89       	ldd	r25, Y+20	; 0x14
    3688:	01 97       	sbiw	r24, 0x01	; 1
    368a:	9c 8b       	std	Y+20, r25	; 0x14
    368c:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    368e:	8b 89       	ldd	r24, Y+19	; 0x13
    3690:	9c 89       	ldd	r25, Y+20	; 0x14
    3692:	00 97       	sbiw	r24, 0x00	; 0
    3694:	69 f7       	brne	.-38     	; 0x3670 <LCD_voidInit+0x50e>
    3696:	14 c0       	rjmp	.+40     	; 0x36c0 <LCD_voidInit+0x55e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3698:	6d 89       	ldd	r22, Y+21	; 0x15
    369a:	7e 89       	ldd	r23, Y+22	; 0x16
    369c:	8f 89       	ldd	r24, Y+23	; 0x17
    369e:	98 8d       	ldd	r25, Y+24	; 0x18
    36a0:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    36a4:	dc 01       	movw	r26, r24
    36a6:	cb 01       	movw	r24, r22
    36a8:	9c 8b       	std	Y+20, r25	; 0x14
    36aa:	8b 8b       	std	Y+19, r24	; 0x13
    36ac:	8b 89       	ldd	r24, Y+19	; 0x13
    36ae:	9c 89       	ldd	r25, Y+20	; 0x14
    36b0:	98 8b       	std	Y+16, r25	; 0x10
    36b2:	8f 87       	std	Y+15, r24	; 0x0f
    36b4:	8f 85       	ldd	r24, Y+15	; 0x0f
    36b6:	98 89       	ldd	r25, Y+16	; 0x10
    36b8:	01 97       	sbiw	r24, 0x01	; 1
    36ba:	f1 f7       	brne	.-4      	; 0x36b8 <LCD_voidInit+0x556>
    36bc:	98 8b       	std	Y+16, r25	; 0x10
    36be:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(2);

	LCD_voidSendCommand(LCD_ENTRY_MODE);
    36c0:	86 e0       	ldi	r24, 0x06	; 6
    36c2:	0e 94 e1 1b 	call	0x37c2	; 0x37c2 <LCD_voidSendCommand>
    36c6:	80 e0       	ldi	r24, 0x00	; 0
    36c8:	90 e0       	ldi	r25, 0x00	; 0
    36ca:	a0 e8       	ldi	r26, 0x80	; 128
    36cc:	bf e3       	ldi	r27, 0x3F	; 63
    36ce:	8b 87       	std	Y+11, r24	; 0x0b
    36d0:	9c 87       	std	Y+12, r25	; 0x0c
    36d2:	ad 87       	std	Y+13, r26	; 0x0d
    36d4:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    36d6:	6b 85       	ldd	r22, Y+11	; 0x0b
    36d8:	7c 85       	ldd	r23, Y+12	; 0x0c
    36da:	8d 85       	ldd	r24, Y+13	; 0x0d
    36dc:	9e 85       	ldd	r25, Y+14	; 0x0e
    36de:	20 e0       	ldi	r18, 0x00	; 0
    36e0:	30 e0       	ldi	r19, 0x00	; 0
    36e2:	4a e7       	ldi	r20, 0x7A	; 122
    36e4:	53 e4       	ldi	r21, 0x43	; 67
    36e6:	0e 94 2b 10 	call	0x2056	; 0x2056 <__mulsf3>
    36ea:	dc 01       	movw	r26, r24
    36ec:	cb 01       	movw	r24, r22
    36ee:	8f 83       	std	Y+7, r24	; 0x07
    36f0:	98 87       	std	Y+8, r25	; 0x08
    36f2:	a9 87       	std	Y+9, r26	; 0x09
    36f4:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    36f6:	6f 81       	ldd	r22, Y+7	; 0x07
    36f8:	78 85       	ldd	r23, Y+8	; 0x08
    36fa:	89 85       	ldd	r24, Y+9	; 0x09
    36fc:	9a 85       	ldd	r25, Y+10	; 0x0a
    36fe:	20 e0       	ldi	r18, 0x00	; 0
    3700:	30 e0       	ldi	r19, 0x00	; 0
    3702:	40 e8       	ldi	r20, 0x80	; 128
    3704:	5f e3       	ldi	r21, 0x3F	; 63
    3706:	0e 94 31 12 	call	0x2462	; 0x2462 <__ltsf2>
    370a:	88 23       	and	r24, r24
    370c:	2c f4       	brge	.+10     	; 0x3718 <LCD_voidInit+0x5b6>
		__ticks = 1;
    370e:	81 e0       	ldi	r24, 0x01	; 1
    3710:	90 e0       	ldi	r25, 0x00	; 0
    3712:	9e 83       	std	Y+6, r25	; 0x06
    3714:	8d 83       	std	Y+5, r24	; 0x05
    3716:	3f c0       	rjmp	.+126    	; 0x3796 <LCD_voidInit+0x634>
	else if (__tmp > 65535)
    3718:	6f 81       	ldd	r22, Y+7	; 0x07
    371a:	78 85       	ldd	r23, Y+8	; 0x08
    371c:	89 85       	ldd	r24, Y+9	; 0x09
    371e:	9a 85       	ldd	r25, Y+10	; 0x0a
    3720:	20 e0       	ldi	r18, 0x00	; 0
    3722:	3f ef       	ldi	r19, 0xFF	; 255
    3724:	4f e7       	ldi	r20, 0x7F	; 127
    3726:	57 e4       	ldi	r21, 0x47	; 71
    3728:	0e 94 d1 11 	call	0x23a2	; 0x23a2 <__gtsf2>
    372c:	18 16       	cp	r1, r24
    372e:	4c f5       	brge	.+82     	; 0x3782 <LCD_voidInit+0x620>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3730:	6b 85       	ldd	r22, Y+11	; 0x0b
    3732:	7c 85       	ldd	r23, Y+12	; 0x0c
    3734:	8d 85       	ldd	r24, Y+13	; 0x0d
    3736:	9e 85       	ldd	r25, Y+14	; 0x0e
    3738:	20 e0       	ldi	r18, 0x00	; 0
    373a:	30 e0       	ldi	r19, 0x00	; 0
    373c:	40 e2       	ldi	r20, 0x20	; 32
    373e:	51 e4       	ldi	r21, 0x41	; 65
    3740:	0e 94 2b 10 	call	0x2056	; 0x2056 <__mulsf3>
    3744:	dc 01       	movw	r26, r24
    3746:	cb 01       	movw	r24, r22
    3748:	bc 01       	movw	r22, r24
    374a:	cd 01       	movw	r24, r26
    374c:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    3750:	dc 01       	movw	r26, r24
    3752:	cb 01       	movw	r24, r22
    3754:	9e 83       	std	Y+6, r25	; 0x06
    3756:	8d 83       	std	Y+5, r24	; 0x05
    3758:	0f c0       	rjmp	.+30     	; 0x3778 <LCD_voidInit+0x616>
    375a:	89 e1       	ldi	r24, 0x19	; 25
    375c:	90 e0       	ldi	r25, 0x00	; 0
    375e:	9c 83       	std	Y+4, r25	; 0x04
    3760:	8b 83       	std	Y+3, r24	; 0x03
    3762:	8b 81       	ldd	r24, Y+3	; 0x03
    3764:	9c 81       	ldd	r25, Y+4	; 0x04
    3766:	01 97       	sbiw	r24, 0x01	; 1
    3768:	f1 f7       	brne	.-4      	; 0x3766 <LCD_voidInit+0x604>
    376a:	9c 83       	std	Y+4, r25	; 0x04
    376c:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    376e:	8d 81       	ldd	r24, Y+5	; 0x05
    3770:	9e 81       	ldd	r25, Y+6	; 0x06
    3772:	01 97       	sbiw	r24, 0x01	; 1
    3774:	9e 83       	std	Y+6, r25	; 0x06
    3776:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3778:	8d 81       	ldd	r24, Y+5	; 0x05
    377a:	9e 81       	ldd	r25, Y+6	; 0x06
    377c:	00 97       	sbiw	r24, 0x00	; 0
    377e:	69 f7       	brne	.-38     	; 0x375a <LCD_voidInit+0x5f8>
    3780:	14 c0       	rjmp	.+40     	; 0x37aa <LCD_voidInit+0x648>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3782:	6f 81       	ldd	r22, Y+7	; 0x07
    3784:	78 85       	ldd	r23, Y+8	; 0x08
    3786:	89 85       	ldd	r24, Y+9	; 0x09
    3788:	9a 85       	ldd	r25, Y+10	; 0x0a
    378a:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    378e:	dc 01       	movw	r26, r24
    3790:	cb 01       	movw	r24, r22
    3792:	9e 83       	std	Y+6, r25	; 0x06
    3794:	8d 83       	std	Y+5, r24	; 0x05
    3796:	8d 81       	ldd	r24, Y+5	; 0x05
    3798:	9e 81       	ldd	r25, Y+6	; 0x06
    379a:	9a 83       	std	Y+2, r25	; 0x02
    379c:	89 83       	std	Y+1, r24	; 0x01
    379e:	89 81       	ldd	r24, Y+1	; 0x01
    37a0:	9a 81       	ldd	r25, Y+2	; 0x02
    37a2:	01 97       	sbiw	r24, 0x01	; 1
    37a4:	f1 f7       	brne	.-4      	; 0x37a2 <LCD_voidInit+0x640>
    37a6:	9a 83       	std	Y+2, r25	; 0x02
    37a8:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
}
    37aa:	cc 5a       	subi	r28, 0xAC	; 172
    37ac:	df 4f       	sbci	r29, 0xFF	; 255
    37ae:	0f b6       	in	r0, 0x3f	; 63
    37b0:	f8 94       	cli
    37b2:	de bf       	out	0x3e, r29	; 62
    37b4:	0f be       	out	0x3f, r0	; 63
    37b6:	cd bf       	out	0x3d, r28	; 61
    37b8:	cf 91       	pop	r28
    37ba:	df 91       	pop	r29
    37bc:	1f 91       	pop	r17
    37be:	0f 91       	pop	r16
    37c0:	08 95       	ret

000037c2 <LCD_voidSendCommand>:

void LCD_voidSendCommand(u8 command)
{
    37c2:	df 93       	push	r29
    37c4:	cf 93       	push	r28
    37c6:	0f 92       	push	r0
    37c8:	cd b7       	in	r28, 0x3d	; 61
    37ca:	de b7       	in	r29, 0x3e	; 62
    37cc:	89 83       	std	Y+1, r24	; 0x01
	DIO_enumSetPortValue(LCD_DATA_PORT, command);
    37ce:	80 e0       	ldi	r24, 0x00	; 0
    37d0:	69 81       	ldd	r22, Y+1	; 0x01
    37d2:	0e 94 24 2d 	call	0x5a48	; 0x5a48 <DIO_enumSetPortValue>
	DIO_enumSetPinValue(LCD_CTRL_PORT, LCD_RS, DIO_PIN_LOW);
    37d6:	81 e0       	ldi	r24, 0x01	; 1
    37d8:	60 e0       	ldi	r22, 0x00	; 0
    37da:	40 e0       	ldi	r20, 0x00	; 0
    37dc:	0e 94 a6 28 	call	0x514c	; 0x514c <DIO_enumSetPinValue>
	DIO_enumSetPinValue(LCD_CTRL_PORT, LCD_RW, DIO_PIN_LOW);
    37e0:	81 e0       	ldi	r24, 0x01	; 1
    37e2:	61 e0       	ldi	r22, 0x01	; 1
    37e4:	40 e0       	ldi	r20, 0x00	; 0
    37e6:	0e 94 a6 28 	call	0x514c	; 0x514c <DIO_enumSetPinValue>

	//Send Pulse
	LCD_voidSendPulse();
    37ea:	0e 94 1f 21 	call	0x423e	; 0x423e <LCD_voidSendPulse>
}
    37ee:	0f 90       	pop	r0
    37f0:	cf 91       	pop	r28
    37f2:	df 91       	pop	r29
    37f4:	08 95       	ret

000037f6 <LCD_voidSendData>:

void LCD_voidSendData(u8 data)
{
    37f6:	df 93       	push	r29
    37f8:	cf 93       	push	r28
    37fa:	0f 92       	push	r0
    37fc:	cd b7       	in	r28, 0x3d	; 61
    37fe:	de b7       	in	r29, 0x3e	; 62
    3800:	89 83       	std	Y+1, r24	; 0x01
	DIO_enumSetPinValue(LCD_CTRL_PORT, LCD_RS, DIO_PIN_HIGH);
    3802:	81 e0       	ldi	r24, 0x01	; 1
    3804:	60 e0       	ldi	r22, 0x00	; 0
    3806:	41 e0       	ldi	r20, 0x01	; 1
    3808:	0e 94 a6 28 	call	0x514c	; 0x514c <DIO_enumSetPinValue>
	DIO_enumSetPinValue(LCD_CTRL_PORT, LCD_RW, DIO_PIN_LOW);
    380c:	81 e0       	ldi	r24, 0x01	; 1
    380e:	61 e0       	ldi	r22, 0x01	; 1
    3810:	40 e0       	ldi	r20, 0x00	; 0
    3812:	0e 94 a6 28 	call	0x514c	; 0x514c <DIO_enumSetPinValue>
	DIO_enumSetPortValue(LCD_DATA_PORT, data);
    3816:	80 e0       	ldi	r24, 0x00	; 0
    3818:	69 81       	ldd	r22, Y+1	; 0x01
    381a:	0e 94 24 2d 	call	0x5a48	; 0x5a48 <DIO_enumSetPortValue>

	//Send Pulse
	LCD_voidSendPulse();
    381e:	0e 94 1f 21 	call	0x423e	; 0x423e <LCD_voidSendPulse>
}
    3822:	0f 90       	pop	r0
    3824:	cf 91       	pop	r28
    3826:	df 91       	pop	r29
    3828:	08 95       	ret

0000382a <LCD_voidSetPosition>:

void LCD_voidSetPosition ( u8 Copy_u8Row , u8 Copy_u8Col ){
    382a:	df 93       	push	r29
    382c:	cf 93       	push	r28
    382e:	cd b7       	in	r28, 0x3d	; 61
    3830:	de b7       	in	r29, 0x3e	; 62
    3832:	61 97       	sbiw	r28, 0x11	; 17
    3834:	0f b6       	in	r0, 0x3f	; 63
    3836:	f8 94       	cli
    3838:	de bf       	out	0x3e, r29	; 62
    383a:	0f be       	out	0x3f, r0	; 63
    383c:	cd bf       	out	0x3d, r28	; 61
    383e:	88 8b       	std	Y+16, r24	; 0x10
    3840:	69 8b       	std	Y+17, r22	; 0x11

	u8 LOC_u8data ;

	/* In These cases will set at (0,0) ==> if the user enter invalid location */
	if(Copy_u8Row>2||Copy_u8Row<1||Copy_u8Col>16||Copy_u8Col<1)  //check
    3842:	88 89       	ldd	r24, Y+16	; 0x10
    3844:	83 30       	cpi	r24, 0x03	; 3
    3846:	48 f4       	brcc	.+18     	; 0x385a <LCD_voidSetPosition+0x30>
    3848:	88 89       	ldd	r24, Y+16	; 0x10
    384a:	88 23       	and	r24, r24
    384c:	31 f0       	breq	.+12     	; 0x385a <LCD_voidSetPosition+0x30>
    384e:	89 89       	ldd	r24, Y+17	; 0x11
    3850:	81 31       	cpi	r24, 0x11	; 17
    3852:	18 f4       	brcc	.+6      	; 0x385a <LCD_voidSetPosition+0x30>
    3854:	89 89       	ldd	r24, Y+17	; 0x11
    3856:	88 23       	and	r24, r24
    3858:	19 f4       	brne	.+6      	; 0x3860 <LCD_voidSetPosition+0x36>
	{
		LOC_u8data = LCD_CURSOR ;   // first location
    385a:	80 e8       	ldi	r24, 0x80	; 128
    385c:	8f 87       	std	Y+15, r24	; 0x0f
    385e:	0d c0       	rjmp	.+26     	; 0x387a <LCD_voidSetPosition+0x50>
	}

	else if( Copy_u8Row == 1 ){
    3860:	88 89       	ldd	r24, Y+16	; 0x10
    3862:	81 30       	cpi	r24, 0x01	; 1
    3864:	21 f4       	brne	.+8      	; 0x386e <LCD_voidSetPosition+0x44>

		LOC_u8data = ( ( LCD_CURSOR ) + ( Copy_u8Col - 1 ) );              //Row1 -> 0x80+col-1
    3866:	89 89       	ldd	r24, Y+17	; 0x11
    3868:	81 58       	subi	r24, 0x81	; 129
    386a:	8f 87       	std	Y+15, r24	; 0x0f
    386c:	06 c0       	rjmp	.+12     	; 0x387a <LCD_voidSetPosition+0x50>

	}

	else if( Copy_u8Row == 2 ){
    386e:	88 89       	ldd	r24, Y+16	; 0x10
    3870:	82 30       	cpi	r24, 0x02	; 2
    3872:	19 f4       	brne	.+6      	; 0x387a <LCD_voidSetPosition+0x50>

		LOC_u8data = ( ( LCD_CURSOR ) + (64) + ( Copy_u8Col - 1 ) );       //Row2 -> 0xc0+col-1
    3874:	89 89       	ldd	r24, Y+17	; 0x11
    3876:	81 54       	subi	r24, 0x41	; 65
    3878:	8f 87       	std	Y+15, r24	; 0x0f

	}
	LCD_voidSendCommand ( LOC_u8data );
    387a:	8f 85       	ldd	r24, Y+15	; 0x0f
    387c:	0e 94 e1 1b 	call	0x37c2	; 0x37c2 <LCD_voidSendCommand>
    3880:	80 e0       	ldi	r24, 0x00	; 0
    3882:	90 e0       	ldi	r25, 0x00	; 0
    3884:	a0 e8       	ldi	r26, 0x80	; 128
    3886:	bf e3       	ldi	r27, 0x3F	; 63
    3888:	8b 87       	std	Y+11, r24	; 0x0b
    388a:	9c 87       	std	Y+12, r25	; 0x0c
    388c:	ad 87       	std	Y+13, r26	; 0x0d
    388e:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3890:	6b 85       	ldd	r22, Y+11	; 0x0b
    3892:	7c 85       	ldd	r23, Y+12	; 0x0c
    3894:	8d 85       	ldd	r24, Y+13	; 0x0d
    3896:	9e 85       	ldd	r25, Y+14	; 0x0e
    3898:	20 e0       	ldi	r18, 0x00	; 0
    389a:	30 e0       	ldi	r19, 0x00	; 0
    389c:	4a e7       	ldi	r20, 0x7A	; 122
    389e:	53 e4       	ldi	r21, 0x43	; 67
    38a0:	0e 94 2b 10 	call	0x2056	; 0x2056 <__mulsf3>
    38a4:	dc 01       	movw	r26, r24
    38a6:	cb 01       	movw	r24, r22
    38a8:	8f 83       	std	Y+7, r24	; 0x07
    38aa:	98 87       	std	Y+8, r25	; 0x08
    38ac:	a9 87       	std	Y+9, r26	; 0x09
    38ae:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    38b0:	6f 81       	ldd	r22, Y+7	; 0x07
    38b2:	78 85       	ldd	r23, Y+8	; 0x08
    38b4:	89 85       	ldd	r24, Y+9	; 0x09
    38b6:	9a 85       	ldd	r25, Y+10	; 0x0a
    38b8:	20 e0       	ldi	r18, 0x00	; 0
    38ba:	30 e0       	ldi	r19, 0x00	; 0
    38bc:	40 e8       	ldi	r20, 0x80	; 128
    38be:	5f e3       	ldi	r21, 0x3F	; 63
    38c0:	0e 94 31 12 	call	0x2462	; 0x2462 <__ltsf2>
    38c4:	88 23       	and	r24, r24
    38c6:	2c f4       	brge	.+10     	; 0x38d2 <LCD_voidSetPosition+0xa8>
		__ticks = 1;
    38c8:	81 e0       	ldi	r24, 0x01	; 1
    38ca:	90 e0       	ldi	r25, 0x00	; 0
    38cc:	9e 83       	std	Y+6, r25	; 0x06
    38ce:	8d 83       	std	Y+5, r24	; 0x05
    38d0:	3f c0       	rjmp	.+126    	; 0x3950 <LCD_voidSetPosition+0x126>
	else if (__tmp > 65535)
    38d2:	6f 81       	ldd	r22, Y+7	; 0x07
    38d4:	78 85       	ldd	r23, Y+8	; 0x08
    38d6:	89 85       	ldd	r24, Y+9	; 0x09
    38d8:	9a 85       	ldd	r25, Y+10	; 0x0a
    38da:	20 e0       	ldi	r18, 0x00	; 0
    38dc:	3f ef       	ldi	r19, 0xFF	; 255
    38de:	4f e7       	ldi	r20, 0x7F	; 127
    38e0:	57 e4       	ldi	r21, 0x47	; 71
    38e2:	0e 94 d1 11 	call	0x23a2	; 0x23a2 <__gtsf2>
    38e6:	18 16       	cp	r1, r24
    38e8:	4c f5       	brge	.+82     	; 0x393c <LCD_voidSetPosition+0x112>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    38ea:	6b 85       	ldd	r22, Y+11	; 0x0b
    38ec:	7c 85       	ldd	r23, Y+12	; 0x0c
    38ee:	8d 85       	ldd	r24, Y+13	; 0x0d
    38f0:	9e 85       	ldd	r25, Y+14	; 0x0e
    38f2:	20 e0       	ldi	r18, 0x00	; 0
    38f4:	30 e0       	ldi	r19, 0x00	; 0
    38f6:	40 e2       	ldi	r20, 0x20	; 32
    38f8:	51 e4       	ldi	r21, 0x41	; 65
    38fa:	0e 94 2b 10 	call	0x2056	; 0x2056 <__mulsf3>
    38fe:	dc 01       	movw	r26, r24
    3900:	cb 01       	movw	r24, r22
    3902:	bc 01       	movw	r22, r24
    3904:	cd 01       	movw	r24, r26
    3906:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    390a:	dc 01       	movw	r26, r24
    390c:	cb 01       	movw	r24, r22
    390e:	9e 83       	std	Y+6, r25	; 0x06
    3910:	8d 83       	std	Y+5, r24	; 0x05
    3912:	0f c0       	rjmp	.+30     	; 0x3932 <LCD_voidSetPosition+0x108>
    3914:	89 e1       	ldi	r24, 0x19	; 25
    3916:	90 e0       	ldi	r25, 0x00	; 0
    3918:	9c 83       	std	Y+4, r25	; 0x04
    391a:	8b 83       	std	Y+3, r24	; 0x03
    391c:	8b 81       	ldd	r24, Y+3	; 0x03
    391e:	9c 81       	ldd	r25, Y+4	; 0x04
    3920:	01 97       	sbiw	r24, 0x01	; 1
    3922:	f1 f7       	brne	.-4      	; 0x3920 <LCD_voidSetPosition+0xf6>
    3924:	9c 83       	std	Y+4, r25	; 0x04
    3926:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3928:	8d 81       	ldd	r24, Y+5	; 0x05
    392a:	9e 81       	ldd	r25, Y+6	; 0x06
    392c:	01 97       	sbiw	r24, 0x01	; 1
    392e:	9e 83       	std	Y+6, r25	; 0x06
    3930:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3932:	8d 81       	ldd	r24, Y+5	; 0x05
    3934:	9e 81       	ldd	r25, Y+6	; 0x06
    3936:	00 97       	sbiw	r24, 0x00	; 0
    3938:	69 f7       	brne	.-38     	; 0x3914 <LCD_voidSetPosition+0xea>
    393a:	14 c0       	rjmp	.+40     	; 0x3964 <LCD_voidSetPosition+0x13a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    393c:	6f 81       	ldd	r22, Y+7	; 0x07
    393e:	78 85       	ldd	r23, Y+8	; 0x08
    3940:	89 85       	ldd	r24, Y+9	; 0x09
    3942:	9a 85       	ldd	r25, Y+10	; 0x0a
    3944:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    3948:	dc 01       	movw	r26, r24
    394a:	cb 01       	movw	r24, r22
    394c:	9e 83       	std	Y+6, r25	; 0x06
    394e:	8d 83       	std	Y+5, r24	; 0x05
    3950:	8d 81       	ldd	r24, Y+5	; 0x05
    3952:	9e 81       	ldd	r25, Y+6	; 0x06
    3954:	9a 83       	std	Y+2, r25	; 0x02
    3956:	89 83       	std	Y+1, r24	; 0x01
    3958:	89 81       	ldd	r24, Y+1	; 0x01
    395a:	9a 81       	ldd	r25, Y+2	; 0x02
    395c:	01 97       	sbiw	r24, 0x01	; 1
    395e:	f1 f7       	brne	.-4      	; 0x395c <LCD_voidSetPosition+0x132>
    3960:	9a 83       	std	Y+2, r25	; 0x02
    3962:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);

}
    3964:	61 96       	adiw	r28, 0x11	; 17
    3966:	0f b6       	in	r0, 0x3f	; 63
    3968:	f8 94       	cli
    396a:	de bf       	out	0x3e, r29	; 62
    396c:	0f be       	out	0x3f, r0	; 63
    396e:	cd bf       	out	0x3d, r28	; 61
    3970:	cf 91       	pop	r28
    3972:	df 91       	pop	r29
    3974:	08 95       	ret

00003976 <LCD_voidSendString>:


void LCD_voidSendString(u8* str)
{
    3976:	df 93       	push	r29
    3978:	cf 93       	push	r28
    397a:	00 d0       	rcall	.+0      	; 0x397c <LCD_voidSendString+0x6>
    397c:	0f 92       	push	r0
    397e:	cd b7       	in	r28, 0x3d	; 61
    3980:	de b7       	in	r29, 0x3e	; 62
    3982:	9b 83       	std	Y+3, r25	; 0x03
    3984:	8a 83       	std	Y+2, r24	; 0x02
	u8 ptr = 0;
    3986:	19 82       	std	Y+1, r1	; 0x01
    3988:	0e c0       	rjmp	.+28     	; 0x39a6 <LCD_voidSendString+0x30>
	while(str[ptr] != '\0')
	{
		LCD_voidSendData(str[ptr]);
    398a:	89 81       	ldd	r24, Y+1	; 0x01
    398c:	28 2f       	mov	r18, r24
    398e:	30 e0       	ldi	r19, 0x00	; 0
    3990:	8a 81       	ldd	r24, Y+2	; 0x02
    3992:	9b 81       	ldd	r25, Y+3	; 0x03
    3994:	fc 01       	movw	r30, r24
    3996:	e2 0f       	add	r30, r18
    3998:	f3 1f       	adc	r31, r19
    399a:	80 81       	ld	r24, Z
    399c:	0e 94 fb 1b 	call	0x37f6	; 0x37f6 <LCD_voidSendData>
		ptr++;
    39a0:	89 81       	ldd	r24, Y+1	; 0x01
    39a2:	8f 5f       	subi	r24, 0xFF	; 255
    39a4:	89 83       	std	Y+1, r24	; 0x01


void LCD_voidSendString(u8* str)
{
	u8 ptr = 0;
	while(str[ptr] != '\0')
    39a6:	89 81       	ldd	r24, Y+1	; 0x01
    39a8:	28 2f       	mov	r18, r24
    39aa:	30 e0       	ldi	r19, 0x00	; 0
    39ac:	8a 81       	ldd	r24, Y+2	; 0x02
    39ae:	9b 81       	ldd	r25, Y+3	; 0x03
    39b0:	fc 01       	movw	r30, r24
    39b2:	e2 0f       	add	r30, r18
    39b4:	f3 1f       	adc	r31, r19
    39b6:	80 81       	ld	r24, Z
    39b8:	88 23       	and	r24, r24
    39ba:	39 f7       	brne	.-50     	; 0x398a <LCD_voidSendString+0x14>
	{
		LCD_voidSendData(str[ptr]);
		ptr++;
	}
}
    39bc:	0f 90       	pop	r0
    39be:	0f 90       	pop	r0
    39c0:	0f 90       	pop	r0
    39c2:	cf 91       	pop	r28
    39c4:	df 91       	pop	r29
    39c6:	08 95       	ret

000039c8 <LCD_voidSendNumber>:

void LCD_voidSendNumber(u64 number )
{
    39c8:	af 92       	push	r10
    39ca:	bf 92       	push	r11
    39cc:	cf 92       	push	r12
    39ce:	df 92       	push	r13
    39d0:	ef 92       	push	r14
    39d2:	ff 92       	push	r15
    39d4:	0f 93       	push	r16
    39d6:	1f 93       	push	r17
    39d8:	df 93       	push	r29
    39da:	cf 93       	push	r28
    39dc:	cd b7       	in	r28, 0x3d	; 61
    39de:	de b7       	in	r29, 0x3e	; 62
    39e0:	c6 56       	subi	r28, 0x66	; 102
    39e2:	d0 40       	sbci	r29, 0x00	; 0
    39e4:	0f b6       	in	r0, 0x3f	; 63
    39e6:	f8 94       	cli
    39e8:	de bf       	out	0x3e, r29	; 62
    39ea:	0f be       	out	0x3f, r0	; 63
    39ec:	cd bf       	out	0x3d, r28	; 61
    39ee:	29 87       	std	Y+9, r18	; 0x09
    39f0:	3a 87       	std	Y+10, r19	; 0x0a
    39f2:	4b 87       	std	Y+11, r20	; 0x0b
    39f4:	5c 87       	std	Y+12, r21	; 0x0c
    39f6:	6d 87       	std	Y+13, r22	; 0x0d
    39f8:	7e 87       	std	Y+14, r23	; 0x0e
    39fa:	8f 87       	std	Y+15, r24	; 0x0f
    39fc:	98 8b       	std	Y+16, r25	; 0x10

	u64 LOC_u64Reversed = 1 ;
    39fe:	81 e0       	ldi	r24, 0x01	; 1
    3a00:	89 83       	std	Y+1, r24	; 0x01
    3a02:	1a 82       	std	Y+2, r1	; 0x02
    3a04:	1b 82       	std	Y+3, r1	; 0x03
    3a06:	1c 82       	std	Y+4, r1	; 0x04
    3a08:	1d 82       	std	Y+5, r1	; 0x05
    3a0a:	1e 82       	std	Y+6, r1	; 0x06
    3a0c:	1f 82       	std	Y+7, r1	; 0x07
    3a0e:	18 86       	std	Y+8, r1	; 0x08

	if( number == 0 ){ LCD_voidSendData('0'); }
    3a10:	89 85       	ldd	r24, Y+9	; 0x09
    3a12:	9a 85       	ldd	r25, Y+10	; 0x0a
    3a14:	89 2b       	or	r24, r25
    3a16:	9b 85       	ldd	r25, Y+11	; 0x0b
    3a18:	89 2b       	or	r24, r25
    3a1a:	9c 85       	ldd	r25, Y+12	; 0x0c
    3a1c:	89 2b       	or	r24, r25
    3a1e:	9d 85       	ldd	r25, Y+13	; 0x0d
    3a20:	89 2b       	or	r24, r25
    3a22:	9e 85       	ldd	r25, Y+14	; 0x0e
    3a24:	89 2b       	or	r24, r25
    3a26:	9f 85       	ldd	r25, Y+15	; 0x0f
    3a28:	89 2b       	or	r24, r25
    3a2a:	98 89       	ldd	r25, Y+16	; 0x10
    3a2c:	89 2b       	or	r24, r25
    3a2e:	88 23       	and	r24, r24
    3a30:	09 f0       	breq	.+2      	; 0x3a34 <LCD_voidSendNumber+0x6c>
    3a32:	62 c3       	rjmp	.+1732   	; 0x40f8 <LCD_voidSendNumber+0x730>
    3a34:	80 e3       	ldi	r24, 0x30	; 48
    3a36:	0e 94 fb 1b 	call	0x37f6	; 0x37f6 <LCD_voidSendData>
    3a3a:	ef c3       	rjmp	.+2014   	; 0x421a <LCD_voidSendNumber+0x852>

	else{

		while( number != 0 ){

			LOC_u64Reversed = ( LOC_u64Reversed * 10 ) + ( number % 10 );
    3a3c:	29 81       	ldd	r18, Y+1	; 0x01
    3a3e:	3a 81       	ldd	r19, Y+2	; 0x02
    3a40:	4b 81       	ldd	r20, Y+3	; 0x03
    3a42:	5c 81       	ldd	r21, Y+4	; 0x04
    3a44:	6d 81       	ldd	r22, Y+5	; 0x05
    3a46:	7e 81       	ldd	r23, Y+6	; 0x06
    3a48:	8f 81       	ldd	r24, Y+7	; 0x07
    3a4a:	98 85       	ldd	r25, Y+8	; 0x08
    3a4c:	a2 2e       	mov	r10, r18
    3a4e:	b3 2e       	mov	r11, r19
    3a50:	c4 2e       	mov	r12, r20
    3a52:	d5 2e       	mov	r13, r21
    3a54:	e6 2e       	mov	r14, r22
    3a56:	f7 2e       	mov	r15, r23
    3a58:	08 2f       	mov	r16, r24
    3a5a:	19 2f       	mov	r17, r25
    3a5c:	2a 2d       	mov	r18, r10
    3a5e:	3b 2d       	mov	r19, r11
    3a60:	4c 2d       	mov	r20, r12
    3a62:	5d 2d       	mov	r21, r13
    3a64:	6e 2d       	mov	r22, r14
    3a66:	7f 2d       	mov	r23, r15
    3a68:	80 2f       	mov	r24, r16
    3a6a:	91 2f       	mov	r25, r17
    3a6c:	01 e0       	ldi	r16, 0x01	; 1
    3a6e:	0e 94 49 00 	call	0x92	; 0x92 <__ashldi3>
    3a72:	29 a3       	std	Y+33, r18	; 0x21
    3a74:	3a a3       	std	Y+34, r19	; 0x22
    3a76:	4b a3       	std	Y+35, r20	; 0x23
    3a78:	5c a3       	std	Y+36, r21	; 0x24
    3a7a:	6d a3       	std	Y+37, r22	; 0x25
    3a7c:	7e a3       	std	Y+38, r23	; 0x26
    3a7e:	8f a3       	std	Y+39, r24	; 0x27
    3a80:	98 a7       	std	Y+40, r25	; 0x28
    3a82:	29 a1       	ldd	r18, Y+33	; 0x21
    3a84:	3a a1       	ldd	r19, Y+34	; 0x22
    3a86:	4b a1       	ldd	r20, Y+35	; 0x23
    3a88:	5c a1       	ldd	r21, Y+36	; 0x24
    3a8a:	6d a1       	ldd	r22, Y+37	; 0x25
    3a8c:	7e a1       	ldd	r23, Y+38	; 0x26
    3a8e:	8f a1       	ldd	r24, Y+39	; 0x27
    3a90:	98 a5       	ldd	r25, Y+40	; 0x28
    3a92:	02 e0       	ldi	r16, 0x02	; 2
    3a94:	0e 94 49 00 	call	0x92	; 0x92 <__ashldi3>
    3a98:	29 a7       	std	Y+41, r18	; 0x29
    3a9a:	3a a7       	std	Y+42, r19	; 0x2a
    3a9c:	4b a7       	std	Y+43, r20	; 0x2b
    3a9e:	5c a7       	std	Y+44, r21	; 0x2c
    3aa0:	6d a7       	std	Y+45, r22	; 0x2d
    3aa2:	7e a7       	std	Y+46, r23	; 0x2e
    3aa4:	8f a7       	std	Y+47, r24	; 0x2f
    3aa6:	98 ab       	std	Y+48, r25	; 0x30
    3aa8:	89 a1       	ldd	r24, Y+33	; 0x21
    3aaa:	99 a5       	ldd	r25, Y+41	; 0x29
    3aac:	89 0f       	add	r24, r25
    3aae:	89 ab       	std	Y+49, r24	; 0x31
    3ab0:	81 e0       	ldi	r24, 0x01	; 1
    3ab2:	89 af       	std	Y+57, r24	; 0x39
    3ab4:	99 a9       	ldd	r25, Y+49	; 0x31
    3ab6:	89 a1       	ldd	r24, Y+33	; 0x21
    3ab8:	98 17       	cp	r25, r24
    3aba:	08 f0       	brcs	.+2      	; 0x3abe <LCD_voidSendNumber+0xf6>
    3abc:	19 ae       	std	Y+57, r1	; 0x39
    3abe:	9a a1       	ldd	r25, Y+34	; 0x22
    3ac0:	8a a5       	ldd	r24, Y+42	; 0x2a
    3ac2:	98 0f       	add	r25, r24
    3ac4:	9a ab       	std	Y+50, r25	; 0x32
    3ac6:	91 e0       	ldi	r25, 0x01	; 1
    3ac8:	9a af       	std	Y+58, r25	; 0x3a
    3aca:	8a a9       	ldd	r24, Y+50	; 0x32
    3acc:	9a a1       	ldd	r25, Y+34	; 0x22
    3ace:	89 17       	cp	r24, r25
    3ad0:	08 f0       	brcs	.+2      	; 0x3ad4 <LCD_voidSendNumber+0x10c>
    3ad2:	1a ae       	std	Y+58, r1	; 0x3a
    3ad4:	89 ad       	ldd	r24, Y+57	; 0x39
    3ad6:	9a a9       	ldd	r25, Y+50	; 0x32
    3ad8:	89 0f       	add	r24, r25
    3ada:	8b af       	std	Y+59, r24	; 0x3b
    3adc:	81 e0       	ldi	r24, 0x01	; 1
    3ade:	8c af       	std	Y+60, r24	; 0x3c
    3ae0:	9b ad       	ldd	r25, Y+59	; 0x3b
    3ae2:	8a a9       	ldd	r24, Y+50	; 0x32
    3ae4:	98 17       	cp	r25, r24
    3ae6:	08 f0       	brcs	.+2      	; 0x3aea <LCD_voidSendNumber+0x122>
    3ae8:	1c ae       	std	Y+60, r1	; 0x3c
    3aea:	9a ad       	ldd	r25, Y+58	; 0x3a
    3aec:	8c ad       	ldd	r24, Y+60	; 0x3c
    3aee:	98 2b       	or	r25, r24
    3af0:	9a af       	std	Y+58, r25	; 0x3a
    3af2:	9b ad       	ldd	r25, Y+59	; 0x3b
    3af4:	9a ab       	std	Y+50, r25	; 0x32
    3af6:	8b a1       	ldd	r24, Y+35	; 0x23
    3af8:	9b a5       	ldd	r25, Y+43	; 0x2b
    3afa:	89 0f       	add	r24, r25
    3afc:	8b ab       	std	Y+51, r24	; 0x33
    3afe:	81 e0       	ldi	r24, 0x01	; 1
    3b00:	8d af       	std	Y+61, r24	; 0x3d
    3b02:	9b a9       	ldd	r25, Y+51	; 0x33
    3b04:	8b a1       	ldd	r24, Y+35	; 0x23
    3b06:	98 17       	cp	r25, r24
    3b08:	08 f0       	brcs	.+2      	; 0x3b0c <LCD_voidSendNumber+0x144>
    3b0a:	1d ae       	std	Y+61, r1	; 0x3d
    3b0c:	9a ad       	ldd	r25, Y+58	; 0x3a
    3b0e:	8b a9       	ldd	r24, Y+51	; 0x33
    3b10:	98 0f       	add	r25, r24
    3b12:	9e af       	std	Y+62, r25	; 0x3e
    3b14:	91 e0       	ldi	r25, 0x01	; 1
    3b16:	9f af       	std	Y+63, r25	; 0x3f
    3b18:	8e ad       	ldd	r24, Y+62	; 0x3e
    3b1a:	9b a9       	ldd	r25, Y+51	; 0x33
    3b1c:	89 17       	cp	r24, r25
    3b1e:	08 f0       	brcs	.+2      	; 0x3b22 <LCD_voidSendNumber+0x15a>
    3b20:	1f ae       	std	Y+63, r1	; 0x3f
    3b22:	8d ad       	ldd	r24, Y+61	; 0x3d
    3b24:	9f ad       	ldd	r25, Y+63	; 0x3f
    3b26:	89 2b       	or	r24, r25
    3b28:	8d af       	std	Y+61, r24	; 0x3d
    3b2a:	8e ad       	ldd	r24, Y+62	; 0x3e
    3b2c:	8b ab       	std	Y+51, r24	; 0x33
    3b2e:	9c a1       	ldd	r25, Y+36	; 0x24
    3b30:	8c a5       	ldd	r24, Y+44	; 0x2c
    3b32:	98 0f       	add	r25, r24
    3b34:	9c ab       	std	Y+52, r25	; 0x34
    3b36:	91 e0       	ldi	r25, 0x01	; 1
    3b38:	21 96       	adiw	r28, 0x01	; 1
    3b3a:	9f af       	std	Y+63, r25	; 0x3f
    3b3c:	21 97       	sbiw	r28, 0x01	; 1
    3b3e:	8c a9       	ldd	r24, Y+52	; 0x34
    3b40:	9c a1       	ldd	r25, Y+36	; 0x24
    3b42:	89 17       	cp	r24, r25
    3b44:	18 f0       	brcs	.+6      	; 0x3b4c <LCD_voidSendNumber+0x184>
    3b46:	21 96       	adiw	r28, 0x01	; 1
    3b48:	1f ae       	std	Y+63, r1	; 0x3f
    3b4a:	21 97       	sbiw	r28, 0x01	; 1
    3b4c:	8d ad       	ldd	r24, Y+61	; 0x3d
    3b4e:	9c a9       	ldd	r25, Y+52	; 0x34
    3b50:	89 0f       	add	r24, r25
    3b52:	22 96       	adiw	r28, 0x02	; 2
    3b54:	8f af       	std	Y+63, r24	; 0x3f
    3b56:	22 97       	sbiw	r28, 0x02	; 2
    3b58:	81 e0       	ldi	r24, 0x01	; 1
    3b5a:	23 96       	adiw	r28, 0x03	; 3
    3b5c:	8f af       	std	Y+63, r24	; 0x3f
    3b5e:	23 97       	sbiw	r28, 0x03	; 3
    3b60:	22 96       	adiw	r28, 0x02	; 2
    3b62:	9f ad       	ldd	r25, Y+63	; 0x3f
    3b64:	22 97       	sbiw	r28, 0x02	; 2
    3b66:	8c a9       	ldd	r24, Y+52	; 0x34
    3b68:	98 17       	cp	r25, r24
    3b6a:	18 f0       	brcs	.+6      	; 0x3b72 <LCD_voidSendNumber+0x1aa>
    3b6c:	23 96       	adiw	r28, 0x03	; 3
    3b6e:	1f ae       	std	Y+63, r1	; 0x3f
    3b70:	23 97       	sbiw	r28, 0x03	; 3
    3b72:	21 96       	adiw	r28, 0x01	; 1
    3b74:	9f ad       	ldd	r25, Y+63	; 0x3f
    3b76:	21 97       	sbiw	r28, 0x01	; 1
    3b78:	23 96       	adiw	r28, 0x03	; 3
    3b7a:	8f ad       	ldd	r24, Y+63	; 0x3f
    3b7c:	23 97       	sbiw	r28, 0x03	; 3
    3b7e:	98 2b       	or	r25, r24
    3b80:	21 96       	adiw	r28, 0x01	; 1
    3b82:	9f af       	std	Y+63, r25	; 0x3f
    3b84:	21 97       	sbiw	r28, 0x01	; 1
    3b86:	22 96       	adiw	r28, 0x02	; 2
    3b88:	9f ad       	ldd	r25, Y+63	; 0x3f
    3b8a:	22 97       	sbiw	r28, 0x02	; 2
    3b8c:	9c ab       	std	Y+52, r25	; 0x34
    3b8e:	8d a1       	ldd	r24, Y+37	; 0x25
    3b90:	9d a5       	ldd	r25, Y+45	; 0x2d
    3b92:	89 0f       	add	r24, r25
    3b94:	8d ab       	std	Y+53, r24	; 0x35
    3b96:	81 e0       	ldi	r24, 0x01	; 1
    3b98:	24 96       	adiw	r28, 0x04	; 4
    3b9a:	8f af       	std	Y+63, r24	; 0x3f
    3b9c:	24 97       	sbiw	r28, 0x04	; 4
    3b9e:	9d a9       	ldd	r25, Y+53	; 0x35
    3ba0:	8d a1       	ldd	r24, Y+37	; 0x25
    3ba2:	98 17       	cp	r25, r24
    3ba4:	18 f0       	brcs	.+6      	; 0x3bac <LCD_voidSendNumber+0x1e4>
    3ba6:	24 96       	adiw	r28, 0x04	; 4
    3ba8:	1f ae       	std	Y+63, r1	; 0x3f
    3baa:	24 97       	sbiw	r28, 0x04	; 4
    3bac:	21 96       	adiw	r28, 0x01	; 1
    3bae:	9f ad       	ldd	r25, Y+63	; 0x3f
    3bb0:	21 97       	sbiw	r28, 0x01	; 1
    3bb2:	8d a9       	ldd	r24, Y+53	; 0x35
    3bb4:	98 0f       	add	r25, r24
    3bb6:	25 96       	adiw	r28, 0x05	; 5
    3bb8:	9f af       	std	Y+63, r25	; 0x3f
    3bba:	25 97       	sbiw	r28, 0x05	; 5
    3bbc:	91 e0       	ldi	r25, 0x01	; 1
    3bbe:	26 96       	adiw	r28, 0x06	; 6
    3bc0:	9f af       	std	Y+63, r25	; 0x3f
    3bc2:	26 97       	sbiw	r28, 0x06	; 6
    3bc4:	25 96       	adiw	r28, 0x05	; 5
    3bc6:	8f ad       	ldd	r24, Y+63	; 0x3f
    3bc8:	25 97       	sbiw	r28, 0x05	; 5
    3bca:	9d a9       	ldd	r25, Y+53	; 0x35
    3bcc:	89 17       	cp	r24, r25
    3bce:	18 f0       	brcs	.+6      	; 0x3bd6 <LCD_voidSendNumber+0x20e>
    3bd0:	26 96       	adiw	r28, 0x06	; 6
    3bd2:	1f ae       	std	Y+63, r1	; 0x3f
    3bd4:	26 97       	sbiw	r28, 0x06	; 6
    3bd6:	24 96       	adiw	r28, 0x04	; 4
    3bd8:	8f ad       	ldd	r24, Y+63	; 0x3f
    3bda:	24 97       	sbiw	r28, 0x04	; 4
    3bdc:	26 96       	adiw	r28, 0x06	; 6
    3bde:	9f ad       	ldd	r25, Y+63	; 0x3f
    3be0:	26 97       	sbiw	r28, 0x06	; 6
    3be2:	89 2b       	or	r24, r25
    3be4:	24 96       	adiw	r28, 0x04	; 4
    3be6:	8f af       	std	Y+63, r24	; 0x3f
    3be8:	24 97       	sbiw	r28, 0x04	; 4
    3bea:	25 96       	adiw	r28, 0x05	; 5
    3bec:	8f ad       	ldd	r24, Y+63	; 0x3f
    3bee:	25 97       	sbiw	r28, 0x05	; 5
    3bf0:	8d ab       	std	Y+53, r24	; 0x35
    3bf2:	9e a1       	ldd	r25, Y+38	; 0x26
    3bf4:	8e a5       	ldd	r24, Y+46	; 0x2e
    3bf6:	98 0f       	add	r25, r24
    3bf8:	9e ab       	std	Y+54, r25	; 0x36
    3bfa:	91 e0       	ldi	r25, 0x01	; 1
    3bfc:	27 96       	adiw	r28, 0x07	; 7
    3bfe:	9f af       	std	Y+63, r25	; 0x3f
    3c00:	27 97       	sbiw	r28, 0x07	; 7
    3c02:	8e a9       	ldd	r24, Y+54	; 0x36
    3c04:	9e a1       	ldd	r25, Y+38	; 0x26
    3c06:	89 17       	cp	r24, r25
    3c08:	18 f0       	brcs	.+6      	; 0x3c10 <LCD_voidSendNumber+0x248>
    3c0a:	27 96       	adiw	r28, 0x07	; 7
    3c0c:	1f ae       	std	Y+63, r1	; 0x3f
    3c0e:	27 97       	sbiw	r28, 0x07	; 7
    3c10:	24 96       	adiw	r28, 0x04	; 4
    3c12:	8f ad       	ldd	r24, Y+63	; 0x3f
    3c14:	24 97       	sbiw	r28, 0x04	; 4
    3c16:	9e a9       	ldd	r25, Y+54	; 0x36
    3c18:	89 0f       	add	r24, r25
    3c1a:	28 96       	adiw	r28, 0x08	; 8
    3c1c:	8f af       	std	Y+63, r24	; 0x3f
    3c1e:	28 97       	sbiw	r28, 0x08	; 8
    3c20:	81 e0       	ldi	r24, 0x01	; 1
    3c22:	29 96       	adiw	r28, 0x09	; 9
    3c24:	8f af       	std	Y+63, r24	; 0x3f
    3c26:	29 97       	sbiw	r28, 0x09	; 9
    3c28:	28 96       	adiw	r28, 0x08	; 8
    3c2a:	9f ad       	ldd	r25, Y+63	; 0x3f
    3c2c:	28 97       	sbiw	r28, 0x08	; 8
    3c2e:	8e a9       	ldd	r24, Y+54	; 0x36
    3c30:	98 17       	cp	r25, r24
    3c32:	18 f0       	brcs	.+6      	; 0x3c3a <LCD_voidSendNumber+0x272>
    3c34:	29 96       	adiw	r28, 0x09	; 9
    3c36:	1f ae       	std	Y+63, r1	; 0x3f
    3c38:	29 97       	sbiw	r28, 0x09	; 9
    3c3a:	27 96       	adiw	r28, 0x07	; 7
    3c3c:	9f ad       	ldd	r25, Y+63	; 0x3f
    3c3e:	27 97       	sbiw	r28, 0x07	; 7
    3c40:	29 96       	adiw	r28, 0x09	; 9
    3c42:	8f ad       	ldd	r24, Y+63	; 0x3f
    3c44:	29 97       	sbiw	r28, 0x09	; 9
    3c46:	98 2b       	or	r25, r24
    3c48:	27 96       	adiw	r28, 0x07	; 7
    3c4a:	9f af       	std	Y+63, r25	; 0x3f
    3c4c:	27 97       	sbiw	r28, 0x07	; 7
    3c4e:	28 96       	adiw	r28, 0x08	; 8
    3c50:	9f ad       	ldd	r25, Y+63	; 0x3f
    3c52:	28 97       	sbiw	r28, 0x08	; 8
    3c54:	9e ab       	std	Y+54, r25	; 0x36
    3c56:	8f a1       	ldd	r24, Y+39	; 0x27
    3c58:	9f a5       	ldd	r25, Y+47	; 0x2f
    3c5a:	89 0f       	add	r24, r25
    3c5c:	8f ab       	std	Y+55, r24	; 0x37
    3c5e:	81 e0       	ldi	r24, 0x01	; 1
    3c60:	2a 96       	adiw	r28, 0x0a	; 10
    3c62:	8f af       	std	Y+63, r24	; 0x3f
    3c64:	2a 97       	sbiw	r28, 0x0a	; 10
    3c66:	9f a9       	ldd	r25, Y+55	; 0x37
    3c68:	8f a1       	ldd	r24, Y+39	; 0x27
    3c6a:	98 17       	cp	r25, r24
    3c6c:	18 f0       	brcs	.+6      	; 0x3c74 <LCD_voidSendNumber+0x2ac>
    3c6e:	2a 96       	adiw	r28, 0x0a	; 10
    3c70:	1f ae       	std	Y+63, r1	; 0x3f
    3c72:	2a 97       	sbiw	r28, 0x0a	; 10
    3c74:	27 96       	adiw	r28, 0x07	; 7
    3c76:	9f ad       	ldd	r25, Y+63	; 0x3f
    3c78:	27 97       	sbiw	r28, 0x07	; 7
    3c7a:	8f a9       	ldd	r24, Y+55	; 0x37
    3c7c:	98 0f       	add	r25, r24
    3c7e:	2b 96       	adiw	r28, 0x0b	; 11
    3c80:	9f af       	std	Y+63, r25	; 0x3f
    3c82:	2b 97       	sbiw	r28, 0x0b	; 11
    3c84:	91 e0       	ldi	r25, 0x01	; 1
    3c86:	2c 96       	adiw	r28, 0x0c	; 12
    3c88:	9f af       	std	Y+63, r25	; 0x3f
    3c8a:	2c 97       	sbiw	r28, 0x0c	; 12
    3c8c:	2b 96       	adiw	r28, 0x0b	; 11
    3c8e:	8f ad       	ldd	r24, Y+63	; 0x3f
    3c90:	2b 97       	sbiw	r28, 0x0b	; 11
    3c92:	9f a9       	ldd	r25, Y+55	; 0x37
    3c94:	89 17       	cp	r24, r25
    3c96:	18 f0       	brcs	.+6      	; 0x3c9e <LCD_voidSendNumber+0x2d6>
    3c98:	2c 96       	adiw	r28, 0x0c	; 12
    3c9a:	1f ae       	std	Y+63, r1	; 0x3f
    3c9c:	2c 97       	sbiw	r28, 0x0c	; 12
    3c9e:	2a 96       	adiw	r28, 0x0a	; 10
    3ca0:	8f ad       	ldd	r24, Y+63	; 0x3f
    3ca2:	2a 97       	sbiw	r28, 0x0a	; 10
    3ca4:	2c 96       	adiw	r28, 0x0c	; 12
    3ca6:	9f ad       	ldd	r25, Y+63	; 0x3f
    3ca8:	2c 97       	sbiw	r28, 0x0c	; 12
    3caa:	89 2b       	or	r24, r25
    3cac:	2a 96       	adiw	r28, 0x0a	; 10
    3cae:	8f af       	std	Y+63, r24	; 0x3f
    3cb0:	2a 97       	sbiw	r28, 0x0a	; 10
    3cb2:	2b 96       	adiw	r28, 0x0b	; 11
    3cb4:	8f ad       	ldd	r24, Y+63	; 0x3f
    3cb6:	2b 97       	sbiw	r28, 0x0b	; 11
    3cb8:	8f ab       	std	Y+55, r24	; 0x37
    3cba:	98 a5       	ldd	r25, Y+40	; 0x28
    3cbc:	88 a9       	ldd	r24, Y+48	; 0x30
    3cbe:	98 0f       	add	r25, r24
    3cc0:	98 af       	std	Y+56, r25	; 0x38
    3cc2:	2a 96       	adiw	r28, 0x0a	; 10
    3cc4:	8f ad       	ldd	r24, Y+63	; 0x3f
    3cc6:	2a 97       	sbiw	r28, 0x0a	; 10
    3cc8:	98 ad       	ldd	r25, Y+56	; 0x38
    3cca:	89 0f       	add	r24, r25
    3ccc:	88 af       	std	Y+56, r24	; 0x38
    3cce:	89 a9       	ldd	r24, Y+49	; 0x31
    3cd0:	89 8f       	std	Y+25, r24	; 0x19
    3cd2:	9a a9       	ldd	r25, Y+50	; 0x32
    3cd4:	9a 8f       	std	Y+26, r25	; 0x1a
    3cd6:	8b a9       	ldd	r24, Y+51	; 0x33
    3cd8:	8b 8f       	std	Y+27, r24	; 0x1b
    3cda:	9c a9       	ldd	r25, Y+52	; 0x34
    3cdc:	9c 8f       	std	Y+28, r25	; 0x1c
    3cde:	8d a9       	ldd	r24, Y+53	; 0x35
    3ce0:	8d 8f       	std	Y+29, r24	; 0x1d
    3ce2:	9e a9       	ldd	r25, Y+54	; 0x36
    3ce4:	9e 8f       	std	Y+30, r25	; 0x1e
    3ce6:	8f a9       	ldd	r24, Y+55	; 0x37
    3ce8:	8f 8f       	std	Y+31, r24	; 0x1f
    3cea:	98 ad       	ldd	r25, Y+56	; 0x38
    3cec:	98 a3       	std	Y+32, r25	; 0x20
    3cee:	a9 84       	ldd	r10, Y+9	; 0x09
    3cf0:	ba 84       	ldd	r11, Y+10	; 0x0a
    3cf2:	cb 84       	ldd	r12, Y+11	; 0x0b
    3cf4:	dc 84       	ldd	r13, Y+12	; 0x0c
    3cf6:	ed 84       	ldd	r14, Y+13	; 0x0d
    3cf8:	fe 84       	ldd	r15, Y+14	; 0x0e
    3cfa:	0f 85       	ldd	r16, Y+15	; 0x0f
    3cfc:	18 89       	ldd	r17, Y+16	; 0x10
    3cfe:	2a 2d       	mov	r18, r10
    3d00:	3b 2d       	mov	r19, r11
    3d02:	4c 2d       	mov	r20, r12
    3d04:	5d 2d       	mov	r21, r13
    3d06:	6e 2d       	mov	r22, r14
    3d08:	7f 2d       	mov	r23, r15
    3d0a:	80 2f       	mov	r24, r16
    3d0c:	91 2f       	mov	r25, r17
    3d0e:	0f 2e       	mov	r0, r31
    3d10:	fa e0       	ldi	r31, 0x0A	; 10
    3d12:	af 2e       	mov	r10, r31
    3d14:	f0 2d       	mov	r31, r0
    3d16:	bb 24       	eor	r11, r11
    3d18:	cc 24       	eor	r12, r12
    3d1a:	dd 24       	eor	r13, r13
    3d1c:	ee 24       	eor	r14, r14
    3d1e:	ff 24       	eor	r15, r15
    3d20:	00 e0       	ldi	r16, 0x00	; 0
    3d22:	10 e0       	ldi	r17, 0x00	; 0
    3d24:	0e 94 11 08 	call	0x1022	; 0x1022 <__umoddi3>
    3d28:	a2 2e       	mov	r10, r18
    3d2a:	b3 2e       	mov	r11, r19
    3d2c:	c4 2e       	mov	r12, r20
    3d2e:	d5 2e       	mov	r13, r21
    3d30:	e6 2e       	mov	r14, r22
    3d32:	f7 2e       	mov	r15, r23
    3d34:	08 2f       	mov	r16, r24
    3d36:	19 2f       	mov	r17, r25
    3d38:	a9 8a       	std	Y+17, r10	; 0x11
    3d3a:	ba 8a       	std	Y+18, r11	; 0x12
    3d3c:	cb 8a       	std	Y+19, r12	; 0x13
    3d3e:	dc 8a       	std	Y+20, r13	; 0x14
    3d40:	ed 8a       	std	Y+21, r14	; 0x15
    3d42:	fe 8a       	std	Y+22, r15	; 0x16
    3d44:	0f 8b       	std	Y+23, r16	; 0x17
    3d46:	18 8f       	std	Y+24, r17	; 0x18
    3d48:	89 8d       	ldd	r24, Y+25	; 0x19
    3d4a:	99 89       	ldd	r25, Y+17	; 0x11
    3d4c:	89 0f       	add	r24, r25
    3d4e:	2d 96       	adiw	r28, 0x0d	; 13
    3d50:	8f af       	std	Y+63, r24	; 0x3f
    3d52:	2d 97       	sbiw	r28, 0x0d	; 13
    3d54:	81 e0       	ldi	r24, 0x01	; 1
    3d56:	65 96       	adiw	r28, 0x15	; 21
    3d58:	8f af       	std	Y+63, r24	; 0x3f
    3d5a:	65 97       	sbiw	r28, 0x15	; 21
    3d5c:	2d 96       	adiw	r28, 0x0d	; 13
    3d5e:	9f ad       	ldd	r25, Y+63	; 0x3f
    3d60:	2d 97       	sbiw	r28, 0x0d	; 13
    3d62:	89 8d       	ldd	r24, Y+25	; 0x19
    3d64:	98 17       	cp	r25, r24
    3d66:	18 f0       	brcs	.+6      	; 0x3d6e <LCD_voidSendNumber+0x3a6>
    3d68:	65 96       	adiw	r28, 0x15	; 21
    3d6a:	1f ae       	std	Y+63, r1	; 0x3f
    3d6c:	65 97       	sbiw	r28, 0x15	; 21
    3d6e:	9a 8d       	ldd	r25, Y+26	; 0x1a
    3d70:	8a 89       	ldd	r24, Y+18	; 0x12
    3d72:	98 0f       	add	r25, r24
    3d74:	2e 96       	adiw	r28, 0x0e	; 14
    3d76:	9f af       	std	Y+63, r25	; 0x3f
    3d78:	2e 97       	sbiw	r28, 0x0e	; 14
    3d7a:	91 e0       	ldi	r25, 0x01	; 1
    3d7c:	66 96       	adiw	r28, 0x16	; 22
    3d7e:	9f af       	std	Y+63, r25	; 0x3f
    3d80:	66 97       	sbiw	r28, 0x16	; 22
    3d82:	2e 96       	adiw	r28, 0x0e	; 14
    3d84:	8f ad       	ldd	r24, Y+63	; 0x3f
    3d86:	2e 97       	sbiw	r28, 0x0e	; 14
    3d88:	9a 8d       	ldd	r25, Y+26	; 0x1a
    3d8a:	89 17       	cp	r24, r25
    3d8c:	18 f0       	brcs	.+6      	; 0x3d94 <LCD_voidSendNumber+0x3cc>
    3d8e:	66 96       	adiw	r28, 0x16	; 22
    3d90:	1f ae       	std	Y+63, r1	; 0x3f
    3d92:	66 97       	sbiw	r28, 0x16	; 22
    3d94:	65 96       	adiw	r28, 0x15	; 21
    3d96:	8f ad       	ldd	r24, Y+63	; 0x3f
    3d98:	65 97       	sbiw	r28, 0x15	; 21
    3d9a:	2e 96       	adiw	r28, 0x0e	; 14
    3d9c:	9f ad       	ldd	r25, Y+63	; 0x3f
    3d9e:	2e 97       	sbiw	r28, 0x0e	; 14
    3da0:	89 0f       	add	r24, r25
    3da2:	67 96       	adiw	r28, 0x17	; 23
    3da4:	8f af       	std	Y+63, r24	; 0x3f
    3da6:	67 97       	sbiw	r28, 0x17	; 23
    3da8:	81 e0       	ldi	r24, 0x01	; 1
    3daa:	68 96       	adiw	r28, 0x18	; 24
    3dac:	8f af       	std	Y+63, r24	; 0x3f
    3dae:	68 97       	sbiw	r28, 0x18	; 24
    3db0:	67 96       	adiw	r28, 0x17	; 23
    3db2:	9f ad       	ldd	r25, Y+63	; 0x3f
    3db4:	67 97       	sbiw	r28, 0x17	; 23
    3db6:	2e 96       	adiw	r28, 0x0e	; 14
    3db8:	8f ad       	ldd	r24, Y+63	; 0x3f
    3dba:	2e 97       	sbiw	r28, 0x0e	; 14
    3dbc:	98 17       	cp	r25, r24
    3dbe:	18 f0       	brcs	.+6      	; 0x3dc6 <LCD_voidSendNumber+0x3fe>
    3dc0:	68 96       	adiw	r28, 0x18	; 24
    3dc2:	1f ae       	std	Y+63, r1	; 0x3f
    3dc4:	68 97       	sbiw	r28, 0x18	; 24
    3dc6:	66 96       	adiw	r28, 0x16	; 22
    3dc8:	9f ad       	ldd	r25, Y+63	; 0x3f
    3dca:	66 97       	sbiw	r28, 0x16	; 22
    3dcc:	68 96       	adiw	r28, 0x18	; 24
    3dce:	8f ad       	ldd	r24, Y+63	; 0x3f
    3dd0:	68 97       	sbiw	r28, 0x18	; 24
    3dd2:	98 2b       	or	r25, r24
    3dd4:	66 96       	adiw	r28, 0x16	; 22
    3dd6:	9f af       	std	Y+63, r25	; 0x3f
    3dd8:	66 97       	sbiw	r28, 0x16	; 22
    3dda:	67 96       	adiw	r28, 0x17	; 23
    3ddc:	9f ad       	ldd	r25, Y+63	; 0x3f
    3dde:	67 97       	sbiw	r28, 0x17	; 23
    3de0:	2e 96       	adiw	r28, 0x0e	; 14
    3de2:	9f af       	std	Y+63, r25	; 0x3f
    3de4:	2e 97       	sbiw	r28, 0x0e	; 14
    3de6:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3de8:	9b 89       	ldd	r25, Y+19	; 0x13
    3dea:	89 0f       	add	r24, r25
    3dec:	2f 96       	adiw	r28, 0x0f	; 15
    3dee:	8f af       	std	Y+63, r24	; 0x3f
    3df0:	2f 97       	sbiw	r28, 0x0f	; 15
    3df2:	81 e0       	ldi	r24, 0x01	; 1
    3df4:	69 96       	adiw	r28, 0x19	; 25
    3df6:	8f af       	std	Y+63, r24	; 0x3f
    3df8:	69 97       	sbiw	r28, 0x19	; 25
    3dfa:	2f 96       	adiw	r28, 0x0f	; 15
    3dfc:	9f ad       	ldd	r25, Y+63	; 0x3f
    3dfe:	2f 97       	sbiw	r28, 0x0f	; 15
    3e00:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3e02:	98 17       	cp	r25, r24
    3e04:	18 f0       	brcs	.+6      	; 0x3e0c <LCD_voidSendNumber+0x444>
    3e06:	69 96       	adiw	r28, 0x19	; 25
    3e08:	1f ae       	std	Y+63, r1	; 0x3f
    3e0a:	69 97       	sbiw	r28, 0x19	; 25
    3e0c:	66 96       	adiw	r28, 0x16	; 22
    3e0e:	9f ad       	ldd	r25, Y+63	; 0x3f
    3e10:	66 97       	sbiw	r28, 0x16	; 22
    3e12:	2f 96       	adiw	r28, 0x0f	; 15
    3e14:	8f ad       	ldd	r24, Y+63	; 0x3f
    3e16:	2f 97       	sbiw	r28, 0x0f	; 15
    3e18:	98 0f       	add	r25, r24
    3e1a:	6a 96       	adiw	r28, 0x1a	; 26
    3e1c:	9f af       	std	Y+63, r25	; 0x3f
    3e1e:	6a 97       	sbiw	r28, 0x1a	; 26
    3e20:	91 e0       	ldi	r25, 0x01	; 1
    3e22:	6b 96       	adiw	r28, 0x1b	; 27
    3e24:	9f af       	std	Y+63, r25	; 0x3f
    3e26:	6b 97       	sbiw	r28, 0x1b	; 27
    3e28:	6a 96       	adiw	r28, 0x1a	; 26
    3e2a:	8f ad       	ldd	r24, Y+63	; 0x3f
    3e2c:	6a 97       	sbiw	r28, 0x1a	; 26
    3e2e:	2f 96       	adiw	r28, 0x0f	; 15
    3e30:	9f ad       	ldd	r25, Y+63	; 0x3f
    3e32:	2f 97       	sbiw	r28, 0x0f	; 15
    3e34:	89 17       	cp	r24, r25
    3e36:	18 f0       	brcs	.+6      	; 0x3e3e <LCD_voidSendNumber+0x476>
    3e38:	6b 96       	adiw	r28, 0x1b	; 27
    3e3a:	1f ae       	std	Y+63, r1	; 0x3f
    3e3c:	6b 97       	sbiw	r28, 0x1b	; 27
    3e3e:	69 96       	adiw	r28, 0x19	; 25
    3e40:	8f ad       	ldd	r24, Y+63	; 0x3f
    3e42:	69 97       	sbiw	r28, 0x19	; 25
    3e44:	6b 96       	adiw	r28, 0x1b	; 27
    3e46:	9f ad       	ldd	r25, Y+63	; 0x3f
    3e48:	6b 97       	sbiw	r28, 0x1b	; 27
    3e4a:	89 2b       	or	r24, r25
    3e4c:	69 96       	adiw	r28, 0x19	; 25
    3e4e:	8f af       	std	Y+63, r24	; 0x3f
    3e50:	69 97       	sbiw	r28, 0x19	; 25
    3e52:	6a 96       	adiw	r28, 0x1a	; 26
    3e54:	8f ad       	ldd	r24, Y+63	; 0x3f
    3e56:	6a 97       	sbiw	r28, 0x1a	; 26
    3e58:	2f 96       	adiw	r28, 0x0f	; 15
    3e5a:	8f af       	std	Y+63, r24	; 0x3f
    3e5c:	2f 97       	sbiw	r28, 0x0f	; 15
    3e5e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3e60:	8c 89       	ldd	r24, Y+20	; 0x14
    3e62:	98 0f       	add	r25, r24
    3e64:	60 96       	adiw	r28, 0x10	; 16
    3e66:	9f af       	std	Y+63, r25	; 0x3f
    3e68:	60 97       	sbiw	r28, 0x10	; 16
    3e6a:	91 e0       	ldi	r25, 0x01	; 1
    3e6c:	6c 96       	adiw	r28, 0x1c	; 28
    3e6e:	9f af       	std	Y+63, r25	; 0x3f
    3e70:	6c 97       	sbiw	r28, 0x1c	; 28
    3e72:	60 96       	adiw	r28, 0x10	; 16
    3e74:	8f ad       	ldd	r24, Y+63	; 0x3f
    3e76:	60 97       	sbiw	r28, 0x10	; 16
    3e78:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3e7a:	89 17       	cp	r24, r25
    3e7c:	18 f0       	brcs	.+6      	; 0x3e84 <LCD_voidSendNumber+0x4bc>
    3e7e:	6c 96       	adiw	r28, 0x1c	; 28
    3e80:	1f ae       	std	Y+63, r1	; 0x3f
    3e82:	6c 97       	sbiw	r28, 0x1c	; 28
    3e84:	69 96       	adiw	r28, 0x19	; 25
    3e86:	8f ad       	ldd	r24, Y+63	; 0x3f
    3e88:	69 97       	sbiw	r28, 0x19	; 25
    3e8a:	60 96       	adiw	r28, 0x10	; 16
    3e8c:	9f ad       	ldd	r25, Y+63	; 0x3f
    3e8e:	60 97       	sbiw	r28, 0x10	; 16
    3e90:	89 0f       	add	r24, r25
    3e92:	6d 96       	adiw	r28, 0x1d	; 29
    3e94:	8f af       	std	Y+63, r24	; 0x3f
    3e96:	6d 97       	sbiw	r28, 0x1d	; 29
    3e98:	81 e0       	ldi	r24, 0x01	; 1
    3e9a:	6e 96       	adiw	r28, 0x1e	; 30
    3e9c:	8f af       	std	Y+63, r24	; 0x3f
    3e9e:	6e 97       	sbiw	r28, 0x1e	; 30
    3ea0:	6d 96       	adiw	r28, 0x1d	; 29
    3ea2:	9f ad       	ldd	r25, Y+63	; 0x3f
    3ea4:	6d 97       	sbiw	r28, 0x1d	; 29
    3ea6:	60 96       	adiw	r28, 0x10	; 16
    3ea8:	8f ad       	ldd	r24, Y+63	; 0x3f
    3eaa:	60 97       	sbiw	r28, 0x10	; 16
    3eac:	98 17       	cp	r25, r24
    3eae:	18 f0       	brcs	.+6      	; 0x3eb6 <LCD_voidSendNumber+0x4ee>
    3eb0:	6e 96       	adiw	r28, 0x1e	; 30
    3eb2:	1f ae       	std	Y+63, r1	; 0x3f
    3eb4:	6e 97       	sbiw	r28, 0x1e	; 30
    3eb6:	6c 96       	adiw	r28, 0x1c	; 28
    3eb8:	9f ad       	ldd	r25, Y+63	; 0x3f
    3eba:	6c 97       	sbiw	r28, 0x1c	; 28
    3ebc:	6e 96       	adiw	r28, 0x1e	; 30
    3ebe:	8f ad       	ldd	r24, Y+63	; 0x3f
    3ec0:	6e 97       	sbiw	r28, 0x1e	; 30
    3ec2:	98 2b       	or	r25, r24
    3ec4:	6c 96       	adiw	r28, 0x1c	; 28
    3ec6:	9f af       	std	Y+63, r25	; 0x3f
    3ec8:	6c 97       	sbiw	r28, 0x1c	; 28
    3eca:	6d 96       	adiw	r28, 0x1d	; 29
    3ecc:	9f ad       	ldd	r25, Y+63	; 0x3f
    3ece:	6d 97       	sbiw	r28, 0x1d	; 29
    3ed0:	60 96       	adiw	r28, 0x10	; 16
    3ed2:	9f af       	std	Y+63, r25	; 0x3f
    3ed4:	60 97       	sbiw	r28, 0x10	; 16
    3ed6:	8d 8d       	ldd	r24, Y+29	; 0x1d
    3ed8:	9d 89       	ldd	r25, Y+21	; 0x15
    3eda:	89 0f       	add	r24, r25
    3edc:	61 96       	adiw	r28, 0x11	; 17
    3ede:	8f af       	std	Y+63, r24	; 0x3f
    3ee0:	61 97       	sbiw	r28, 0x11	; 17
    3ee2:	81 e0       	ldi	r24, 0x01	; 1
    3ee4:	6f 96       	adiw	r28, 0x1f	; 31
    3ee6:	8f af       	std	Y+63, r24	; 0x3f
    3ee8:	6f 97       	sbiw	r28, 0x1f	; 31
    3eea:	61 96       	adiw	r28, 0x11	; 17
    3eec:	9f ad       	ldd	r25, Y+63	; 0x3f
    3eee:	61 97       	sbiw	r28, 0x11	; 17
    3ef0:	8d 8d       	ldd	r24, Y+29	; 0x1d
    3ef2:	98 17       	cp	r25, r24
    3ef4:	18 f0       	brcs	.+6      	; 0x3efc <LCD_voidSendNumber+0x534>
    3ef6:	6f 96       	adiw	r28, 0x1f	; 31
    3ef8:	1f ae       	std	Y+63, r1	; 0x3f
    3efa:	6f 97       	sbiw	r28, 0x1f	; 31
    3efc:	6c 96       	adiw	r28, 0x1c	; 28
    3efe:	9f ad       	ldd	r25, Y+63	; 0x3f
    3f00:	6c 97       	sbiw	r28, 0x1c	; 28
    3f02:	61 96       	adiw	r28, 0x11	; 17
    3f04:	8f ad       	ldd	r24, Y+63	; 0x3f
    3f06:	61 97       	sbiw	r28, 0x11	; 17
    3f08:	98 0f       	add	r25, r24
    3f0a:	a0 96       	adiw	r28, 0x20	; 32
    3f0c:	9f af       	std	Y+63, r25	; 0x3f
    3f0e:	a0 97       	sbiw	r28, 0x20	; 32
    3f10:	91 e0       	ldi	r25, 0x01	; 1
    3f12:	a1 96       	adiw	r28, 0x21	; 33
    3f14:	9f af       	std	Y+63, r25	; 0x3f
    3f16:	a1 97       	sbiw	r28, 0x21	; 33
    3f18:	a0 96       	adiw	r28, 0x20	; 32
    3f1a:	8f ad       	ldd	r24, Y+63	; 0x3f
    3f1c:	a0 97       	sbiw	r28, 0x20	; 32
    3f1e:	61 96       	adiw	r28, 0x11	; 17
    3f20:	9f ad       	ldd	r25, Y+63	; 0x3f
    3f22:	61 97       	sbiw	r28, 0x11	; 17
    3f24:	89 17       	cp	r24, r25
    3f26:	18 f0       	brcs	.+6      	; 0x3f2e <LCD_voidSendNumber+0x566>
    3f28:	a1 96       	adiw	r28, 0x21	; 33
    3f2a:	1f ae       	std	Y+63, r1	; 0x3f
    3f2c:	a1 97       	sbiw	r28, 0x21	; 33
    3f2e:	6f 96       	adiw	r28, 0x1f	; 31
    3f30:	8f ad       	ldd	r24, Y+63	; 0x3f
    3f32:	6f 97       	sbiw	r28, 0x1f	; 31
    3f34:	a1 96       	adiw	r28, 0x21	; 33
    3f36:	9f ad       	ldd	r25, Y+63	; 0x3f
    3f38:	a1 97       	sbiw	r28, 0x21	; 33
    3f3a:	89 2b       	or	r24, r25
    3f3c:	6f 96       	adiw	r28, 0x1f	; 31
    3f3e:	8f af       	std	Y+63, r24	; 0x3f
    3f40:	6f 97       	sbiw	r28, 0x1f	; 31
    3f42:	a0 96       	adiw	r28, 0x20	; 32
    3f44:	8f ad       	ldd	r24, Y+63	; 0x3f
    3f46:	a0 97       	sbiw	r28, 0x20	; 32
    3f48:	61 96       	adiw	r28, 0x11	; 17
    3f4a:	8f af       	std	Y+63, r24	; 0x3f
    3f4c:	61 97       	sbiw	r28, 0x11	; 17
    3f4e:	9e 8d       	ldd	r25, Y+30	; 0x1e
    3f50:	8e 89       	ldd	r24, Y+22	; 0x16
    3f52:	98 0f       	add	r25, r24
    3f54:	62 96       	adiw	r28, 0x12	; 18
    3f56:	9f af       	std	Y+63, r25	; 0x3f
    3f58:	62 97       	sbiw	r28, 0x12	; 18
    3f5a:	91 e0       	ldi	r25, 0x01	; 1
    3f5c:	a2 96       	adiw	r28, 0x22	; 34
    3f5e:	9f af       	std	Y+63, r25	; 0x3f
    3f60:	a2 97       	sbiw	r28, 0x22	; 34
    3f62:	62 96       	adiw	r28, 0x12	; 18
    3f64:	8f ad       	ldd	r24, Y+63	; 0x3f
    3f66:	62 97       	sbiw	r28, 0x12	; 18
    3f68:	9e 8d       	ldd	r25, Y+30	; 0x1e
    3f6a:	89 17       	cp	r24, r25
    3f6c:	18 f0       	brcs	.+6      	; 0x3f74 <LCD_voidSendNumber+0x5ac>
    3f6e:	a2 96       	adiw	r28, 0x22	; 34
    3f70:	1f ae       	std	Y+63, r1	; 0x3f
    3f72:	a2 97       	sbiw	r28, 0x22	; 34
    3f74:	6f 96       	adiw	r28, 0x1f	; 31
    3f76:	8f ad       	ldd	r24, Y+63	; 0x3f
    3f78:	6f 97       	sbiw	r28, 0x1f	; 31
    3f7a:	62 96       	adiw	r28, 0x12	; 18
    3f7c:	9f ad       	ldd	r25, Y+63	; 0x3f
    3f7e:	62 97       	sbiw	r28, 0x12	; 18
    3f80:	89 0f       	add	r24, r25
    3f82:	a3 96       	adiw	r28, 0x23	; 35
    3f84:	8f af       	std	Y+63, r24	; 0x3f
    3f86:	a3 97       	sbiw	r28, 0x23	; 35
    3f88:	81 e0       	ldi	r24, 0x01	; 1
    3f8a:	a4 96       	adiw	r28, 0x24	; 36
    3f8c:	8f af       	std	Y+63, r24	; 0x3f
    3f8e:	a4 97       	sbiw	r28, 0x24	; 36
    3f90:	a3 96       	adiw	r28, 0x23	; 35
    3f92:	9f ad       	ldd	r25, Y+63	; 0x3f
    3f94:	a3 97       	sbiw	r28, 0x23	; 35
    3f96:	62 96       	adiw	r28, 0x12	; 18
    3f98:	8f ad       	ldd	r24, Y+63	; 0x3f
    3f9a:	62 97       	sbiw	r28, 0x12	; 18
    3f9c:	98 17       	cp	r25, r24
    3f9e:	18 f0       	brcs	.+6      	; 0x3fa6 <LCD_voidSendNumber+0x5de>
    3fa0:	a4 96       	adiw	r28, 0x24	; 36
    3fa2:	1f ae       	std	Y+63, r1	; 0x3f
    3fa4:	a4 97       	sbiw	r28, 0x24	; 36
    3fa6:	a2 96       	adiw	r28, 0x22	; 34
    3fa8:	9f ad       	ldd	r25, Y+63	; 0x3f
    3faa:	a2 97       	sbiw	r28, 0x22	; 34
    3fac:	a4 96       	adiw	r28, 0x24	; 36
    3fae:	8f ad       	ldd	r24, Y+63	; 0x3f
    3fb0:	a4 97       	sbiw	r28, 0x24	; 36
    3fb2:	98 2b       	or	r25, r24
    3fb4:	a2 96       	adiw	r28, 0x22	; 34
    3fb6:	9f af       	std	Y+63, r25	; 0x3f
    3fb8:	a2 97       	sbiw	r28, 0x22	; 34
    3fba:	a3 96       	adiw	r28, 0x23	; 35
    3fbc:	9f ad       	ldd	r25, Y+63	; 0x3f
    3fbe:	a3 97       	sbiw	r28, 0x23	; 35
    3fc0:	62 96       	adiw	r28, 0x12	; 18
    3fc2:	9f af       	std	Y+63, r25	; 0x3f
    3fc4:	62 97       	sbiw	r28, 0x12	; 18
    3fc6:	8f 8d       	ldd	r24, Y+31	; 0x1f
    3fc8:	9f 89       	ldd	r25, Y+23	; 0x17
    3fca:	89 0f       	add	r24, r25
    3fcc:	63 96       	adiw	r28, 0x13	; 19
    3fce:	8f af       	std	Y+63, r24	; 0x3f
    3fd0:	63 97       	sbiw	r28, 0x13	; 19
    3fd2:	81 e0       	ldi	r24, 0x01	; 1
    3fd4:	a5 96       	adiw	r28, 0x25	; 37
    3fd6:	8f af       	std	Y+63, r24	; 0x3f
    3fd8:	a5 97       	sbiw	r28, 0x25	; 37
    3fda:	63 96       	adiw	r28, 0x13	; 19
    3fdc:	9f ad       	ldd	r25, Y+63	; 0x3f
    3fde:	63 97       	sbiw	r28, 0x13	; 19
    3fe0:	8f 8d       	ldd	r24, Y+31	; 0x1f
    3fe2:	98 17       	cp	r25, r24
    3fe4:	18 f0       	brcs	.+6      	; 0x3fec <LCD_voidSendNumber+0x624>
    3fe6:	a5 96       	adiw	r28, 0x25	; 37
    3fe8:	1f ae       	std	Y+63, r1	; 0x3f
    3fea:	a5 97       	sbiw	r28, 0x25	; 37
    3fec:	a2 96       	adiw	r28, 0x22	; 34
    3fee:	9f ad       	ldd	r25, Y+63	; 0x3f
    3ff0:	a2 97       	sbiw	r28, 0x22	; 34
    3ff2:	63 96       	adiw	r28, 0x13	; 19
    3ff4:	8f ad       	ldd	r24, Y+63	; 0x3f
    3ff6:	63 97       	sbiw	r28, 0x13	; 19
    3ff8:	98 0f       	add	r25, r24
    3ffa:	a6 96       	adiw	r28, 0x26	; 38
    3ffc:	9f af       	std	Y+63, r25	; 0x3f
    3ffe:	a6 97       	sbiw	r28, 0x26	; 38
    4000:	91 e0       	ldi	r25, 0x01	; 1
    4002:	a7 96       	adiw	r28, 0x27	; 39
    4004:	9f af       	std	Y+63, r25	; 0x3f
    4006:	a7 97       	sbiw	r28, 0x27	; 39
    4008:	a6 96       	adiw	r28, 0x26	; 38
    400a:	8f ad       	ldd	r24, Y+63	; 0x3f
    400c:	a6 97       	sbiw	r28, 0x26	; 38
    400e:	63 96       	adiw	r28, 0x13	; 19
    4010:	9f ad       	ldd	r25, Y+63	; 0x3f
    4012:	63 97       	sbiw	r28, 0x13	; 19
    4014:	89 17       	cp	r24, r25
    4016:	18 f0       	brcs	.+6      	; 0x401e <LCD_voidSendNumber+0x656>
    4018:	a7 96       	adiw	r28, 0x27	; 39
    401a:	1f ae       	std	Y+63, r1	; 0x3f
    401c:	a7 97       	sbiw	r28, 0x27	; 39
    401e:	a5 96       	adiw	r28, 0x25	; 37
    4020:	8f ad       	ldd	r24, Y+63	; 0x3f
    4022:	a5 97       	sbiw	r28, 0x25	; 37
    4024:	a7 96       	adiw	r28, 0x27	; 39
    4026:	9f ad       	ldd	r25, Y+63	; 0x3f
    4028:	a7 97       	sbiw	r28, 0x27	; 39
    402a:	89 2b       	or	r24, r25
    402c:	a5 96       	adiw	r28, 0x25	; 37
    402e:	8f af       	std	Y+63, r24	; 0x3f
    4030:	a5 97       	sbiw	r28, 0x25	; 37
    4032:	a6 96       	adiw	r28, 0x26	; 38
    4034:	8f ad       	ldd	r24, Y+63	; 0x3f
    4036:	a6 97       	sbiw	r28, 0x26	; 38
    4038:	63 96       	adiw	r28, 0x13	; 19
    403a:	8f af       	std	Y+63, r24	; 0x3f
    403c:	63 97       	sbiw	r28, 0x13	; 19
    403e:	98 a1       	ldd	r25, Y+32	; 0x20
    4040:	88 8d       	ldd	r24, Y+24	; 0x18
    4042:	98 0f       	add	r25, r24
    4044:	64 96       	adiw	r28, 0x14	; 20
    4046:	9f af       	std	Y+63, r25	; 0x3f
    4048:	64 97       	sbiw	r28, 0x14	; 20
    404a:	a5 96       	adiw	r28, 0x25	; 37
    404c:	8f ad       	ldd	r24, Y+63	; 0x3f
    404e:	a5 97       	sbiw	r28, 0x25	; 37
    4050:	64 96       	adiw	r28, 0x14	; 20
    4052:	9f ad       	ldd	r25, Y+63	; 0x3f
    4054:	64 97       	sbiw	r28, 0x14	; 20
    4056:	89 0f       	add	r24, r25
    4058:	64 96       	adiw	r28, 0x14	; 20
    405a:	8f af       	std	Y+63, r24	; 0x3f
    405c:	64 97       	sbiw	r28, 0x14	; 20
    405e:	2d 96       	adiw	r28, 0x0d	; 13
    4060:	8f ad       	ldd	r24, Y+63	; 0x3f
    4062:	2d 97       	sbiw	r28, 0x0d	; 13
    4064:	89 83       	std	Y+1, r24	; 0x01
    4066:	2e 96       	adiw	r28, 0x0e	; 14
    4068:	9f ad       	ldd	r25, Y+63	; 0x3f
    406a:	2e 97       	sbiw	r28, 0x0e	; 14
    406c:	9a 83       	std	Y+2, r25	; 0x02
    406e:	2f 96       	adiw	r28, 0x0f	; 15
    4070:	8f ad       	ldd	r24, Y+63	; 0x3f
    4072:	2f 97       	sbiw	r28, 0x0f	; 15
    4074:	8b 83       	std	Y+3, r24	; 0x03
    4076:	60 96       	adiw	r28, 0x10	; 16
    4078:	9f ad       	ldd	r25, Y+63	; 0x3f
    407a:	60 97       	sbiw	r28, 0x10	; 16
    407c:	9c 83       	std	Y+4, r25	; 0x04
    407e:	61 96       	adiw	r28, 0x11	; 17
    4080:	8f ad       	ldd	r24, Y+63	; 0x3f
    4082:	61 97       	sbiw	r28, 0x11	; 17
    4084:	8d 83       	std	Y+5, r24	; 0x05
    4086:	62 96       	adiw	r28, 0x12	; 18
    4088:	9f ad       	ldd	r25, Y+63	; 0x3f
    408a:	62 97       	sbiw	r28, 0x12	; 18
    408c:	9e 83       	std	Y+6, r25	; 0x06
    408e:	63 96       	adiw	r28, 0x13	; 19
    4090:	8f ad       	ldd	r24, Y+63	; 0x3f
    4092:	63 97       	sbiw	r28, 0x13	; 19
    4094:	8f 83       	std	Y+7, r24	; 0x07
    4096:	64 96       	adiw	r28, 0x14	; 20
    4098:	9f ad       	ldd	r25, Y+63	; 0x3f
    409a:	64 97       	sbiw	r28, 0x14	; 20
    409c:	98 87       	std	Y+8, r25	; 0x08
			number /= 10 ;
    409e:	a9 84       	ldd	r10, Y+9	; 0x09
    40a0:	ba 84       	ldd	r11, Y+10	; 0x0a
    40a2:	cb 84       	ldd	r12, Y+11	; 0x0b
    40a4:	dc 84       	ldd	r13, Y+12	; 0x0c
    40a6:	ed 84       	ldd	r14, Y+13	; 0x0d
    40a8:	fe 84       	ldd	r15, Y+14	; 0x0e
    40aa:	0f 85       	ldd	r16, Y+15	; 0x0f
    40ac:	18 89       	ldd	r17, Y+16	; 0x10
    40ae:	2a 2d       	mov	r18, r10
    40b0:	3b 2d       	mov	r19, r11
    40b2:	4c 2d       	mov	r20, r12
    40b4:	5d 2d       	mov	r21, r13
    40b6:	6e 2d       	mov	r22, r14
    40b8:	7f 2d       	mov	r23, r15
    40ba:	80 2f       	mov	r24, r16
    40bc:	91 2f       	mov	r25, r17
    40be:	0f 2e       	mov	r0, r31
    40c0:	fa e0       	ldi	r31, 0x0A	; 10
    40c2:	af 2e       	mov	r10, r31
    40c4:	f0 2d       	mov	r31, r0
    40c6:	bb 24       	eor	r11, r11
    40c8:	cc 24       	eor	r12, r12
    40ca:	dd 24       	eor	r13, r13
    40cc:	ee 24       	eor	r14, r14
    40ce:	ff 24       	eor	r15, r15
    40d0:	00 e0       	ldi	r16, 0x00	; 0
    40d2:	10 e0       	ldi	r17, 0x00	; 0
    40d4:	0e 94 9c 01 	call	0x338	; 0x338 <__udivdi3>
    40d8:	a2 2e       	mov	r10, r18
    40da:	b3 2e       	mov	r11, r19
    40dc:	c4 2e       	mov	r12, r20
    40de:	d5 2e       	mov	r13, r21
    40e0:	e6 2e       	mov	r14, r22
    40e2:	f7 2e       	mov	r15, r23
    40e4:	08 2f       	mov	r16, r24
    40e6:	19 2f       	mov	r17, r25
    40e8:	a9 86       	std	Y+9, r10	; 0x09
    40ea:	ba 86       	std	Y+10, r11	; 0x0a
    40ec:	cb 86       	std	Y+11, r12	; 0x0b
    40ee:	dc 86       	std	Y+12, r13	; 0x0c
    40f0:	ed 86       	std	Y+13, r14	; 0x0d
    40f2:	fe 86       	std	Y+14, r15	; 0x0e
    40f4:	0f 87       	std	Y+15, r16	; 0x0f
    40f6:	18 8b       	std	Y+16, r17	; 0x10

	if( number == 0 ){ LCD_voidSendData('0'); }

	else{

		while( number != 0 ){
    40f8:	89 85       	ldd	r24, Y+9	; 0x09
    40fa:	9a 85       	ldd	r25, Y+10	; 0x0a
    40fc:	89 2b       	or	r24, r25
    40fe:	9b 85       	ldd	r25, Y+11	; 0x0b
    4100:	89 2b       	or	r24, r25
    4102:	9c 85       	ldd	r25, Y+12	; 0x0c
    4104:	89 2b       	or	r24, r25
    4106:	9d 85       	ldd	r25, Y+13	; 0x0d
    4108:	89 2b       	or	r24, r25
    410a:	9e 85       	ldd	r25, Y+14	; 0x0e
    410c:	89 2b       	or	r24, r25
    410e:	9f 85       	ldd	r25, Y+15	; 0x0f
    4110:	89 2b       	or	r24, r25
    4112:	98 89       	ldd	r25, Y+16	; 0x10
    4114:	89 2b       	or	r24, r25
    4116:	88 23       	and	r24, r24
    4118:	09 f0       	breq	.+2      	; 0x411c <LCD_voidSendNumber+0x754>
    411a:	90 cc       	rjmp	.-1760   	; 0x3a3c <LCD_voidSendNumber+0x74>
    411c:	5e c0       	rjmp	.+188    	; 0x41da <LCD_voidSendNumber+0x812>
			number /= 10 ;

		}
		while( LOC_u64Reversed != 1 ){

			LCD_voidSendData( ( LOC_u64Reversed % 10 ) + 48 );
    411e:	a9 80       	ldd	r10, Y+1	; 0x01
    4120:	ba 80       	ldd	r11, Y+2	; 0x02
    4122:	cb 80       	ldd	r12, Y+3	; 0x03
    4124:	dc 80       	ldd	r13, Y+4	; 0x04
    4126:	ed 80       	ldd	r14, Y+5	; 0x05
    4128:	fe 80       	ldd	r15, Y+6	; 0x06
    412a:	0f 81       	ldd	r16, Y+7	; 0x07
    412c:	18 85       	ldd	r17, Y+8	; 0x08
    412e:	2a 2d       	mov	r18, r10
    4130:	3b 2d       	mov	r19, r11
    4132:	4c 2d       	mov	r20, r12
    4134:	5d 2d       	mov	r21, r13
    4136:	6e 2d       	mov	r22, r14
    4138:	7f 2d       	mov	r23, r15
    413a:	80 2f       	mov	r24, r16
    413c:	91 2f       	mov	r25, r17
    413e:	0f 2e       	mov	r0, r31
    4140:	fa e0       	ldi	r31, 0x0A	; 10
    4142:	af 2e       	mov	r10, r31
    4144:	f0 2d       	mov	r31, r0
    4146:	bb 24       	eor	r11, r11
    4148:	cc 24       	eor	r12, r12
    414a:	dd 24       	eor	r13, r13
    414c:	ee 24       	eor	r14, r14
    414e:	ff 24       	eor	r15, r15
    4150:	00 e0       	ldi	r16, 0x00	; 0
    4152:	10 e0       	ldi	r17, 0x00	; 0
    4154:	0e 94 11 08 	call	0x1022	; 0x1022 <__umoddi3>
    4158:	a2 2e       	mov	r10, r18
    415a:	b3 2e       	mov	r11, r19
    415c:	c4 2e       	mov	r12, r20
    415e:	d5 2e       	mov	r13, r21
    4160:	e6 2e       	mov	r14, r22
    4162:	f7 2e       	mov	r15, r23
    4164:	08 2f       	mov	r16, r24
    4166:	19 2f       	mov	r17, r25
    4168:	2a 2d       	mov	r18, r10
    416a:	3b 2d       	mov	r19, r11
    416c:	4c 2d       	mov	r20, r12
    416e:	5d 2d       	mov	r21, r13
    4170:	6e 2d       	mov	r22, r14
    4172:	7f 2d       	mov	r23, r15
    4174:	80 2f       	mov	r24, r16
    4176:	91 2f       	mov	r25, r17
    4178:	82 2f       	mov	r24, r18
    417a:	80 5d       	subi	r24, 0xD0	; 208
    417c:	0e 94 fb 1b 	call	0x37f6	; 0x37f6 <LCD_voidSendData>
			LOC_u64Reversed /= 10 ;
    4180:	a9 80       	ldd	r10, Y+1	; 0x01
    4182:	ba 80       	ldd	r11, Y+2	; 0x02
    4184:	cb 80       	ldd	r12, Y+3	; 0x03
    4186:	dc 80       	ldd	r13, Y+4	; 0x04
    4188:	ed 80       	ldd	r14, Y+5	; 0x05
    418a:	fe 80       	ldd	r15, Y+6	; 0x06
    418c:	0f 81       	ldd	r16, Y+7	; 0x07
    418e:	18 85       	ldd	r17, Y+8	; 0x08
    4190:	2a 2d       	mov	r18, r10
    4192:	3b 2d       	mov	r19, r11
    4194:	4c 2d       	mov	r20, r12
    4196:	5d 2d       	mov	r21, r13
    4198:	6e 2d       	mov	r22, r14
    419a:	7f 2d       	mov	r23, r15
    419c:	80 2f       	mov	r24, r16
    419e:	91 2f       	mov	r25, r17
    41a0:	0f 2e       	mov	r0, r31
    41a2:	fa e0       	ldi	r31, 0x0A	; 10
    41a4:	af 2e       	mov	r10, r31
    41a6:	f0 2d       	mov	r31, r0
    41a8:	bb 24       	eor	r11, r11
    41aa:	cc 24       	eor	r12, r12
    41ac:	dd 24       	eor	r13, r13
    41ae:	ee 24       	eor	r14, r14
    41b0:	ff 24       	eor	r15, r15
    41b2:	00 e0       	ldi	r16, 0x00	; 0
    41b4:	10 e0       	ldi	r17, 0x00	; 0
    41b6:	0e 94 9c 01 	call	0x338	; 0x338 <__udivdi3>
    41ba:	a2 2e       	mov	r10, r18
    41bc:	b3 2e       	mov	r11, r19
    41be:	c4 2e       	mov	r12, r20
    41c0:	d5 2e       	mov	r13, r21
    41c2:	e6 2e       	mov	r14, r22
    41c4:	f7 2e       	mov	r15, r23
    41c6:	08 2f       	mov	r16, r24
    41c8:	19 2f       	mov	r17, r25
    41ca:	a9 82       	std	Y+1, r10	; 0x01
    41cc:	ba 82       	std	Y+2, r11	; 0x02
    41ce:	cb 82       	std	Y+3, r12	; 0x03
    41d0:	dc 82       	std	Y+4, r13	; 0x04
    41d2:	ed 82       	std	Y+5, r14	; 0x05
    41d4:	fe 82       	std	Y+6, r15	; 0x06
    41d6:	0f 83       	std	Y+7, r16	; 0x07
    41d8:	18 87       	std	Y+8, r17	; 0x08

			LOC_u64Reversed = ( LOC_u64Reversed * 10 ) + ( number % 10 );
			number /= 10 ;

		}
		while( LOC_u64Reversed != 1 ){
    41da:	89 81       	ldd	r24, Y+1	; 0x01
    41dc:	81 30       	cpi	r24, 0x01	; 1
    41de:	09 f0       	breq	.+2      	; 0x41e2 <LCD_voidSendNumber+0x81a>
    41e0:	9e cf       	rjmp	.-196    	; 0x411e <LCD_voidSendNumber+0x756>
    41e2:	8a 81       	ldd	r24, Y+2	; 0x02
    41e4:	88 23       	and	r24, r24
    41e6:	09 f0       	breq	.+2      	; 0x41ea <LCD_voidSendNumber+0x822>
    41e8:	9a cf       	rjmp	.-204    	; 0x411e <LCD_voidSendNumber+0x756>
    41ea:	8b 81       	ldd	r24, Y+3	; 0x03
    41ec:	88 23       	and	r24, r24
    41ee:	09 f0       	breq	.+2      	; 0x41f2 <LCD_voidSendNumber+0x82a>
    41f0:	96 cf       	rjmp	.-212    	; 0x411e <LCD_voidSendNumber+0x756>
    41f2:	8c 81       	ldd	r24, Y+4	; 0x04
    41f4:	88 23       	and	r24, r24
    41f6:	09 f0       	breq	.+2      	; 0x41fa <LCD_voidSendNumber+0x832>
    41f8:	92 cf       	rjmp	.-220    	; 0x411e <LCD_voidSendNumber+0x756>
    41fa:	8d 81       	ldd	r24, Y+5	; 0x05
    41fc:	88 23       	and	r24, r24
    41fe:	09 f0       	breq	.+2      	; 0x4202 <LCD_voidSendNumber+0x83a>
    4200:	8e cf       	rjmp	.-228    	; 0x411e <LCD_voidSendNumber+0x756>
    4202:	8e 81       	ldd	r24, Y+6	; 0x06
    4204:	88 23       	and	r24, r24
    4206:	09 f0       	breq	.+2      	; 0x420a <LCD_voidSendNumber+0x842>
    4208:	8a cf       	rjmp	.-236    	; 0x411e <LCD_voidSendNumber+0x756>
    420a:	8f 81       	ldd	r24, Y+7	; 0x07
    420c:	88 23       	and	r24, r24
    420e:	09 f0       	breq	.+2      	; 0x4212 <LCD_voidSendNumber+0x84a>
    4210:	86 cf       	rjmp	.-244    	; 0x411e <LCD_voidSendNumber+0x756>
    4212:	88 85       	ldd	r24, Y+8	; 0x08
    4214:	88 23       	and	r24, r24
    4216:	09 f0       	breq	.+2      	; 0x421a <LCD_voidSendNumber+0x852>
    4218:	82 cf       	rjmp	.-252    	; 0x411e <LCD_voidSendNumber+0x756>

		}

	}

}
    421a:	ca 59       	subi	r28, 0x9A	; 154
    421c:	df 4f       	sbci	r29, 0xFF	; 255
    421e:	0f b6       	in	r0, 0x3f	; 63
    4220:	f8 94       	cli
    4222:	de bf       	out	0x3e, r29	; 62
    4224:	0f be       	out	0x3f, r0	; 63
    4226:	cd bf       	out	0x3d, r28	; 61
    4228:	cf 91       	pop	r28
    422a:	df 91       	pop	r29
    422c:	1f 91       	pop	r17
    422e:	0f 91       	pop	r16
    4230:	ff 90       	pop	r15
    4232:	ef 90       	pop	r14
    4234:	df 90       	pop	r13
    4236:	cf 90       	pop	r12
    4238:	bf 90       	pop	r11
    423a:	af 90       	pop	r10
    423c:	08 95       	ret

0000423e <LCD_voidSendPulse>:

static void LCD_voidSendPulse()
{
    423e:	df 93       	push	r29
    4240:	cf 93       	push	r28
    4242:	cd b7       	in	r28, 0x3d	; 61
    4244:	de b7       	in	r29, 0x3e	; 62
    4246:	2e 97       	sbiw	r28, 0x0e	; 14
    4248:	0f b6       	in	r0, 0x3f	; 63
    424a:	f8 94       	cli
    424c:	de bf       	out	0x3e, r29	; 62
    424e:	0f be       	out	0x3f, r0	; 63
    4250:	cd bf       	out	0x3d, r28	; 61
	DIO_enumSetPinValue(LCD_CTRL_PORT, LCD_EN, DIO_PIN_HIGH);
    4252:	81 e0       	ldi	r24, 0x01	; 1
    4254:	62 e0       	ldi	r22, 0x02	; 2
    4256:	41 e0       	ldi	r20, 0x01	; 1
    4258:	0e 94 a6 28 	call	0x514c	; 0x514c <DIO_enumSetPinValue>
    425c:	80 e0       	ldi	r24, 0x00	; 0
    425e:	90 e0       	ldi	r25, 0x00	; 0
    4260:	a0 e8       	ldi	r26, 0x80	; 128
    4262:	bf e3       	ldi	r27, 0x3F	; 63
    4264:	8b 87       	std	Y+11, r24	; 0x0b
    4266:	9c 87       	std	Y+12, r25	; 0x0c
    4268:	ad 87       	std	Y+13, r26	; 0x0d
    426a:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    426c:	6b 85       	ldd	r22, Y+11	; 0x0b
    426e:	7c 85       	ldd	r23, Y+12	; 0x0c
    4270:	8d 85       	ldd	r24, Y+13	; 0x0d
    4272:	9e 85       	ldd	r25, Y+14	; 0x0e
    4274:	20 e0       	ldi	r18, 0x00	; 0
    4276:	30 e0       	ldi	r19, 0x00	; 0
    4278:	4a e7       	ldi	r20, 0x7A	; 122
    427a:	53 e4       	ldi	r21, 0x43	; 67
    427c:	0e 94 2b 10 	call	0x2056	; 0x2056 <__mulsf3>
    4280:	dc 01       	movw	r26, r24
    4282:	cb 01       	movw	r24, r22
    4284:	8f 83       	std	Y+7, r24	; 0x07
    4286:	98 87       	std	Y+8, r25	; 0x08
    4288:	a9 87       	std	Y+9, r26	; 0x09
    428a:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    428c:	6f 81       	ldd	r22, Y+7	; 0x07
    428e:	78 85       	ldd	r23, Y+8	; 0x08
    4290:	89 85       	ldd	r24, Y+9	; 0x09
    4292:	9a 85       	ldd	r25, Y+10	; 0x0a
    4294:	20 e0       	ldi	r18, 0x00	; 0
    4296:	30 e0       	ldi	r19, 0x00	; 0
    4298:	40 e8       	ldi	r20, 0x80	; 128
    429a:	5f e3       	ldi	r21, 0x3F	; 63
    429c:	0e 94 31 12 	call	0x2462	; 0x2462 <__ltsf2>
    42a0:	88 23       	and	r24, r24
    42a2:	2c f4       	brge	.+10     	; 0x42ae <LCD_voidSendPulse+0x70>
		__ticks = 1;
    42a4:	81 e0       	ldi	r24, 0x01	; 1
    42a6:	90 e0       	ldi	r25, 0x00	; 0
    42a8:	9e 83       	std	Y+6, r25	; 0x06
    42aa:	8d 83       	std	Y+5, r24	; 0x05
    42ac:	3f c0       	rjmp	.+126    	; 0x432c <LCD_voidSendPulse+0xee>
	else if (__tmp > 65535)
    42ae:	6f 81       	ldd	r22, Y+7	; 0x07
    42b0:	78 85       	ldd	r23, Y+8	; 0x08
    42b2:	89 85       	ldd	r24, Y+9	; 0x09
    42b4:	9a 85       	ldd	r25, Y+10	; 0x0a
    42b6:	20 e0       	ldi	r18, 0x00	; 0
    42b8:	3f ef       	ldi	r19, 0xFF	; 255
    42ba:	4f e7       	ldi	r20, 0x7F	; 127
    42bc:	57 e4       	ldi	r21, 0x47	; 71
    42be:	0e 94 d1 11 	call	0x23a2	; 0x23a2 <__gtsf2>
    42c2:	18 16       	cp	r1, r24
    42c4:	4c f5       	brge	.+82     	; 0x4318 <LCD_voidSendPulse+0xda>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    42c6:	6b 85       	ldd	r22, Y+11	; 0x0b
    42c8:	7c 85       	ldd	r23, Y+12	; 0x0c
    42ca:	8d 85       	ldd	r24, Y+13	; 0x0d
    42cc:	9e 85       	ldd	r25, Y+14	; 0x0e
    42ce:	20 e0       	ldi	r18, 0x00	; 0
    42d0:	30 e0       	ldi	r19, 0x00	; 0
    42d2:	40 e2       	ldi	r20, 0x20	; 32
    42d4:	51 e4       	ldi	r21, 0x41	; 65
    42d6:	0e 94 2b 10 	call	0x2056	; 0x2056 <__mulsf3>
    42da:	dc 01       	movw	r26, r24
    42dc:	cb 01       	movw	r24, r22
    42de:	bc 01       	movw	r22, r24
    42e0:	cd 01       	movw	r24, r26
    42e2:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    42e6:	dc 01       	movw	r26, r24
    42e8:	cb 01       	movw	r24, r22
    42ea:	9e 83       	std	Y+6, r25	; 0x06
    42ec:	8d 83       	std	Y+5, r24	; 0x05
    42ee:	0f c0       	rjmp	.+30     	; 0x430e <LCD_voidSendPulse+0xd0>
    42f0:	89 e1       	ldi	r24, 0x19	; 25
    42f2:	90 e0       	ldi	r25, 0x00	; 0
    42f4:	9c 83       	std	Y+4, r25	; 0x04
    42f6:	8b 83       	std	Y+3, r24	; 0x03
    42f8:	8b 81       	ldd	r24, Y+3	; 0x03
    42fa:	9c 81       	ldd	r25, Y+4	; 0x04
    42fc:	01 97       	sbiw	r24, 0x01	; 1
    42fe:	f1 f7       	brne	.-4      	; 0x42fc <LCD_voidSendPulse+0xbe>
    4300:	9c 83       	std	Y+4, r25	; 0x04
    4302:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4304:	8d 81       	ldd	r24, Y+5	; 0x05
    4306:	9e 81       	ldd	r25, Y+6	; 0x06
    4308:	01 97       	sbiw	r24, 0x01	; 1
    430a:	9e 83       	std	Y+6, r25	; 0x06
    430c:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    430e:	8d 81       	ldd	r24, Y+5	; 0x05
    4310:	9e 81       	ldd	r25, Y+6	; 0x06
    4312:	00 97       	sbiw	r24, 0x00	; 0
    4314:	69 f7       	brne	.-38     	; 0x42f0 <LCD_voidSendPulse+0xb2>
    4316:	14 c0       	rjmp	.+40     	; 0x4340 <LCD_voidSendPulse+0x102>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4318:	6f 81       	ldd	r22, Y+7	; 0x07
    431a:	78 85       	ldd	r23, Y+8	; 0x08
    431c:	89 85       	ldd	r24, Y+9	; 0x09
    431e:	9a 85       	ldd	r25, Y+10	; 0x0a
    4320:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    4324:	dc 01       	movw	r26, r24
    4326:	cb 01       	movw	r24, r22
    4328:	9e 83       	std	Y+6, r25	; 0x06
    432a:	8d 83       	std	Y+5, r24	; 0x05
    432c:	8d 81       	ldd	r24, Y+5	; 0x05
    432e:	9e 81       	ldd	r25, Y+6	; 0x06
    4330:	9a 83       	std	Y+2, r25	; 0x02
    4332:	89 83       	std	Y+1, r24	; 0x01
    4334:	89 81       	ldd	r24, Y+1	; 0x01
    4336:	9a 81       	ldd	r25, Y+2	; 0x02
    4338:	01 97       	sbiw	r24, 0x01	; 1
    433a:	f1 f7       	brne	.-4      	; 0x4338 <LCD_voidSendPulse+0xfa>
    433c:	9a 83       	std	Y+2, r25	; 0x02
    433e:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
	DIO_enumSetPinValue(LCD_CTRL_PORT, LCD_EN, DIO_PIN_LOW);
    4340:	81 e0       	ldi	r24, 0x01	; 1
    4342:	62 e0       	ldi	r22, 0x02	; 2
    4344:	40 e0       	ldi	r20, 0x00	; 0
    4346:	0e 94 a6 28 	call	0x514c	; 0x514c <DIO_enumSetPinValue>

}
    434a:	2e 96       	adiw	r28, 0x0e	; 14
    434c:	0f b6       	in	r0, 0x3f	; 63
    434e:	f8 94       	cli
    4350:	de bf       	out	0x3e, r29	; 62
    4352:	0f be       	out	0x3f, r0	; 63
    4354:	cd bf       	out	0x3d, r28	; 61
    4356:	cf 91       	pop	r28
    4358:	df 91       	pop	r29
    435a:	08 95       	ret

0000435c <SSD_voidInit>:
#include "SSD_config.h"

static u8 Local_u8SSDNums[10] = SSD_ArrNums;

void SSD_voidInit(SSD_Type SSD_Configuration)
{
    435c:	df 93       	push	r29
    435e:	cf 93       	push	r28
    4360:	00 d0       	rcall	.+0      	; 0x4362 <SSD_voidInit+0x6>
    4362:	00 d0       	rcall	.+0      	; 0x4364 <SSD_voidInit+0x8>
    4364:	cd b7       	in	r28, 0x3d	; 61
    4366:	de b7       	in	r29, 0x3e	; 62
    4368:	69 83       	std	Y+1, r22	; 0x01
    436a:	7a 83       	std	Y+2, r23	; 0x02
    436c:	8b 83       	std	Y+3, r24	; 0x03
    436e:	9c 83       	std	Y+4, r25	; 0x04
	DIO_enumSetPortDirection (SSD_Configuration.DataPort, DIO_PORT_OUTPUT);
    4370:	8a 81       	ldd	r24, Y+2	; 0x02
    4372:	6f ef       	ldi	r22, 0xFF	; 255
    4374:	0e 94 d7 2c 	call	0x59ae	; 0x59ae <DIO_enumSetPortDirection>
}
    4378:	0f 90       	pop	r0
    437a:	0f 90       	pop	r0
    437c:	0f 90       	pop	r0
    437e:	0f 90       	pop	r0
    4380:	cf 91       	pop	r28
    4382:	df 91       	pop	r29
    4384:	08 95       	ret

00004386 <SSD_voidSendNumber>:

void SSD_voidSendNumber(SSD_Type SSD_Configuration, u8 Copy_u8Number)
{
    4386:	df 93       	push	r29
    4388:	cf 93       	push	r28
    438a:	00 d0       	rcall	.+0      	; 0x438c <SSD_voidSendNumber+0x6>
    438c:	00 d0       	rcall	.+0      	; 0x438e <SSD_voidSendNumber+0x8>
    438e:	0f 92       	push	r0
    4390:	cd b7       	in	r28, 0x3d	; 61
    4392:	de b7       	in	r29, 0x3e	; 62
    4394:	69 83       	std	Y+1, r22	; 0x01
    4396:	7a 83       	std	Y+2, r23	; 0x02
    4398:	8b 83       	std	Y+3, r24	; 0x03
    439a:	9c 83       	std	Y+4, r25	; 0x04
    439c:	4d 83       	std	Y+5, r20	; 0x05
	if(SSD_Configuration.Type == SSD_COMM_CAT)
    439e:	89 81       	ldd	r24, Y+1	; 0x01
    43a0:	88 23       	and	r24, r24
    43a2:	69 f4       	brne	.+26     	; 0x43be <SSD_voidSendNumber+0x38>
	{
		DIO_enumSetPortValue(SSD_Configuration.DataPort, Local_u8SSDNums[Copy_u8Number] );
    43a4:	2a 81       	ldd	r18, Y+2	; 0x02
    43a6:	8d 81       	ldd	r24, Y+5	; 0x05
    43a8:	88 2f       	mov	r24, r24
    43aa:	90 e0       	ldi	r25, 0x00	; 0
    43ac:	fc 01       	movw	r30, r24
    43ae:	e0 57       	subi	r30, 0x70	; 112
    43b0:	fe 4f       	sbci	r31, 0xFE	; 254
    43b2:	90 81       	ld	r25, Z
    43b4:	82 2f       	mov	r24, r18
    43b6:	69 2f       	mov	r22, r25
    43b8:	0e 94 24 2d 	call	0x5a48	; 0x5a48 <DIO_enumSetPortValue>
    43bc:	11 c0       	rjmp	.+34     	; 0x43e0 <SSD_voidSendNumber+0x5a>
	}
	else if(SSD_Configuration.Type == SSD_COMM_AND)
    43be:	89 81       	ldd	r24, Y+1	; 0x01
    43c0:	81 30       	cpi	r24, 0x01	; 1
    43c2:	71 f4       	brne	.+28     	; 0x43e0 <SSD_voidSendNumber+0x5a>
	{
		DIO_enumSetPortValue(SSD_Configuration.DataPort, ~Local_u8SSDNums[Copy_u8Number]);
    43c4:	2a 81       	ldd	r18, Y+2	; 0x02
    43c6:	8d 81       	ldd	r24, Y+5	; 0x05
    43c8:	88 2f       	mov	r24, r24
    43ca:	90 e0       	ldi	r25, 0x00	; 0
    43cc:	fc 01       	movw	r30, r24
    43ce:	e0 57       	subi	r30, 0x70	; 112
    43d0:	fe 4f       	sbci	r31, 0xFE	; 254
    43d2:	80 81       	ld	r24, Z
    43d4:	98 2f       	mov	r25, r24
    43d6:	90 95       	com	r25
    43d8:	82 2f       	mov	r24, r18
    43da:	69 2f       	mov	r22, r25
    43dc:	0e 94 24 2d 	call	0x5a48	; 0x5a48 <DIO_enumSetPortValue>
	}
}
    43e0:	0f 90       	pop	r0
    43e2:	0f 90       	pop	r0
    43e4:	0f 90       	pop	r0
    43e6:	0f 90       	pop	r0
    43e8:	0f 90       	pop	r0
    43ea:	cf 91       	pop	r28
    43ec:	df 91       	pop	r29
    43ee:	08 95       	ret

000043f0 <SSD_voidEnable>:

void SSD_voidEnable(SSD_Type SSD_Configuration)
{
    43f0:	df 93       	push	r29
    43f2:	cf 93       	push	r28
    43f4:	00 d0       	rcall	.+0      	; 0x43f6 <SSD_voidEnable+0x6>
    43f6:	00 d0       	rcall	.+0      	; 0x43f8 <SSD_voidEnable+0x8>
    43f8:	cd b7       	in	r28, 0x3d	; 61
    43fa:	de b7       	in	r29, 0x3e	; 62
    43fc:	69 83       	std	Y+1, r22	; 0x01
    43fe:	7a 83       	std	Y+2, r23	; 0x02
    4400:	8b 83       	std	Y+3, r24	; 0x03
    4402:	9c 83       	std	Y+4, r25	; 0x04
	DIO_enumSetPinDirection(SSD_Configuration.DataPort, SSD_Configuration.EnPin, DIO_PIN_OUTPUT);
    4404:	8a 81       	ldd	r24, Y+2	; 0x02
    4406:	9c 81       	ldd	r25, Y+4	; 0x04
    4408:	69 2f       	mov	r22, r25
    440a:	41 e0       	ldi	r20, 0x01	; 1
    440c:	0e 94 97 27 	call	0x4f2e	; 0x4f2e <DIO_enumSetPinDirection>
	if(SSD_Configuration.Type == SSD_COMM_CAT)
    4410:	89 81       	ldd	r24, Y+1	; 0x01
    4412:	88 23       	and	r24, r24
    4414:	39 f4       	brne	.+14     	; 0x4424 <SSD_voidEnable+0x34>
	{
		DIO_enumSetPinValue(SSD_Configuration.DataPort, SSD_Configuration.EnPin, DIO_PIN_LOW);
    4416:	8a 81       	ldd	r24, Y+2	; 0x02
    4418:	9c 81       	ldd	r25, Y+4	; 0x04
    441a:	69 2f       	mov	r22, r25
    441c:	40 e0       	ldi	r20, 0x00	; 0
    441e:	0e 94 a6 28 	call	0x514c	; 0x514c <DIO_enumSetPinValue>
    4422:	09 c0       	rjmp	.+18     	; 0x4436 <SSD_voidEnable+0x46>
	}
	else if(SSD_Configuration.Type == SSD_COMM_AND)
    4424:	89 81       	ldd	r24, Y+1	; 0x01
    4426:	81 30       	cpi	r24, 0x01	; 1
    4428:	31 f4       	brne	.+12     	; 0x4436 <SSD_voidEnable+0x46>
	{
		DIO_enumSetPinValue(SSD_Configuration.DataPort, SSD_Configuration.EnPin, DIO_PIN_HIGH);
    442a:	8a 81       	ldd	r24, Y+2	; 0x02
    442c:	9c 81       	ldd	r25, Y+4	; 0x04
    442e:	69 2f       	mov	r22, r25
    4430:	41 e0       	ldi	r20, 0x01	; 1
    4432:	0e 94 a6 28 	call	0x514c	; 0x514c <DIO_enumSetPinValue>
	}
}
    4436:	0f 90       	pop	r0
    4438:	0f 90       	pop	r0
    443a:	0f 90       	pop	r0
    443c:	0f 90       	pop	r0
    443e:	cf 91       	pop	r28
    4440:	df 91       	pop	r29
    4442:	08 95       	ret

00004444 <SSD_voidDisable>:

void SSD_voidDisable(SSD_Type SSD_Configuration)
{
    4444:	df 93       	push	r29
    4446:	cf 93       	push	r28
    4448:	00 d0       	rcall	.+0      	; 0x444a <SSD_voidDisable+0x6>
    444a:	00 d0       	rcall	.+0      	; 0x444c <SSD_voidDisable+0x8>
    444c:	cd b7       	in	r28, 0x3d	; 61
    444e:	de b7       	in	r29, 0x3e	; 62
    4450:	69 83       	std	Y+1, r22	; 0x01
    4452:	7a 83       	std	Y+2, r23	; 0x02
    4454:	8b 83       	std	Y+3, r24	; 0x03
    4456:	9c 83       	std	Y+4, r25	; 0x04
	DIO_enumSetPinDirection(SSD_Configuration.DataPort, SSD_Configuration.EnPin, DIO_PIN_OUTPUT);
    4458:	8a 81       	ldd	r24, Y+2	; 0x02
    445a:	9c 81       	ldd	r25, Y+4	; 0x04
    445c:	69 2f       	mov	r22, r25
    445e:	41 e0       	ldi	r20, 0x01	; 1
    4460:	0e 94 97 27 	call	0x4f2e	; 0x4f2e <DIO_enumSetPinDirection>
	if(SSD_Configuration.Type == SSD_COMM_CAT)
    4464:	89 81       	ldd	r24, Y+1	; 0x01
    4466:	88 23       	and	r24, r24
    4468:	39 f4       	brne	.+14     	; 0x4478 <SSD_voidDisable+0x34>
	{
		DIO_enumSetPinValue(SSD_Configuration.DataPort, SSD_Configuration.EnPin, DIO_PIN_HIGH);
    446a:	8a 81       	ldd	r24, Y+2	; 0x02
    446c:	9c 81       	ldd	r25, Y+4	; 0x04
    446e:	69 2f       	mov	r22, r25
    4470:	41 e0       	ldi	r20, 0x01	; 1
    4472:	0e 94 a6 28 	call	0x514c	; 0x514c <DIO_enumSetPinValue>
    4476:	09 c0       	rjmp	.+18     	; 0x448a <SSD_voidDisable+0x46>
	}
	else if(SSD_Configuration.Type == SSD_COMM_AND)
    4478:	89 81       	ldd	r24, Y+1	; 0x01
    447a:	81 30       	cpi	r24, 0x01	; 1
    447c:	31 f4       	brne	.+12     	; 0x448a <SSD_voidDisable+0x46>
	{
		DIO_enumSetPinValue(SSD_Configuration.DataPort, SSD_Configuration.EnPin, DIO_PIN_LOW);
    447e:	8a 81       	ldd	r24, Y+2	; 0x02
    4480:	9c 81       	ldd	r25, Y+4	; 0x04
    4482:	69 2f       	mov	r22, r25
    4484:	40 e0       	ldi	r20, 0x00	; 0
    4486:	0e 94 a6 28 	call	0x514c	; 0x514c <DIO_enumSetPinValue>
	}
}
    448a:	0f 90       	pop	r0
    448c:	0f 90       	pop	r0
    448e:	0f 90       	pop	r0
    4490:	0f 90       	pop	r0
    4492:	cf 91       	pop	r28
    4494:	df 91       	pop	r29
    4496:	08 95       	ret

00004498 <SW_voidInit>:
#include "SW_interface.h"
#include "SW_config.h"
#include "SW_private.h"

void SW_voidInit(SW_Type SW_Config)
{
    4498:	df 93       	push	r29
    449a:	cf 93       	push	r28
    449c:	00 d0       	rcall	.+0      	; 0x449e <SW_voidInit+0x6>
    449e:	0f 92       	push	r0
    44a0:	cd b7       	in	r28, 0x3d	; 61
    44a2:	de b7       	in	r29, 0x3e	; 62
    44a4:	69 83       	std	Y+1, r22	; 0x01
    44a6:	7a 83       	std	Y+2, r23	; 0x02
    44a8:	8b 83       	std	Y+3, r24	; 0x03
	DIO_enumSetPinDirection(SW_Config.PORT, SW_Config.PIN, DIO_PIN_INPUT);
    44aa:	89 81       	ldd	r24, Y+1	; 0x01
    44ac:	9a 81       	ldd	r25, Y+2	; 0x02
    44ae:	69 2f       	mov	r22, r25
    44b0:	40 e0       	ldi	r20, 0x00	; 0
    44b2:	0e 94 97 27 	call	0x4f2e	; 0x4f2e <DIO_enumSetPinDirection>
	if(SW_Config.PULL_STATE == SW_INT_PULL_UP)
    44b6:	8b 81       	ldd	r24, Y+3	; 0x03
    44b8:	88 23       	and	r24, r24
    44ba:	31 f4       	brne	.+12     	; 0x44c8 <SW_voidInit+0x30>
		DIO_enumSetPinValue(SW_Config.PORT, SW_Config.PIN, DIO_PIN_OUTPUT);
    44bc:	89 81       	ldd	r24, Y+1	; 0x01
    44be:	9a 81       	ldd	r25, Y+2	; 0x02
    44c0:	69 2f       	mov	r22, r25
    44c2:	41 e0       	ldi	r20, 0x01	; 1
    44c4:	0e 94 a6 28 	call	0x514c	; 0x514c <DIO_enumSetPinValue>
}
    44c8:	0f 90       	pop	r0
    44ca:	0f 90       	pop	r0
    44cc:	0f 90       	pop	r0
    44ce:	cf 91       	pop	r28
    44d0:	df 91       	pop	r29
    44d2:	08 95       	ret

000044d4 <SW_u8GetPressed>:

u8 SW_u8GetPressed (SW_Type SW_Config){
    44d4:	df 93       	push	r29
    44d6:	cf 93       	push	r28
    44d8:	00 d0       	rcall	.+0      	; 0x44da <SW_u8GetPressed+0x6>
    44da:	00 d0       	rcall	.+0      	; 0x44dc <SW_u8GetPressed+0x8>
    44dc:	0f 92       	push	r0
    44de:	cd b7       	in	r28, 0x3d	; 61
    44e0:	de b7       	in	r29, 0x3e	; 62
    44e2:	6b 83       	std	Y+3, r22	; 0x03
    44e4:	7c 83       	std	Y+4, r23	; 0x04
    44e6:	8d 83       	std	Y+5, r24	; 0x05
	
	u8 LOC_u8Result = SW_NOT_PRESSED ;
    44e8:	19 82       	std	Y+1, r1	; 0x01
	u8 LOC_u8PinVal = SW_NOT_PRESSED ;
    44ea:	1a 82       	std	Y+2, r1	; 0x02
	
	if ( (SW_Config.PULL_STATE == SW_INT_PULL_UP) || (SW_Config.PULL_STATE == SW_EXT_PULL_UP) )
    44ec:	8d 81       	ldd	r24, Y+5	; 0x05
    44ee:	88 23       	and	r24, r24
    44f0:	19 f0       	breq	.+6      	; 0x44f8 <SW_u8GetPressed+0x24>
    44f2:	8d 81       	ldd	r24, Y+5	; 0x05
    44f4:	81 30       	cpi	r24, 0x01	; 1
    44f6:	a1 f4       	brne	.+40     	; 0x4520 <SW_u8GetPressed+0x4c>
	{
		DIO_enumGetPinValue( SW_Config.PORT , SW_Config.PIN , &LOC_u8PinVal );
    44f8:	8b 81       	ldd	r24, Y+3	; 0x03
    44fa:	9c 81       	ldd	r25, Y+4	; 0x04
    44fc:	9e 01       	movw	r18, r28
    44fe:	2e 5f       	subi	r18, 0xFE	; 254
    4500:	3f 4f       	sbci	r19, 0xFF	; 255
    4502:	69 2f       	mov	r22, r25
    4504:	a9 01       	movw	r20, r18
    4506:	0e 94 b5 29 	call	0x536a	; 0x536a <DIO_enumGetPinValue>
		
		if (LOC_u8PinVal==0)
    450a:	8a 81       	ldd	r24, Y+2	; 0x02
    450c:	88 23       	and	r24, r24
    450e:	19 f4       	brne	.+6      	; 0x4516 <SW_u8GetPressed+0x42>
		{
			LOC_u8Result = SW_PRESSED ;
    4510:	81 e0       	ldi	r24, 0x01	; 1
    4512:	89 83       	std	Y+1, r24	; 0x01
    4514:	1b c0       	rjmp	.+54     	; 0x454c <SW_u8GetPressed+0x78>
		}
		else if (LOC_u8PinVal==1)
    4516:	8a 81       	ldd	r24, Y+2	; 0x02
    4518:	81 30       	cpi	r24, 0x01	; 1
    451a:	c1 f4       	brne	.+48     	; 0x454c <SW_u8GetPressed+0x78>
		{
			LOC_u8Result = SW_NOT_PRESSED ;
    451c:	19 82       	std	Y+1, r1	; 0x01
    451e:	16 c0       	rjmp	.+44     	; 0x454c <SW_u8GetPressed+0x78>
		}

	}
	else if (SW_Config.PULL_STATE == SW_EXT_PULL_DOWN)
    4520:	8d 81       	ldd	r24, Y+5	; 0x05
    4522:	82 30       	cpi	r24, 0x02	; 2
    4524:	99 f4       	brne	.+38     	; 0x454c <SW_u8GetPressed+0x78>
	{
		DIO_enumGetPinValue( SW_Config.PORT , SW_Config.PIN , &LOC_u8PinVal );
    4526:	8b 81       	ldd	r24, Y+3	; 0x03
    4528:	9c 81       	ldd	r25, Y+4	; 0x04
    452a:	9e 01       	movw	r18, r28
    452c:	2e 5f       	subi	r18, 0xFE	; 254
    452e:	3f 4f       	sbci	r19, 0xFF	; 255
    4530:	69 2f       	mov	r22, r25
    4532:	a9 01       	movw	r20, r18
    4534:	0e 94 b5 29 	call	0x536a	; 0x536a <DIO_enumGetPinValue>
		
		if (LOC_u8PinVal==0)
    4538:	8a 81       	ldd	r24, Y+2	; 0x02
    453a:	88 23       	and	r24, r24
    453c:	11 f4       	brne	.+4      	; 0x4542 <SW_u8GetPressed+0x6e>
		{
			LOC_u8Result = SW_NOT_PRESSED ;
    453e:	19 82       	std	Y+1, r1	; 0x01
    4540:	05 c0       	rjmp	.+10     	; 0x454c <SW_u8GetPressed+0x78>
		}
		else if (LOC_u8PinVal==1)
    4542:	8a 81       	ldd	r24, Y+2	; 0x02
    4544:	81 30       	cpi	r24, 0x01	; 1
    4546:	11 f4       	brne	.+4      	; 0x454c <SW_u8GetPressed+0x78>
		{
			LOC_u8Result = SW_PRESSED ;
    4548:	81 e0       	ldi	r24, 0x01	; 1
    454a:	89 83       	std	Y+1, r24	; 0x01
		}
	}
		
	return LOC_u8Result ;
    454c:	89 81       	ldd	r24, Y+1	; 0x01
	
}
    454e:	0f 90       	pop	r0
    4550:	0f 90       	pop	r0
    4552:	0f 90       	pop	r0
    4554:	0f 90       	pop	r0
    4556:	0f 90       	pop	r0
    4558:	cf 91       	pop	r28
    455a:	df 91       	pop	r29
    455c:	08 95       	ret

0000455e <BUZ_voidInit>:


#include "BUZ_interface.h"

void BUZ_voidInit(BUZ_Type BUZ_Configuration)
{
    455e:	df 93       	push	r29
    4560:	cf 93       	push	r28
    4562:	00 d0       	rcall	.+0      	; 0x4564 <BUZ_voidInit+0x6>
    4564:	0f 92       	push	r0
    4566:	cd b7       	in	r28, 0x3d	; 61
    4568:	de b7       	in	r29, 0x3e	; 62
    456a:	69 83       	std	Y+1, r22	; 0x01
    456c:	7a 83       	std	Y+2, r23	; 0x02
    456e:	8b 83       	std	Y+3, r24	; 0x03
	DIO_enumSetPinDirection(BUZ_Configuration.Port, BUZ_Configuration.Pin, DIO_PIN_OUTPUT);
    4570:	89 81       	ldd	r24, Y+1	; 0x01
    4572:	9a 81       	ldd	r25, Y+2	; 0x02
    4574:	69 2f       	mov	r22, r25
    4576:	41 e0       	ldi	r20, 0x01	; 1
    4578:	0e 94 97 27 	call	0x4f2e	; 0x4f2e <DIO_enumSetPinDirection>
}
    457c:	0f 90       	pop	r0
    457e:	0f 90       	pop	r0
    4580:	0f 90       	pop	r0
    4582:	cf 91       	pop	r28
    4584:	df 91       	pop	r29
    4586:	08 95       	ret

00004588 <BUZ_voidON>:

void BUZ_voidON(BUZ_Type BUZ_Configuration)
{
    4588:	df 93       	push	r29
    458a:	cf 93       	push	r28
    458c:	00 d0       	rcall	.+0      	; 0x458e <BUZ_voidON+0x6>
    458e:	0f 92       	push	r0
    4590:	cd b7       	in	r28, 0x3d	; 61
    4592:	de b7       	in	r29, 0x3e	; 62
    4594:	69 83       	std	Y+1, r22	; 0x01
    4596:	7a 83       	std	Y+2, r23	; 0x02
    4598:	8b 83       	std	Y+3, r24	; 0x03
	if(BUZ_Configuration.Active_State == ACTIVE_HIGH)
    459a:	8b 81       	ldd	r24, Y+3	; 0x03
    459c:	81 30       	cpi	r24, 0x01	; 1
    459e:	39 f4       	brne	.+14     	; 0x45ae <BUZ_voidON+0x26>
	{
		DIO_enumSetPinValue(BUZ_Configuration.Port, BUZ_Configuration.Pin, DIO_PIN_HIGH);
    45a0:	89 81       	ldd	r24, Y+1	; 0x01
    45a2:	9a 81       	ldd	r25, Y+2	; 0x02
    45a4:	69 2f       	mov	r22, r25
    45a6:	41 e0       	ldi	r20, 0x01	; 1
    45a8:	0e 94 a6 28 	call	0x514c	; 0x514c <DIO_enumSetPinValue>
    45ac:	06 c0       	rjmp	.+12     	; 0x45ba <BUZ_voidON+0x32>
	}
	
	else
	{
		DIO_enumSetPinValue(BUZ_Configuration.Port, BUZ_Configuration.Pin, DIO_PIN_LOW);
    45ae:	89 81       	ldd	r24, Y+1	; 0x01
    45b0:	9a 81       	ldd	r25, Y+2	; 0x02
    45b2:	69 2f       	mov	r22, r25
    45b4:	40 e0       	ldi	r20, 0x00	; 0
    45b6:	0e 94 a6 28 	call	0x514c	; 0x514c <DIO_enumSetPinValue>
	}
}
    45ba:	0f 90       	pop	r0
    45bc:	0f 90       	pop	r0
    45be:	0f 90       	pop	r0
    45c0:	cf 91       	pop	r28
    45c2:	df 91       	pop	r29
    45c4:	08 95       	ret

000045c6 <BUZ_voidOff>:

void BUZ_voidOff ( BUZ_Type BUZ_Configuration )
{
    45c6:	df 93       	push	r29
    45c8:	cf 93       	push	r28
    45ca:	00 d0       	rcall	.+0      	; 0x45cc <BUZ_voidOff+0x6>
    45cc:	0f 92       	push	r0
    45ce:	cd b7       	in	r28, 0x3d	; 61
    45d0:	de b7       	in	r29, 0x3e	; 62
    45d2:	69 83       	std	Y+1, r22	; 0x01
    45d4:	7a 83       	std	Y+2, r23	; 0x02
    45d6:	8b 83       	std	Y+3, r24	; 0x03

	if( BUZ_Configuration.Active_State == ACTIVE_HIGH ){
    45d8:	8b 81       	ldd	r24, Y+3	; 0x03
    45da:	81 30       	cpi	r24, 0x01	; 1
    45dc:	39 f4       	brne	.+14     	; 0x45ec <BUZ_voidOff+0x26>

		DIO_enumSetPinValue( BUZ_Configuration.Port , BUZ_Configuration.Pin , DIO_PIN_LOW  );
    45de:	89 81       	ldd	r24, Y+1	; 0x01
    45e0:	9a 81       	ldd	r25, Y+2	; 0x02
    45e2:	69 2f       	mov	r22, r25
    45e4:	40 e0       	ldi	r20, 0x00	; 0
    45e6:	0e 94 a6 28 	call	0x514c	; 0x514c <DIO_enumSetPinValue>
    45ea:	09 c0       	rjmp	.+18     	; 0x45fe <BUZ_voidOff+0x38>

	}else if( BUZ_Configuration.Active_State == ACTIVE_LOW ){
    45ec:	8b 81       	ldd	r24, Y+3	; 0x03
    45ee:	88 23       	and	r24, r24
    45f0:	31 f4       	brne	.+12     	; 0x45fe <BUZ_voidOff+0x38>

		DIO_enumSetPinValue( BUZ_Configuration.Port , BUZ_Configuration.Pin , DIO_PIN_HIGH  );
    45f2:	89 81       	ldd	r24, Y+1	; 0x01
    45f4:	9a 81       	ldd	r25, Y+2	; 0x02
    45f6:	69 2f       	mov	r22, r25
    45f8:	41 e0       	ldi	r20, 0x01	; 1
    45fa:	0e 94 a6 28 	call	0x514c	; 0x514c <DIO_enumSetPinValue>

	}

}
    45fe:	0f 90       	pop	r0
    4600:	0f 90       	pop	r0
    4602:	0f 90       	pop	r0
    4604:	cf 91       	pop	r28
    4606:	df 91       	pop	r29
    4608:	08 95       	ret

0000460a <BUZ_voidToggle>:


void BUZ_voidToggle(BUZ_Type BUZ_Configuration)
{
    460a:	df 93       	push	r29
    460c:	cf 93       	push	r28
    460e:	00 d0       	rcall	.+0      	; 0x4610 <BUZ_voidToggle+0x6>
    4610:	0f 92       	push	r0
    4612:	cd b7       	in	r28, 0x3d	; 61
    4614:	de b7       	in	r29, 0x3e	; 62
    4616:	69 83       	std	Y+1, r22	; 0x01
    4618:	7a 83       	std	Y+2, r23	; 0x02
    461a:	8b 83       	std	Y+3, r24	; 0x03
	DIO_enumTogglePinValue(BUZ_Configuration.Port, BUZ_Configuration.Pin);
    461c:	89 81       	ldd	r24, Y+1	; 0x01
    461e:	9a 81       	ldd	r25, Y+2	; 0x02
    4620:	69 2f       	mov	r22, r25
    4622:	0e 94 7a 2a 	call	0x54f4	; 0x54f4 <DIO_enumTogglePinValue>
}
    4626:	0f 90       	pop	r0
    4628:	0f 90       	pop	r0
    462a:	0f 90       	pop	r0
    462c:	cf 91       	pop	r28
    462e:	df 91       	pop	r29
    4630:	08 95       	ret

00004632 <LED_voidInit>:
#include "LED_interface.h"



void LED_voidInit(LED_Type LED_Configuration)
{
    4632:	df 93       	push	r29
    4634:	cf 93       	push	r28
    4636:	00 d0       	rcall	.+0      	; 0x4638 <LED_voidInit+0x6>
    4638:	0f 92       	push	r0
    463a:	cd b7       	in	r28, 0x3d	; 61
    463c:	de b7       	in	r29, 0x3e	; 62
    463e:	69 83       	std	Y+1, r22	; 0x01
    4640:	7a 83       	std	Y+2, r23	; 0x02
    4642:	8b 83       	std	Y+3, r24	; 0x03
	DIO_enumSetPinDirection(LED_Configuration.port, LED_Configuration.pin, DIO_PIN_OUTPUT);
    4644:	89 81       	ldd	r24, Y+1	; 0x01
    4646:	9a 81       	ldd	r25, Y+2	; 0x02
    4648:	69 2f       	mov	r22, r25
    464a:	41 e0       	ldi	r20, 0x01	; 1
    464c:	0e 94 97 27 	call	0x4f2e	; 0x4f2e <DIO_enumSetPinDirection>
}
    4650:	0f 90       	pop	r0
    4652:	0f 90       	pop	r0
    4654:	0f 90       	pop	r0
    4656:	cf 91       	pop	r28
    4658:	df 91       	pop	r29
    465a:	08 95       	ret

0000465c <LED_voidON>:

void LED_voidON(LED_Type LED_Configuration)
{
    465c:	df 93       	push	r29
    465e:	cf 93       	push	r28
    4660:	00 d0       	rcall	.+0      	; 0x4662 <LED_voidON+0x6>
    4662:	0f 92       	push	r0
    4664:	cd b7       	in	r28, 0x3d	; 61
    4666:	de b7       	in	r29, 0x3e	; 62
    4668:	69 83       	std	Y+1, r22	; 0x01
    466a:	7a 83       	std	Y+2, r23	; 0x02
    466c:	8b 83       	std	Y+3, r24	; 0x03
	if(LED_Configuration.Active_State == ACTIVE_HIGH)
    466e:	8b 81       	ldd	r24, Y+3	; 0x03
    4670:	81 30       	cpi	r24, 0x01	; 1
    4672:	39 f4       	brne	.+14     	; 0x4682 <LED_voidON+0x26>
	{
		DIO_enumSetPinValue(LED_Configuration.port, LED_Configuration.pin, DIO_PIN_HIGH);
    4674:	89 81       	ldd	r24, Y+1	; 0x01
    4676:	9a 81       	ldd	r25, Y+2	; 0x02
    4678:	69 2f       	mov	r22, r25
    467a:	41 e0       	ldi	r20, 0x01	; 1
    467c:	0e 94 a6 28 	call	0x514c	; 0x514c <DIO_enumSetPinValue>
    4680:	06 c0       	rjmp	.+12     	; 0x468e <LED_voidON+0x32>
	}
	
	else
	{
		DIO_enumSetPinValue(LED_Configuration.port, LED_Configuration.pin, DIO_PIN_LOW);
    4682:	89 81       	ldd	r24, Y+1	; 0x01
    4684:	9a 81       	ldd	r25, Y+2	; 0x02
    4686:	69 2f       	mov	r22, r25
    4688:	40 e0       	ldi	r20, 0x00	; 0
    468a:	0e 94 a6 28 	call	0x514c	; 0x514c <DIO_enumSetPinValue>
	}
}
    468e:	0f 90       	pop	r0
    4690:	0f 90       	pop	r0
    4692:	0f 90       	pop	r0
    4694:	cf 91       	pop	r28
    4696:	df 91       	pop	r29
    4698:	08 95       	ret

0000469a <LED_voidOff>:

void LED_voidOff ( LED_Type LED_Configuration )
{
    469a:	df 93       	push	r29
    469c:	cf 93       	push	r28
    469e:	00 d0       	rcall	.+0      	; 0x46a0 <LED_voidOff+0x6>
    46a0:	0f 92       	push	r0
    46a2:	cd b7       	in	r28, 0x3d	; 61
    46a4:	de b7       	in	r29, 0x3e	; 62
    46a6:	69 83       	std	Y+1, r22	; 0x01
    46a8:	7a 83       	std	Y+2, r23	; 0x02
    46aa:	8b 83       	std	Y+3, r24	; 0x03

	if( LED_Configuration.Active_State == ACTIVE_HIGH ){
    46ac:	8b 81       	ldd	r24, Y+3	; 0x03
    46ae:	81 30       	cpi	r24, 0x01	; 1
    46b0:	39 f4       	brne	.+14     	; 0x46c0 <LED_voidOff+0x26>

		DIO_enumSetPinValue( LED_Configuration.port , LED_Configuration.pin , DIO_PIN_LOW  );
    46b2:	89 81       	ldd	r24, Y+1	; 0x01
    46b4:	9a 81       	ldd	r25, Y+2	; 0x02
    46b6:	69 2f       	mov	r22, r25
    46b8:	40 e0       	ldi	r20, 0x00	; 0
    46ba:	0e 94 a6 28 	call	0x514c	; 0x514c <DIO_enumSetPinValue>
    46be:	09 c0       	rjmp	.+18     	; 0x46d2 <LED_voidOff+0x38>

	}else if( LED_Configuration.Active_State == ACTIVE_LOW ){
    46c0:	8b 81       	ldd	r24, Y+3	; 0x03
    46c2:	88 23       	and	r24, r24
    46c4:	31 f4       	brne	.+12     	; 0x46d2 <LED_voidOff+0x38>

		DIO_enumSetPinValue( LED_Configuration.port , LED_Configuration.pin , DIO_PIN_HIGH  );
    46c6:	89 81       	ldd	r24, Y+1	; 0x01
    46c8:	9a 81       	ldd	r25, Y+2	; 0x02
    46ca:	69 2f       	mov	r22, r25
    46cc:	41 e0       	ldi	r20, 0x01	; 1
    46ce:	0e 94 a6 28 	call	0x514c	; 0x514c <DIO_enumSetPinValue>

	}

}
    46d2:	0f 90       	pop	r0
    46d4:	0f 90       	pop	r0
    46d6:	0f 90       	pop	r0
    46d8:	cf 91       	pop	r28
    46da:	df 91       	pop	r29
    46dc:	08 95       	ret

000046de <LED_voidToggle>:


void LED_voidToggle(LED_Type LED_Configuration)
{
    46de:	df 93       	push	r29
    46e0:	cf 93       	push	r28
    46e2:	00 d0       	rcall	.+0      	; 0x46e4 <LED_voidToggle+0x6>
    46e4:	0f 92       	push	r0
    46e6:	cd b7       	in	r28, 0x3d	; 61
    46e8:	de b7       	in	r29, 0x3e	; 62
    46ea:	69 83       	std	Y+1, r22	; 0x01
    46ec:	7a 83       	std	Y+2, r23	; 0x02
    46ee:	8b 83       	std	Y+3, r24	; 0x03
	DIO_enumTogglePinValue(LED_Configuration.port, LED_Configuration.pin);
    46f0:	89 81       	ldd	r24, Y+1	; 0x01
    46f2:	9a 81       	ldd	r25, Y+2	; 0x02
    46f4:	69 2f       	mov	r22, r25
    46f6:	0e 94 7a 2a 	call	0x54f4	; 0x54f4 <DIO_enumTogglePinValue>
}
    46fa:	0f 90       	pop	r0
    46fc:	0f 90       	pop	r0
    46fe:	0f 90       	pop	r0
    4700:	cf 91       	pop	r28
    4702:	df 91       	pop	r29
    4704:	08 95       	ret

00004706 <GIE_voidEnable>:
#include "../../4-LIB/BIT_MATH.h"
#include "GIE_private.h"
#include "GIE_interface.h"

void GIE_voidEnable(void)
{
    4706:	df 93       	push	r29
    4708:	cf 93       	push	r28
    470a:	cd b7       	in	r28, 0x3d	; 61
    470c:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(SREG, I_Bit);
    470e:	af e5       	ldi	r26, 0x5F	; 95
    4710:	b0 e0       	ldi	r27, 0x00	; 0
    4712:	ef e5       	ldi	r30, 0x5F	; 95
    4714:	f0 e0       	ldi	r31, 0x00	; 0
    4716:	80 81       	ld	r24, Z
    4718:	80 68       	ori	r24, 0x80	; 128
    471a:	8c 93       	st	X, r24
}
    471c:	cf 91       	pop	r28
    471e:	df 91       	pop	r29
    4720:	08 95       	ret

00004722 <GIE_voidDisable>:

void GIE_voidDisable(void)
{
    4722:	df 93       	push	r29
    4724:	cf 93       	push	r28
    4726:	cd b7       	in	r28, 0x3d	; 61
    4728:	de b7       	in	r29, 0x3e	; 62
	CLR_BIT(SREG, I_Bit);
    472a:	af e5       	ldi	r26, 0x5F	; 95
    472c:	b0 e0       	ldi	r27, 0x00	; 0
    472e:	ef e5       	ldi	r30, 0x5F	; 95
    4730:	f0 e0       	ldi	r31, 0x00	; 0
    4732:	80 81       	ld	r24, Z
    4734:	8f 77       	andi	r24, 0x7F	; 127
    4736:	8c 93       	st	X, r24
}
    4738:	cf 91       	pop	r28
    473a:	df 91       	pop	r29
    473c:	08 95       	ret

0000473e <TMR1_voidInitFAST_PWM>:
#include "TMR1_config.h"

static void (*TMR1_CALL_BACK_PF)(void) = NULL;

void TMR1_voidInitFAST_PWM(u16 period_us)
{
    473e:	df 93       	push	r29
    4740:	cf 93       	push	r28
    4742:	00 d0       	rcall	.+0      	; 0x4744 <TMR1_voidInitFAST_PWM+0x6>
    4744:	cd b7       	in	r28, 0x3d	; 61
    4746:	de b7       	in	r29, 0x3e	; 62
    4748:	9a 83       	std	Y+2, r25	; 0x02
    474a:	89 83       	std	Y+1, r24	; 0x01
	/*  Normal port operation, OC1A/OC1B disconnected */
	CLR_BIT(TCCR1A, COM1A1); CLR_BIT(TCCR1A, COM1A1);
    474c:	af e4       	ldi	r26, 0x4F	; 79
    474e:	b0 e0       	ldi	r27, 0x00	; 0
    4750:	ef e4       	ldi	r30, 0x4F	; 79
    4752:	f0 e0       	ldi	r31, 0x00	; 0
    4754:	80 81       	ld	r24, Z
    4756:	8f 77       	andi	r24, 0x7F	; 127
    4758:	8c 93       	st	X, r24
    475a:	af e4       	ldi	r26, 0x4F	; 79
    475c:	b0 e0       	ldi	r27, 0x00	; 0
    475e:	ef e4       	ldi	r30, 0x4F	; 79
    4760:	f0 e0       	ldi	r31, 0x00	; 0
    4762:	80 81       	ld	r24, Z
    4764:	8f 77       	andi	r24, 0x7F	; 127
    4766:	8c 93       	st	X, r24
	CLR_BIT(TCCR1A, COM1B1); CLR_BIT(TCCR1A, COM1B1);
    4768:	af e4       	ldi	r26, 0x4F	; 79
    476a:	b0 e0       	ldi	r27, 0x00	; 0
    476c:	ef e4       	ldi	r30, 0x4F	; 79
    476e:	f0 e0       	ldi	r31, 0x00	; 0
    4770:	80 81       	ld	r24, Z
    4772:	8f 7d       	andi	r24, 0xDF	; 223
    4774:	8c 93       	st	X, r24
    4776:	af e4       	ldi	r26, 0x4F	; 79
    4778:	b0 e0       	ldi	r27, 0x00	; 0
    477a:	ef e4       	ldi	r30, 0x4F	; 79
    477c:	f0 e0       	ldi	r31, 0x00	; 0
    477e:	80 81       	ld	r24, Z
    4780:	8f 7d       	andi	r24, 0xDF	; 223
    4782:	8c 93       	st	X, r24
	
	/*MODE 14 FAST PWM*/
	SET_BIT(TCCR1B, WGM13); SET_BIT(TCCR1B, WGM12);
    4784:	ae e4       	ldi	r26, 0x4E	; 78
    4786:	b0 e0       	ldi	r27, 0x00	; 0
    4788:	ee e4       	ldi	r30, 0x4E	; 78
    478a:	f0 e0       	ldi	r31, 0x00	; 0
    478c:	80 81       	ld	r24, Z
    478e:	80 61       	ori	r24, 0x10	; 16
    4790:	8c 93       	st	X, r24
    4792:	ae e4       	ldi	r26, 0x4E	; 78
    4794:	b0 e0       	ldi	r27, 0x00	; 0
    4796:	ee e4       	ldi	r30, 0x4E	; 78
    4798:	f0 e0       	ldi	r31, 0x00	; 0
    479a:	80 81       	ld	r24, Z
    479c:	88 60       	ori	r24, 0x08	; 8
    479e:	8c 93       	st	X, r24
	SET_BIT(TCCR1A, WGM11); CLR_BIT(TCCR1A, WGM10);
    47a0:	af e4       	ldi	r26, 0x4F	; 79
    47a2:	b0 e0       	ldi	r27, 0x00	; 0
    47a4:	ef e4       	ldi	r30, 0x4F	; 79
    47a6:	f0 e0       	ldi	r31, 0x00	; 0
    47a8:	80 81       	ld	r24, Z
    47aa:	82 60       	ori	r24, 0x02	; 2
    47ac:	8c 93       	st	X, r24
    47ae:	af e4       	ldi	r26, 0x4F	; 79
    47b0:	b0 e0       	ldi	r27, 0x00	; 0
    47b2:	ef e4       	ldi	r30, 0x4F	; 79
    47b4:	f0 e0       	ldi	r31, 0x00	; 0
    47b6:	80 81       	ld	r24, Z
    47b8:	8e 7f       	andi	r24, 0xFE	; 254
    47ba:	8c 93       	st	X, r24
	
	/* SELECT OC1A MODE */
	TCCR1A &= ~(0b11 << COM1A0);
    47bc:	af e4       	ldi	r26, 0x4F	; 79
    47be:	b0 e0       	ldi	r27, 0x00	; 0
    47c0:	ef e4       	ldi	r30, 0x4F	; 79
    47c2:	f0 e0       	ldi	r31, 0x00	; 0
    47c4:	80 81       	ld	r24, Z
    47c6:	8f 73       	andi	r24, 0x3F	; 63
    47c8:	8c 93       	st	X, r24
	TCCR1A |= TMR1_PWM_OC1A_MODE << COM1A0;
    47ca:	af e4       	ldi	r26, 0x4F	; 79
    47cc:	b0 e0       	ldi	r27, 0x00	; 0
    47ce:	ef e4       	ldi	r30, 0x4F	; 79
    47d0:	f0 e0       	ldi	r31, 0x00	; 0
    47d2:	80 81       	ld	r24, Z
    47d4:	80 68       	ori	r24, 0x80	; 128
    47d6:	8c 93       	st	X, r24

	/* SELECT OC1B MODE */
	TCCR1A &= ~(0b11 << COM1B0);
    47d8:	af e4       	ldi	r26, 0x4F	; 79
    47da:	b0 e0       	ldi	r27, 0x00	; 0
    47dc:	ef e4       	ldi	r30, 0x4F	; 79
    47de:	f0 e0       	ldi	r31, 0x00	; 0
    47e0:	80 81       	ld	r24, Z
    47e2:	8f 7c       	andi	r24, 0xCF	; 207
    47e4:	8c 93       	st	X, r24
	TCCR1A |= TMR1_PWM_OC1B_MODE << COM1B0;
    47e6:	af e4       	ldi	r26, 0x4F	; 79
    47e8:	b0 e0       	ldi	r27, 0x00	; 0
    47ea:	ef e4       	ldi	r30, 0x4F	; 79
    47ec:	f0 e0       	ldi	r31, 0x00	; 0
    47ee:	80 81       	ld	r24, Z
    47f0:	80 63       	ori	r24, 0x30	; 48
    47f2:	8c 93       	st	X, r24

	ICR1A_ALL = period_us;
    47f4:	e6 e4       	ldi	r30, 0x46	; 70
    47f6:	f0 e0       	ldi	r31, 0x00	; 0
    47f8:	89 81       	ldd	r24, Y+1	; 0x01
    47fa:	9a 81       	ldd	r25, Y+2	; 0x02
    47fc:	91 83       	std	Z+1, r25	; 0x01
    47fe:	80 83       	st	Z, r24
	
	/* CLOCK SELECT F/8 */ 
	CLR_BIT(TCCR1B, CS12); SET_BIT(TCCR1B, CS11); CLR_BIT(TCCR1B, CS10);
    4800:	ae e4       	ldi	r26, 0x4E	; 78
    4802:	b0 e0       	ldi	r27, 0x00	; 0
    4804:	ee e4       	ldi	r30, 0x4E	; 78
    4806:	f0 e0       	ldi	r31, 0x00	; 0
    4808:	80 81       	ld	r24, Z
    480a:	8b 7f       	andi	r24, 0xFB	; 251
    480c:	8c 93       	st	X, r24
    480e:	ae e4       	ldi	r26, 0x4E	; 78
    4810:	b0 e0       	ldi	r27, 0x00	; 0
    4812:	ee e4       	ldi	r30, 0x4E	; 78
    4814:	f0 e0       	ldi	r31, 0x00	; 0
    4816:	80 81       	ld	r24, Z
    4818:	82 60       	ori	r24, 0x02	; 2
    481a:	8c 93       	st	X, r24
    481c:	ae e4       	ldi	r26, 0x4E	; 78
    481e:	b0 e0       	ldi	r27, 0x00	; 0
    4820:	ee e4       	ldi	r30, 0x4E	; 78
    4822:	f0 e0       	ldi	r31, 0x00	; 0
    4824:	80 81       	ld	r24, Z
    4826:	8e 7f       	andi	r24, 0xFE	; 254
    4828:	8c 93       	st	X, r24
}
    482a:	0f 90       	pop	r0
    482c:	0f 90       	pop	r0
    482e:	cf 91       	pop	r28
    4830:	df 91       	pop	r29
    4832:	08 95       	ret

00004834 <TMR1_voidSetDutyCycle>:

void TMR1_voidSetDutyCycle(u8 channel, u16 DC_us)
{
    4834:	df 93       	push	r29
    4836:	cf 93       	push	r28
    4838:	00 d0       	rcall	.+0      	; 0x483a <TMR1_voidSetDutyCycle+0x6>
    483a:	00 d0       	rcall	.+0      	; 0x483c <TMR1_voidSetDutyCycle+0x8>
    483c:	0f 92       	push	r0
    483e:	cd b7       	in	r28, 0x3d	; 61
    4840:	de b7       	in	r29, 0x3e	; 62
    4842:	89 83       	std	Y+1, r24	; 0x01
    4844:	7b 83       	std	Y+3, r23	; 0x03
    4846:	6a 83       	std	Y+2, r22	; 0x02
	switch(channel)
    4848:	89 81       	ldd	r24, Y+1	; 0x01
    484a:	28 2f       	mov	r18, r24
    484c:	30 e0       	ldi	r19, 0x00	; 0
    484e:	3d 83       	std	Y+5, r19	; 0x05
    4850:	2c 83       	std	Y+4, r18	; 0x04
    4852:	8c 81       	ldd	r24, Y+4	; 0x04
    4854:	9d 81       	ldd	r25, Y+5	; 0x05
    4856:	00 97       	sbiw	r24, 0x00	; 0
    4858:	31 f0       	breq	.+12     	; 0x4866 <TMR1_voidSetDutyCycle+0x32>
    485a:	2c 81       	ldd	r18, Y+4	; 0x04
    485c:	3d 81       	ldd	r19, Y+5	; 0x05
    485e:	21 30       	cpi	r18, 0x01	; 1
    4860:	31 05       	cpc	r19, r1
    4862:	41 f0       	breq	.+16     	; 0x4874 <TMR1_voidSetDutyCycle+0x40>
    4864:	0d c0       	rjmp	.+26     	; 0x4880 <TMR1_voidSetDutyCycle+0x4c>
	{
	case PWM_OCR1A:	OCR1A_ALL = DC_us; break;
    4866:	ea e4       	ldi	r30, 0x4A	; 74
    4868:	f0 e0       	ldi	r31, 0x00	; 0
    486a:	8a 81       	ldd	r24, Y+2	; 0x02
    486c:	9b 81       	ldd	r25, Y+3	; 0x03
    486e:	91 83       	std	Z+1, r25	; 0x01
    4870:	80 83       	st	Z, r24
    4872:	06 c0       	rjmp	.+12     	; 0x4880 <TMR1_voidSetDutyCycle+0x4c>
	case PWM_OCR1B:	OCR1B_ALL = DC_us; break;
    4874:	e8 e4       	ldi	r30, 0x48	; 72
    4876:	f0 e0       	ldi	r31, 0x00	; 0
    4878:	8a 81       	ldd	r24, Y+2	; 0x02
    487a:	9b 81       	ldd	r25, Y+3	; 0x03
    487c:	91 83       	std	Z+1, r25	; 0x01
    487e:	80 83       	st	Z, r24
	}
}
    4880:	0f 90       	pop	r0
    4882:	0f 90       	pop	r0
    4884:	0f 90       	pop	r0
    4886:	0f 90       	pop	r0
    4888:	0f 90       	pop	r0
    488a:	cf 91       	pop	r28
    488c:	df 91       	pop	r29
    488e:	08 95       	ret

00004890 <TMR1_voidICU_Init>:


/* ICU */
void TMR1_voidICU_Init(void)
{
    4890:	df 93       	push	r29
    4892:	cf 93       	push	r28
    4894:	cd b7       	in	r28, 0x3d	; 61
    4896:	de b7       	in	r29, 0x3e	; 62
	/* OVF MODE ENABLE */
	CLR_BIT(TCCR1A, WGM10); CLR_BIT(TCCR1A, WGM11);
    4898:	af e4       	ldi	r26, 0x4F	; 79
    489a:	b0 e0       	ldi	r27, 0x00	; 0
    489c:	ef e4       	ldi	r30, 0x4F	; 79
    489e:	f0 e0       	ldi	r31, 0x00	; 0
    48a0:	80 81       	ld	r24, Z
    48a2:	8e 7f       	andi	r24, 0xFE	; 254
    48a4:	8c 93       	st	X, r24
    48a6:	af e4       	ldi	r26, 0x4F	; 79
    48a8:	b0 e0       	ldi	r27, 0x00	; 0
    48aa:	ef e4       	ldi	r30, 0x4F	; 79
    48ac:	f0 e0       	ldi	r31, 0x00	; 0
    48ae:	80 81       	ld	r24, Z
    48b0:	8d 7f       	andi	r24, 0xFD	; 253
    48b2:	8c 93       	st	X, r24
	CLR_BIT(TCCR1B, WGM12); CLR_BIT(TCCR1A, WGM13);
    48b4:	ae e4       	ldi	r26, 0x4E	; 78
    48b6:	b0 e0       	ldi	r27, 0x00	; 0
    48b8:	ee e4       	ldi	r30, 0x4E	; 78
    48ba:	f0 e0       	ldi	r31, 0x00	; 0
    48bc:	80 81       	ld	r24, Z
    48be:	87 7f       	andi	r24, 0xF7	; 247
    48c0:	8c 93       	st	X, r24
    48c2:	af e4       	ldi	r26, 0x4F	; 79
    48c4:	b0 e0       	ldi	r27, 0x00	; 0
    48c6:	ef e4       	ldi	r30, 0x4F	; 79
    48c8:	f0 e0       	ldi	r31, 0x00	; 0
    48ca:	80 81       	ld	r24, Z
    48cc:	8f 7e       	andi	r24, 0xEF	; 239
    48ce:	8c 93       	st	X, r24
	
	/* ICU INT ENABLE */
	SET_BIT(TIMSK, 5);
    48d0:	a9 e5       	ldi	r26, 0x59	; 89
    48d2:	b0 e0       	ldi	r27, 0x00	; 0
    48d4:	e9 e5       	ldi	r30, 0x59	; 89
    48d6:	f0 e0       	ldi	r31, 0x00	; 0
    48d8:	80 81       	ld	r24, Z
    48da:	80 62       	ori	r24, 0x20	; 32
    48dc:	8c 93       	st	X, r24
	
	/* CLOCK SELECT F/8 */ 
	CLR_BIT(TCCR1B, CS12); SET_BIT(TCCR1B, CS11); CLR_BIT(TCCR1B, CS10);
    48de:	ae e4       	ldi	r26, 0x4E	; 78
    48e0:	b0 e0       	ldi	r27, 0x00	; 0
    48e2:	ee e4       	ldi	r30, 0x4E	; 78
    48e4:	f0 e0       	ldi	r31, 0x00	; 0
    48e6:	80 81       	ld	r24, Z
    48e8:	8b 7f       	andi	r24, 0xFB	; 251
    48ea:	8c 93       	st	X, r24
    48ec:	ae e4       	ldi	r26, 0x4E	; 78
    48ee:	b0 e0       	ldi	r27, 0x00	; 0
    48f0:	ee e4       	ldi	r30, 0x4E	; 78
    48f2:	f0 e0       	ldi	r31, 0x00	; 0
    48f4:	80 81       	ld	r24, Z
    48f6:	82 60       	ori	r24, 0x02	; 2
    48f8:	8c 93       	st	X, r24
    48fa:	ae e4       	ldi	r26, 0x4E	; 78
    48fc:	b0 e0       	ldi	r27, 0x00	; 0
    48fe:	ee e4       	ldi	r30, 0x4E	; 78
    4900:	f0 e0       	ldi	r31, 0x00	; 0
    4902:	80 81       	ld	r24, Z
    4904:	8e 7f       	andi	r24, 0xFE	; 254
    4906:	8c 93       	st	X, r24
}
    4908:	cf 91       	pop	r28
    490a:	df 91       	pop	r29
    490c:	08 95       	ret

0000490e <TMR1_u16ICU_Read>:

u16 TMR1_u16ICU_Read(void)
{
    490e:	df 93       	push	r29
    4910:	cf 93       	push	r28
    4912:	cd b7       	in	r28, 0x3d	; 61
    4914:	de b7       	in	r29, 0x3e	; 62
	return ICR1A_ALL;
    4916:	e6 e4       	ldi	r30, 0x46	; 70
    4918:	f0 e0       	ldi	r31, 0x00	; 0
    491a:	80 81       	ld	r24, Z
    491c:	91 81       	ldd	r25, Z+1	; 0x01
}
    491e:	cf 91       	pop	r28
    4920:	df 91       	pop	r29
    4922:	08 95       	ret

00004924 <TMR1_voidICU_SetEdge>:

void TMR1_voidICU_SetEdge(u8 edge)
{
    4924:	df 93       	push	r29
    4926:	cf 93       	push	r28
    4928:	00 d0       	rcall	.+0      	; 0x492a <TMR1_voidICU_SetEdge+0x6>
    492a:	0f 92       	push	r0
    492c:	cd b7       	in	r28, 0x3d	; 61
    492e:	de b7       	in	r29, 0x3e	; 62
    4930:	89 83       	std	Y+1, r24	; 0x01
	switch(edge)
    4932:	89 81       	ldd	r24, Y+1	; 0x01
    4934:	28 2f       	mov	r18, r24
    4936:	30 e0       	ldi	r19, 0x00	; 0
    4938:	3b 83       	std	Y+3, r19	; 0x03
    493a:	2a 83       	std	Y+2, r18	; 0x02
    493c:	8a 81       	ldd	r24, Y+2	; 0x02
    493e:	9b 81       	ldd	r25, Y+3	; 0x03
    4940:	00 97       	sbiw	r24, 0x00	; 0
    4942:	31 f0       	breq	.+12     	; 0x4950 <TMR1_voidICU_SetEdge+0x2c>
    4944:	2a 81       	ldd	r18, Y+2	; 0x02
    4946:	3b 81       	ldd	r19, Y+3	; 0x03
    4948:	21 30       	cpi	r18, 0x01	; 1
    494a:	31 05       	cpc	r19, r1
    494c:	49 f0       	breq	.+18     	; 0x4960 <TMR1_voidICU_SetEdge+0x3c>
    494e:	0f c0       	rjmp	.+30     	; 0x496e <TMR1_voidICU_SetEdge+0x4a>
	{
	case ICU_FALLING_EDGE : CLR_BIT(TCCR1B, ICES1); break;
    4950:	ae e4       	ldi	r26, 0x4E	; 78
    4952:	b0 e0       	ldi	r27, 0x00	; 0
    4954:	ee e4       	ldi	r30, 0x4E	; 78
    4956:	f0 e0       	ldi	r31, 0x00	; 0
    4958:	80 81       	ld	r24, Z
    495a:	8f 7b       	andi	r24, 0xBF	; 191
    495c:	8c 93       	st	X, r24
    495e:	07 c0       	rjmp	.+14     	; 0x496e <TMR1_voidICU_SetEdge+0x4a>
	case ICU_RISING_EDGE  : SET_BIT(TCCR1B, ICES1); break;
    4960:	ae e4       	ldi	r26, 0x4E	; 78
    4962:	b0 e0       	ldi	r27, 0x00	; 0
    4964:	ee e4       	ldi	r30, 0x4E	; 78
    4966:	f0 e0       	ldi	r31, 0x00	; 0
    4968:	80 81       	ld	r24, Z
    496a:	80 64       	ori	r24, 0x40	; 64
    496c:	8c 93       	st	X, r24
	}
}
    496e:	0f 90       	pop	r0
    4970:	0f 90       	pop	r0
    4972:	0f 90       	pop	r0
    4974:	cf 91       	pop	r28
    4976:	df 91       	pop	r29
    4978:	08 95       	ret

0000497a <TMR1_voidSetCallBack>:

void TMR1_voidSetCallBack(void (*pf)(void))
{
    497a:	df 93       	push	r29
    497c:	cf 93       	push	r28
    497e:	00 d0       	rcall	.+0      	; 0x4980 <TMR1_voidSetCallBack+0x6>
    4980:	cd b7       	in	r28, 0x3d	; 61
    4982:	de b7       	in	r29, 0x3e	; 62
    4984:	9a 83       	std	Y+2, r25	; 0x02
    4986:	89 83       	std	Y+1, r24	; 0x01
	TMR1_CALL_BACK_PF = pf;
    4988:	89 81       	ldd	r24, Y+1	; 0x01
    498a:	9a 81       	ldd	r25, Y+2	; 0x02
    498c:	90 93 a8 01 	sts	0x01A8, r25
    4990:	80 93 a7 01 	sts	0x01A7, r24
}
    4994:	0f 90       	pop	r0
    4996:	0f 90       	pop	r0
    4998:	cf 91       	pop	r28
    499a:	df 91       	pop	r29
    499c:	08 95       	ret

0000499e <__vector_6>:

void __vector_6(void) __attribute__((signal));
void __vector_6(void)
{
    499e:	1f 92       	push	r1
    49a0:	0f 92       	push	r0
    49a2:	0f b6       	in	r0, 0x3f	; 63
    49a4:	0f 92       	push	r0
    49a6:	11 24       	eor	r1, r1
    49a8:	2f 93       	push	r18
    49aa:	3f 93       	push	r19
    49ac:	4f 93       	push	r20
    49ae:	5f 93       	push	r21
    49b0:	6f 93       	push	r22
    49b2:	7f 93       	push	r23
    49b4:	8f 93       	push	r24
    49b6:	9f 93       	push	r25
    49b8:	af 93       	push	r26
    49ba:	bf 93       	push	r27
    49bc:	ef 93       	push	r30
    49be:	ff 93       	push	r31
    49c0:	df 93       	push	r29
    49c2:	cf 93       	push	r28
    49c4:	cd b7       	in	r28, 0x3d	; 61
    49c6:	de b7       	in	r29, 0x3e	; 62
	TMR1_CALL_BACK_PF();
    49c8:	e0 91 a7 01 	lds	r30, 0x01A7
    49cc:	f0 91 a8 01 	lds	r31, 0x01A8
    49d0:	09 95       	icall
}
    49d2:	cf 91       	pop	r28
    49d4:	df 91       	pop	r29
    49d6:	ff 91       	pop	r31
    49d8:	ef 91       	pop	r30
    49da:	bf 91       	pop	r27
    49dc:	af 91       	pop	r26
    49de:	9f 91       	pop	r25
    49e0:	8f 91       	pop	r24
    49e2:	7f 91       	pop	r23
    49e4:	6f 91       	pop	r22
    49e6:	5f 91       	pop	r21
    49e8:	4f 91       	pop	r20
    49ea:	3f 91       	pop	r19
    49ec:	2f 91       	pop	r18
    49ee:	0f 90       	pop	r0
    49f0:	0f be       	out	0x3f, r0	; 63
    49f2:	0f 90       	pop	r0
    49f4:	1f 90       	pop	r1
    49f6:	18 95       	reti

000049f8 <TMR2_voidInitCTC>:
#include "TMR2_config.h"

static void (*TMR2_CALL_BACK_PF)(void) = NULL;

void TMR2_voidInitCTC(void)
{
    49f8:	df 93       	push	r29
    49fa:	cf 93       	push	r28
    49fc:	cd b7       	in	r28, 0x3d	; 61
    49fe:	de b7       	in	r29, 0x3e	; 62
	/* CTC MODE */
	SET_BIT(TCCR2, WGM21);
    4a00:	a5 e4       	ldi	r26, 0x45	; 69
    4a02:	b0 e0       	ldi	r27, 0x00	; 0
    4a04:	e5 e4       	ldi	r30, 0x45	; 69
    4a06:	f0 e0       	ldi	r31, 0x00	; 0
    4a08:	80 81       	ld	r24, Z
    4a0a:	88 60       	ori	r24, 0x08	; 8
    4a0c:	8c 93       	st	X, r24
	CLR_BIT(TCCR2, WGM20);
    4a0e:	a5 e4       	ldi	r26, 0x45	; 69
    4a10:	b0 e0       	ldi	r27, 0x00	; 0
    4a12:	e5 e4       	ldi	r30, 0x45	; 69
    4a14:	f0 e0       	ldi	r31, 0x00	; 0
    4a16:	80 81       	ld	r24, Z
    4a18:	8f 7b       	andi	r24, 0xBF	; 191
    4a1a:	8c 93       	st	X, r24
	
	/* SET REQUIRED CTC VAL */
	OCR2 = CTC_VAL;
    4a1c:	e3 e4       	ldi	r30, 0x43	; 67
    4a1e:	f0 e0       	ldi	r31, 0x00	; 0
    4a20:	8d e7       	ldi	r24, 0x7D	; 125
    4a22:	80 83       	st	Z, r24

	/*  Normal port operation, OC2 disconnected */
	CLR_BIT(TCCR2, COM20);
    4a24:	a5 e4       	ldi	r26, 0x45	; 69
    4a26:	b0 e0       	ldi	r27, 0x00	; 0
    4a28:	e5 e4       	ldi	r30, 0x45	; 69
    4a2a:	f0 e0       	ldi	r31, 0x00	; 0
    4a2c:	80 81       	ld	r24, Z
    4a2e:	8f 7e       	andi	r24, 0xEF	; 239
    4a30:	8c 93       	st	X, r24
	CLR_BIT(TCCR2, COM21);
    4a32:	a5 e4       	ldi	r26, 0x45	; 69
    4a34:	b0 e0       	ldi	r27, 0x00	; 0
    4a36:	e5 e4       	ldi	r30, 0x45	; 69
    4a38:	f0 e0       	ldi	r31, 0x00	; 0
    4a3a:	80 81       	ld	r24, Z
    4a3c:	8f 7d       	andi	r24, 0xDF	; 223
    4a3e:	8c 93       	st	X, r24
	
	/* ENABLE INT*/
	SET_BIT(TIMSK , OCIE2) ;
    4a40:	a9 e5       	ldi	r26, 0x59	; 89
    4a42:	b0 e0       	ldi	r27, 0x00	; 0
    4a44:	e9 e5       	ldi	r30, 0x59	; 89
    4a46:	f0 e0       	ldi	r31, 0x00	; 0
    4a48:	80 81       	ld	r24, Z
    4a4a:	80 68       	ori	r24, 0x80	; 128
    4a4c:	8c 93       	st	X, r24

	/* CLOCK SELECT F/64 */
	SET_BIT(TCCR2, CS22);
    4a4e:	a5 e4       	ldi	r26, 0x45	; 69
    4a50:	b0 e0       	ldi	r27, 0x00	; 0
    4a52:	e5 e4       	ldi	r30, 0x45	; 69
    4a54:	f0 e0       	ldi	r31, 0x00	; 0
    4a56:	80 81       	ld	r24, Z
    4a58:	82 60       	ori	r24, 0x02	; 2
    4a5a:	8c 93       	st	X, r24
	CLR_BIT(TCCR2, CS21);
    4a5c:	a5 e4       	ldi	r26, 0x45	; 69
    4a5e:	b0 e0       	ldi	r27, 0x00	; 0
    4a60:	e5 e4       	ldi	r30, 0x45	; 69
    4a62:	f0 e0       	ldi	r31, 0x00	; 0
    4a64:	80 81       	ld	r24, Z
    4a66:	8b 7f       	andi	r24, 0xFB	; 251
    4a68:	8c 93       	st	X, r24
	CLR_BIT(TCCR2, CS20);
    4a6a:	a5 e4       	ldi	r26, 0x45	; 69
    4a6c:	b0 e0       	ldi	r27, 0x00	; 0
    4a6e:	e5 e4       	ldi	r30, 0x45	; 69
    4a70:	f0 e0       	ldi	r31, 0x00	; 0
    4a72:	80 81       	ld	r24, Z
    4a74:	8e 7f       	andi	r24, 0xFE	; 254
    4a76:	8c 93       	st	X, r24
}
    4a78:	cf 91       	pop	r28
    4a7a:	df 91       	pop	r29
    4a7c:	08 95       	ret

00004a7e <TMR2_voidSetCTC>:

void TMR2_voidSetCTC(u8 time)
{
    4a7e:	df 93       	push	r29
    4a80:	cf 93       	push	r28
    4a82:	0f 92       	push	r0
    4a84:	cd b7       	in	r28, 0x3d	; 61
    4a86:	de b7       	in	r29, 0x3e	; 62
    4a88:	89 83       	std	Y+1, r24	; 0x01
	OCR2 = time;
    4a8a:	e3 e4       	ldi	r30, 0x43	; 67
    4a8c:	f0 e0       	ldi	r31, 0x00	; 0
    4a8e:	89 81       	ldd	r24, Y+1	; 0x01
    4a90:	80 83       	st	Z, r24
}
    4a92:	0f 90       	pop	r0
    4a94:	cf 91       	pop	r28
    4a96:	df 91       	pop	r29
    4a98:	08 95       	ret

00004a9a <TMR2_voidSetCallBackCTC>:

void TMR2_voidSetCallBackCTC(void (*pf)(void))
{
    4a9a:	df 93       	push	r29
    4a9c:	cf 93       	push	r28
    4a9e:	00 d0       	rcall	.+0      	; 0x4aa0 <TMR2_voidSetCallBackCTC+0x6>
    4aa0:	cd b7       	in	r28, 0x3d	; 61
    4aa2:	de b7       	in	r29, 0x3e	; 62
    4aa4:	9a 83       	std	Y+2, r25	; 0x02
    4aa6:	89 83       	std	Y+1, r24	; 0x01
	 TMR2_CALL_BACK_PF = pf;
    4aa8:	89 81       	ldd	r24, Y+1	; 0x01
    4aaa:	9a 81       	ldd	r25, Y+2	; 0x02
    4aac:	90 93 aa 01 	sts	0x01AA, r25
    4ab0:	80 93 a9 01 	sts	0x01A9, r24
}
    4ab4:	0f 90       	pop	r0
    4ab6:	0f 90       	pop	r0
    4ab8:	cf 91       	pop	r28
    4aba:	df 91       	pop	r29
    4abc:	08 95       	ret

00004abe <__vector_4>:

void __vector_4(void) __attribute__((signal));
void __vector_4(void)
{
    4abe:	1f 92       	push	r1
    4ac0:	0f 92       	push	r0
    4ac2:	0f b6       	in	r0, 0x3f	; 63
    4ac4:	0f 92       	push	r0
    4ac6:	11 24       	eor	r1, r1
    4ac8:	2f 93       	push	r18
    4aca:	3f 93       	push	r19
    4acc:	4f 93       	push	r20
    4ace:	5f 93       	push	r21
    4ad0:	6f 93       	push	r22
    4ad2:	7f 93       	push	r23
    4ad4:	8f 93       	push	r24
    4ad6:	9f 93       	push	r25
    4ad8:	af 93       	push	r26
    4ada:	bf 93       	push	r27
    4adc:	ef 93       	push	r30
    4ade:	ff 93       	push	r31
    4ae0:	df 93       	push	r29
    4ae2:	cf 93       	push	r28
    4ae4:	cd b7       	in	r28, 0x3d	; 61
    4ae6:	de b7       	in	r29, 0x3e	; 62
	TMR2_CALL_BACK_PF();
    4ae8:	e0 91 a9 01 	lds	r30, 0x01A9
    4aec:	f0 91 aa 01 	lds	r31, 0x01AA
    4af0:	09 95       	icall
}
    4af2:	cf 91       	pop	r28
    4af4:	df 91       	pop	r29
    4af6:	ff 91       	pop	r31
    4af8:	ef 91       	pop	r30
    4afa:	bf 91       	pop	r27
    4afc:	af 91       	pop	r26
    4afe:	9f 91       	pop	r25
    4b00:	8f 91       	pop	r24
    4b02:	7f 91       	pop	r23
    4b04:	6f 91       	pop	r22
    4b06:	5f 91       	pop	r21
    4b08:	4f 91       	pop	r20
    4b0a:	3f 91       	pop	r19
    4b0c:	2f 91       	pop	r18
    4b0e:	0f 90       	pop	r0
    4b10:	0f be       	out	0x3f, r0	; 63
    4b12:	0f 90       	pop	r0
    4b14:	1f 90       	pop	r1
    4b16:	18 95       	reti

00004b18 <EXTI_voidEnable>:
void (*EXTI0_CallBackPF)(void) = NULL;
void (*EXTI1_CallBackPF)(void) = NULL;
void (*EXTI2_CallBackPF)(void) = NULL;

void EXTI_voidEnable(u8 line, u8 mode)
{
    4b18:	df 93       	push	r29
    4b1a:	cf 93       	push	r28
    4b1c:	cd b7       	in	r28, 0x3d	; 61
    4b1e:	de b7       	in	r29, 0x3e	; 62
    4b20:	2a 97       	sbiw	r28, 0x0a	; 10
    4b22:	0f b6       	in	r0, 0x3f	; 63
    4b24:	f8 94       	cli
    4b26:	de bf       	out	0x3e, r29	; 62
    4b28:	0f be       	out	0x3f, r0	; 63
    4b2a:	cd bf       	out	0x3d, r28	; 61
    4b2c:	89 83       	std	Y+1, r24	; 0x01
    4b2e:	6a 83       	std	Y+2, r22	; 0x02
	switch(line)
    4b30:	89 81       	ldd	r24, Y+1	; 0x01
    4b32:	28 2f       	mov	r18, r24
    4b34:	30 e0       	ldi	r19, 0x00	; 0
    4b36:	3a 87       	std	Y+10, r19	; 0x0a
    4b38:	29 87       	std	Y+9, r18	; 0x09
    4b3a:	89 85       	ldd	r24, Y+9	; 0x09
    4b3c:	9a 85       	ldd	r25, Y+10	; 0x0a
    4b3e:	81 30       	cpi	r24, 0x01	; 1
    4b40:	91 05       	cpc	r25, r1
    4b42:	61 f0       	breq	.+24     	; 0x4b5c <EXTI_voidEnable+0x44>
    4b44:	29 85       	ldd	r18, Y+9	; 0x09
    4b46:	3a 85       	ldd	r19, Y+10	; 0x0a
    4b48:	22 30       	cpi	r18, 0x02	; 2
    4b4a:	31 05       	cpc	r19, r1
    4b4c:	09 f4       	brne	.+2      	; 0x4b50 <EXTI_voidEnable+0x38>
    4b4e:	ca c0       	rjmp	.+404    	; 0x4ce4 <EXTI_voidEnable+0x1cc>
    4b50:	89 85       	ldd	r24, Y+9	; 0x09
    4b52:	9a 85       	ldd	r25, Y+10	; 0x0a
    4b54:	00 97       	sbiw	r24, 0x00	; 0
    4b56:	09 f4       	brne	.+2      	; 0x4b5a <EXTI_voidEnable+0x42>
    4b58:	63 c0       	rjmp	.+198    	; 0x4c20 <EXTI_voidEnable+0x108>
    4b5a:	e9 c0       	rjmp	.+466    	; 0x4d2e <EXTI_voidEnable+0x216>
	{
	case EXTI_LINE1 :
		switch(mode)
    4b5c:	8a 81       	ldd	r24, Y+2	; 0x02
    4b5e:	28 2f       	mov	r18, r24
    4b60:	30 e0       	ldi	r19, 0x00	; 0
    4b62:	38 87       	std	Y+8, r19	; 0x08
    4b64:	2f 83       	std	Y+7, r18	; 0x07
    4b66:	8f 81       	ldd	r24, Y+7	; 0x07
    4b68:	98 85       	ldd	r25, Y+8	; 0x08
    4b6a:	81 30       	cpi	r24, 0x01	; 1
    4b6c:	91 05       	cpc	r25, r1
    4b6e:	21 f1       	breq	.+72     	; 0x4bb8 <EXTI_voidEnable+0xa0>
    4b70:	2f 81       	ldd	r18, Y+7	; 0x07
    4b72:	38 85       	ldd	r19, Y+8	; 0x08
    4b74:	22 30       	cpi	r18, 0x02	; 2
    4b76:	31 05       	cpc	r19, r1
    4b78:	2c f4       	brge	.+10     	; 0x4b84 <EXTI_voidEnable+0x6c>
    4b7a:	8f 81       	ldd	r24, Y+7	; 0x07
    4b7c:	98 85       	ldd	r25, Y+8	; 0x08
    4b7e:	00 97       	sbiw	r24, 0x00	; 0
    4b80:	61 f0       	breq	.+24     	; 0x4b9a <EXTI_voidEnable+0x82>
    4b82:	46 c0       	rjmp	.+140    	; 0x4c10 <EXTI_voidEnable+0xf8>
    4b84:	2f 81       	ldd	r18, Y+7	; 0x07
    4b86:	38 85       	ldd	r19, Y+8	; 0x08
    4b88:	22 30       	cpi	r18, 0x02	; 2
    4b8a:	31 05       	cpc	r19, r1
    4b8c:	21 f1       	breq	.+72     	; 0x4bd6 <EXTI_voidEnable+0xbe>
    4b8e:	8f 81       	ldd	r24, Y+7	; 0x07
    4b90:	98 85       	ldd	r25, Y+8	; 0x08
    4b92:	83 30       	cpi	r24, 0x03	; 3
    4b94:	91 05       	cpc	r25, r1
    4b96:	71 f1       	breq	.+92     	; 0x4bf4 <EXTI_voidEnable+0xdc>
    4b98:	3b c0       	rjmp	.+118    	; 0x4c10 <EXTI_voidEnable+0xf8>
		{
			case LOW_LEVEL      : CLR_BIT(MCUCR, ISC11); CLR_BIT(MCUCR, ISC10); break;
    4b9a:	a5 e5       	ldi	r26, 0x55	; 85
    4b9c:	b0 e0       	ldi	r27, 0x00	; 0
    4b9e:	e5 e5       	ldi	r30, 0x55	; 85
    4ba0:	f0 e0       	ldi	r31, 0x00	; 0
    4ba2:	80 81       	ld	r24, Z
    4ba4:	87 7f       	andi	r24, 0xF7	; 247
    4ba6:	8c 93       	st	X, r24
    4ba8:	a5 e5       	ldi	r26, 0x55	; 85
    4baa:	b0 e0       	ldi	r27, 0x00	; 0
    4bac:	e5 e5       	ldi	r30, 0x55	; 85
    4bae:	f0 e0       	ldi	r31, 0x00	; 0
    4bb0:	80 81       	ld	r24, Z
    4bb2:	8b 7f       	andi	r24, 0xFB	; 251
    4bb4:	8c 93       	st	X, r24
    4bb6:	2c c0       	rjmp	.+88     	; 0x4c10 <EXTI_voidEnable+0xf8>
			case LOGICAL_CHANGE : CLR_BIT(MCUCR, ISC11); SET_BIT(MCUCR, ISC10); break;
    4bb8:	a5 e5       	ldi	r26, 0x55	; 85
    4bba:	b0 e0       	ldi	r27, 0x00	; 0
    4bbc:	e5 e5       	ldi	r30, 0x55	; 85
    4bbe:	f0 e0       	ldi	r31, 0x00	; 0
    4bc0:	80 81       	ld	r24, Z
    4bc2:	87 7f       	andi	r24, 0xF7	; 247
    4bc4:	8c 93       	st	X, r24
    4bc6:	a5 e5       	ldi	r26, 0x55	; 85
    4bc8:	b0 e0       	ldi	r27, 0x00	; 0
    4bca:	e5 e5       	ldi	r30, 0x55	; 85
    4bcc:	f0 e0       	ldi	r31, 0x00	; 0
    4bce:	80 81       	ld	r24, Z
    4bd0:	84 60       	ori	r24, 0x04	; 4
    4bd2:	8c 93       	st	X, r24
    4bd4:	1d c0       	rjmp	.+58     	; 0x4c10 <EXTI_voidEnable+0xf8>
			case FALLING_EDGE   : SET_BIT(MCUCR, ISC11); CLR_BIT(MCUCR, ISC10); break;
    4bd6:	a5 e5       	ldi	r26, 0x55	; 85
    4bd8:	b0 e0       	ldi	r27, 0x00	; 0
    4bda:	e5 e5       	ldi	r30, 0x55	; 85
    4bdc:	f0 e0       	ldi	r31, 0x00	; 0
    4bde:	80 81       	ld	r24, Z
    4be0:	88 60       	ori	r24, 0x08	; 8
    4be2:	8c 93       	st	X, r24
    4be4:	a5 e5       	ldi	r26, 0x55	; 85
    4be6:	b0 e0       	ldi	r27, 0x00	; 0
    4be8:	e5 e5       	ldi	r30, 0x55	; 85
    4bea:	f0 e0       	ldi	r31, 0x00	; 0
    4bec:	80 81       	ld	r24, Z
    4bee:	8b 7f       	andi	r24, 0xFB	; 251
    4bf0:	8c 93       	st	X, r24
    4bf2:	0e c0       	rjmp	.+28     	; 0x4c10 <EXTI_voidEnable+0xf8>
			case RISING_EDGE    : SET_BIT(MCUCR, ISC11); SET_BIT(MCUCR, ISC10); break;
    4bf4:	a5 e5       	ldi	r26, 0x55	; 85
    4bf6:	b0 e0       	ldi	r27, 0x00	; 0
    4bf8:	e5 e5       	ldi	r30, 0x55	; 85
    4bfa:	f0 e0       	ldi	r31, 0x00	; 0
    4bfc:	80 81       	ld	r24, Z
    4bfe:	88 60       	ori	r24, 0x08	; 8
    4c00:	8c 93       	st	X, r24
    4c02:	a5 e5       	ldi	r26, 0x55	; 85
    4c04:	b0 e0       	ldi	r27, 0x00	; 0
    4c06:	e5 e5       	ldi	r30, 0x55	; 85
    4c08:	f0 e0       	ldi	r31, 0x00	; 0
    4c0a:	80 81       	ld	r24, Z
    4c0c:	84 60       	ori	r24, 0x04	; 4
    4c0e:	8c 93       	st	X, r24
		}
		SET_BIT(GICR, INTF1);
    4c10:	ab e5       	ldi	r26, 0x5B	; 91
    4c12:	b0 e0       	ldi	r27, 0x00	; 0
    4c14:	eb e5       	ldi	r30, 0x5B	; 91
    4c16:	f0 e0       	ldi	r31, 0x00	; 0
    4c18:	80 81       	ld	r24, Z
    4c1a:	80 68       	ori	r24, 0x80	; 128
    4c1c:	8c 93       	st	X, r24
    4c1e:	87 c0       	rjmp	.+270    	; 0x4d2e <EXTI_voidEnable+0x216>
		break;

	case EXTI_LINE0 :
		switch(mode)
    4c20:	8a 81       	ldd	r24, Y+2	; 0x02
    4c22:	28 2f       	mov	r18, r24
    4c24:	30 e0       	ldi	r19, 0x00	; 0
    4c26:	3e 83       	std	Y+6, r19	; 0x06
    4c28:	2d 83       	std	Y+5, r18	; 0x05
    4c2a:	8d 81       	ldd	r24, Y+5	; 0x05
    4c2c:	9e 81       	ldd	r25, Y+6	; 0x06
    4c2e:	81 30       	cpi	r24, 0x01	; 1
    4c30:	91 05       	cpc	r25, r1
    4c32:	21 f1       	breq	.+72     	; 0x4c7c <EXTI_voidEnable+0x164>
    4c34:	2d 81       	ldd	r18, Y+5	; 0x05
    4c36:	3e 81       	ldd	r19, Y+6	; 0x06
    4c38:	22 30       	cpi	r18, 0x02	; 2
    4c3a:	31 05       	cpc	r19, r1
    4c3c:	2c f4       	brge	.+10     	; 0x4c48 <EXTI_voidEnable+0x130>
    4c3e:	8d 81       	ldd	r24, Y+5	; 0x05
    4c40:	9e 81       	ldd	r25, Y+6	; 0x06
    4c42:	00 97       	sbiw	r24, 0x00	; 0
    4c44:	61 f0       	breq	.+24     	; 0x4c5e <EXTI_voidEnable+0x146>
    4c46:	46 c0       	rjmp	.+140    	; 0x4cd4 <EXTI_voidEnable+0x1bc>
    4c48:	2d 81       	ldd	r18, Y+5	; 0x05
    4c4a:	3e 81       	ldd	r19, Y+6	; 0x06
    4c4c:	22 30       	cpi	r18, 0x02	; 2
    4c4e:	31 05       	cpc	r19, r1
    4c50:	21 f1       	breq	.+72     	; 0x4c9a <EXTI_voidEnable+0x182>
    4c52:	8d 81       	ldd	r24, Y+5	; 0x05
    4c54:	9e 81       	ldd	r25, Y+6	; 0x06
    4c56:	83 30       	cpi	r24, 0x03	; 3
    4c58:	91 05       	cpc	r25, r1
    4c5a:	71 f1       	breq	.+92     	; 0x4cb8 <EXTI_voidEnable+0x1a0>
    4c5c:	3b c0       	rjmp	.+118    	; 0x4cd4 <EXTI_voidEnable+0x1bc>
		{
			case LOW_LEVEL      : CLR_BIT(MCUCR, ISC01); CLR_BIT(MCUCR, ISC00); break;	
    4c5e:	a5 e5       	ldi	r26, 0x55	; 85
    4c60:	b0 e0       	ldi	r27, 0x00	; 0
    4c62:	e5 e5       	ldi	r30, 0x55	; 85
    4c64:	f0 e0       	ldi	r31, 0x00	; 0
    4c66:	80 81       	ld	r24, Z
    4c68:	8d 7f       	andi	r24, 0xFD	; 253
    4c6a:	8c 93       	st	X, r24
    4c6c:	a5 e5       	ldi	r26, 0x55	; 85
    4c6e:	b0 e0       	ldi	r27, 0x00	; 0
    4c70:	e5 e5       	ldi	r30, 0x55	; 85
    4c72:	f0 e0       	ldi	r31, 0x00	; 0
    4c74:	80 81       	ld	r24, Z
    4c76:	8e 7f       	andi	r24, 0xFE	; 254
    4c78:	8c 93       	st	X, r24
    4c7a:	2c c0       	rjmp	.+88     	; 0x4cd4 <EXTI_voidEnable+0x1bc>
			case LOGICAL_CHANGE : CLR_BIT(MCUCR, ISC01); SET_BIT(MCUCR, ISC00); break;	
    4c7c:	a5 e5       	ldi	r26, 0x55	; 85
    4c7e:	b0 e0       	ldi	r27, 0x00	; 0
    4c80:	e5 e5       	ldi	r30, 0x55	; 85
    4c82:	f0 e0       	ldi	r31, 0x00	; 0
    4c84:	80 81       	ld	r24, Z
    4c86:	8d 7f       	andi	r24, 0xFD	; 253
    4c88:	8c 93       	st	X, r24
    4c8a:	a5 e5       	ldi	r26, 0x55	; 85
    4c8c:	b0 e0       	ldi	r27, 0x00	; 0
    4c8e:	e5 e5       	ldi	r30, 0x55	; 85
    4c90:	f0 e0       	ldi	r31, 0x00	; 0
    4c92:	80 81       	ld	r24, Z
    4c94:	81 60       	ori	r24, 0x01	; 1
    4c96:	8c 93       	st	X, r24
    4c98:	1d c0       	rjmp	.+58     	; 0x4cd4 <EXTI_voidEnable+0x1bc>
			case FALLING_EDGE   : SET_BIT(MCUCR, ISC01); CLR_BIT(MCUCR, ISC00); break;	
    4c9a:	a5 e5       	ldi	r26, 0x55	; 85
    4c9c:	b0 e0       	ldi	r27, 0x00	; 0
    4c9e:	e5 e5       	ldi	r30, 0x55	; 85
    4ca0:	f0 e0       	ldi	r31, 0x00	; 0
    4ca2:	80 81       	ld	r24, Z
    4ca4:	82 60       	ori	r24, 0x02	; 2
    4ca6:	8c 93       	st	X, r24
    4ca8:	a5 e5       	ldi	r26, 0x55	; 85
    4caa:	b0 e0       	ldi	r27, 0x00	; 0
    4cac:	e5 e5       	ldi	r30, 0x55	; 85
    4cae:	f0 e0       	ldi	r31, 0x00	; 0
    4cb0:	80 81       	ld	r24, Z
    4cb2:	8e 7f       	andi	r24, 0xFE	; 254
    4cb4:	8c 93       	st	X, r24
    4cb6:	0e c0       	rjmp	.+28     	; 0x4cd4 <EXTI_voidEnable+0x1bc>
			case RISING_EDGE    : SET_BIT(MCUCR, ISC01); SET_BIT(MCUCR, ISC00); break;	
    4cb8:	a5 e5       	ldi	r26, 0x55	; 85
    4cba:	b0 e0       	ldi	r27, 0x00	; 0
    4cbc:	e5 e5       	ldi	r30, 0x55	; 85
    4cbe:	f0 e0       	ldi	r31, 0x00	; 0
    4cc0:	80 81       	ld	r24, Z
    4cc2:	82 60       	ori	r24, 0x02	; 2
    4cc4:	8c 93       	st	X, r24
    4cc6:	a5 e5       	ldi	r26, 0x55	; 85
    4cc8:	b0 e0       	ldi	r27, 0x00	; 0
    4cca:	e5 e5       	ldi	r30, 0x55	; 85
    4ccc:	f0 e0       	ldi	r31, 0x00	; 0
    4cce:	80 81       	ld	r24, Z
    4cd0:	81 60       	ori	r24, 0x01	; 1
    4cd2:	8c 93       	st	X, r24
		}
		SET_BIT(GICR, INTF0);
    4cd4:	ab e5       	ldi	r26, 0x5B	; 91
    4cd6:	b0 e0       	ldi	r27, 0x00	; 0
    4cd8:	eb e5       	ldi	r30, 0x5B	; 91
    4cda:	f0 e0       	ldi	r31, 0x00	; 0
    4cdc:	80 81       	ld	r24, Z
    4cde:	80 64       	ori	r24, 0x40	; 64
    4ce0:	8c 93       	st	X, r24
    4ce2:	25 c0       	rjmp	.+74     	; 0x4d2e <EXTI_voidEnable+0x216>
		break;

	case EXTI_LINE2 : 
		switch(mode)
    4ce4:	8a 81       	ldd	r24, Y+2	; 0x02
    4ce6:	28 2f       	mov	r18, r24
    4ce8:	30 e0       	ldi	r19, 0x00	; 0
    4cea:	3c 83       	std	Y+4, r19	; 0x04
    4cec:	2b 83       	std	Y+3, r18	; 0x03
    4cee:	8b 81       	ldd	r24, Y+3	; 0x03
    4cf0:	9c 81       	ldd	r25, Y+4	; 0x04
    4cf2:	00 97       	sbiw	r24, 0x00	; 0
    4cf4:	31 f0       	breq	.+12     	; 0x4d02 <EXTI_voidEnable+0x1ea>
    4cf6:	2b 81       	ldd	r18, Y+3	; 0x03
    4cf8:	3c 81       	ldd	r19, Y+4	; 0x04
    4cfa:	21 30       	cpi	r18, 0x01	; 1
    4cfc:	31 05       	cpc	r19, r1
    4cfe:	49 f0       	breq	.+18     	; 0x4d12 <EXTI_voidEnable+0x1fa>
    4d00:	0f c0       	rjmp	.+30     	; 0x4d20 <EXTI_voidEnable+0x208>
		{
			case EXTI2_FALLING_EDGE : CLR_BIT(MCUCSR, ISC2); break;
    4d02:	a4 e5       	ldi	r26, 0x54	; 84
    4d04:	b0 e0       	ldi	r27, 0x00	; 0
    4d06:	e4 e5       	ldi	r30, 0x54	; 84
    4d08:	f0 e0       	ldi	r31, 0x00	; 0
    4d0a:	80 81       	ld	r24, Z
    4d0c:	8f 7b       	andi	r24, 0xBF	; 191
    4d0e:	8c 93       	st	X, r24
    4d10:	07 c0       	rjmp	.+14     	; 0x4d20 <EXTI_voidEnable+0x208>
			case EXTI2_RISING_EDGE  : SET_BIT(MCUCSR, ISC2); break;
    4d12:	a4 e5       	ldi	r26, 0x54	; 84
    4d14:	b0 e0       	ldi	r27, 0x00	; 0
    4d16:	e4 e5       	ldi	r30, 0x54	; 84
    4d18:	f0 e0       	ldi	r31, 0x00	; 0
    4d1a:	80 81       	ld	r24, Z
    4d1c:	80 64       	ori	r24, 0x40	; 64
    4d1e:	8c 93       	st	X, r24
		}	
		SET_BIT(GICR, INTF2);
    4d20:	ab e5       	ldi	r26, 0x5B	; 91
    4d22:	b0 e0       	ldi	r27, 0x00	; 0
    4d24:	eb e5       	ldi	r30, 0x5B	; 91
    4d26:	f0 e0       	ldi	r31, 0x00	; 0
    4d28:	80 81       	ld	r24, Z
    4d2a:	80 62       	ori	r24, 0x20	; 32
    4d2c:	8c 93       	st	X, r24
		break;
	}
}
    4d2e:	2a 96       	adiw	r28, 0x0a	; 10
    4d30:	0f b6       	in	r0, 0x3f	; 63
    4d32:	f8 94       	cli
    4d34:	de bf       	out	0x3e, r29	; 62
    4d36:	0f be       	out	0x3f, r0	; 63
    4d38:	cd bf       	out	0x3d, r28	; 61
    4d3a:	cf 91       	pop	r28
    4d3c:	df 91       	pop	r29
    4d3e:	08 95       	ret

00004d40 <EXTI_voidSetCallBack>:

void EXTI_voidSetCallBack(u8 line, void(*pf)(void))
{
    4d40:	df 93       	push	r29
    4d42:	cf 93       	push	r28
    4d44:	00 d0       	rcall	.+0      	; 0x4d46 <EXTI_voidSetCallBack+0x6>
    4d46:	00 d0       	rcall	.+0      	; 0x4d48 <EXTI_voidSetCallBack+0x8>
    4d48:	0f 92       	push	r0
    4d4a:	cd b7       	in	r28, 0x3d	; 61
    4d4c:	de b7       	in	r29, 0x3e	; 62
    4d4e:	89 83       	std	Y+1, r24	; 0x01
    4d50:	7b 83       	std	Y+3, r23	; 0x03
    4d52:	6a 83       	std	Y+2, r22	; 0x02
	switch(line)
    4d54:	89 81       	ldd	r24, Y+1	; 0x01
    4d56:	28 2f       	mov	r18, r24
    4d58:	30 e0       	ldi	r19, 0x00	; 0
    4d5a:	3d 83       	std	Y+5, r19	; 0x05
    4d5c:	2c 83       	std	Y+4, r18	; 0x04
    4d5e:	8c 81       	ldd	r24, Y+4	; 0x04
    4d60:	9d 81       	ldd	r25, Y+5	; 0x05
    4d62:	81 30       	cpi	r24, 0x01	; 1
    4d64:	91 05       	cpc	r25, r1
    4d66:	81 f0       	breq	.+32     	; 0x4d88 <EXTI_voidSetCallBack+0x48>
    4d68:	2c 81       	ldd	r18, Y+4	; 0x04
    4d6a:	3d 81       	ldd	r19, Y+5	; 0x05
    4d6c:	22 30       	cpi	r18, 0x02	; 2
    4d6e:	31 05       	cpc	r19, r1
    4d70:	91 f0       	breq	.+36     	; 0x4d96 <EXTI_voidSetCallBack+0x56>
    4d72:	8c 81       	ldd	r24, Y+4	; 0x04
    4d74:	9d 81       	ldd	r25, Y+5	; 0x05
    4d76:	00 97       	sbiw	r24, 0x00	; 0
    4d78:	a1 f4       	brne	.+40     	; 0x4da2 <EXTI_voidSetCallBack+0x62>
	{
	case EXTI_LINE0 : EXTI0_CallBackPF = pf; break;
    4d7a:	8a 81       	ldd	r24, Y+2	; 0x02
    4d7c:	9b 81       	ldd	r25, Y+3	; 0x03
    4d7e:	90 93 ac 01 	sts	0x01AC, r25
    4d82:	80 93 ab 01 	sts	0x01AB, r24
    4d86:	0d c0       	rjmp	.+26     	; 0x4da2 <EXTI_voidSetCallBack+0x62>
	case EXTI_LINE1 : EXTI1_CallBackPF = pf; break;
    4d88:	8a 81       	ldd	r24, Y+2	; 0x02
    4d8a:	9b 81       	ldd	r25, Y+3	; 0x03
    4d8c:	90 93 ae 01 	sts	0x01AE, r25
    4d90:	80 93 ad 01 	sts	0x01AD, r24
    4d94:	06 c0       	rjmp	.+12     	; 0x4da2 <EXTI_voidSetCallBack+0x62>
	case EXTI_LINE2 : EXTI2_CallBackPF = pf; break;
    4d96:	8a 81       	ldd	r24, Y+2	; 0x02
    4d98:	9b 81       	ldd	r25, Y+3	; 0x03
    4d9a:	90 93 b0 01 	sts	0x01B0, r25
    4d9e:	80 93 af 01 	sts	0x01AF, r24
	}
}
    4da2:	0f 90       	pop	r0
    4da4:	0f 90       	pop	r0
    4da6:	0f 90       	pop	r0
    4da8:	0f 90       	pop	r0
    4daa:	0f 90       	pop	r0
    4dac:	cf 91       	pop	r28
    4dae:	df 91       	pop	r29
    4db0:	08 95       	ret

00004db2 <EXTI_voidClearFlag>:

void EXTI_voidClearFlag(u8 line)
{
    4db2:	df 93       	push	r29
    4db4:	cf 93       	push	r28
    4db6:	00 d0       	rcall	.+0      	; 0x4db8 <EXTI_voidClearFlag+0x6>
    4db8:	0f 92       	push	r0
    4dba:	cd b7       	in	r28, 0x3d	; 61
    4dbc:	de b7       	in	r29, 0x3e	; 62
    4dbe:	89 83       	std	Y+1, r24	; 0x01
    switch(line)
    4dc0:	89 81       	ldd	r24, Y+1	; 0x01
    4dc2:	28 2f       	mov	r18, r24
    4dc4:	30 e0       	ldi	r19, 0x00	; 0
    4dc6:	3b 83       	std	Y+3, r19	; 0x03
    4dc8:	2a 83       	std	Y+2, r18	; 0x02
    4dca:	8a 81       	ldd	r24, Y+2	; 0x02
    4dcc:	9b 81       	ldd	r25, Y+3	; 0x03
    4dce:	81 30       	cpi	r24, 0x01	; 1
    4dd0:	91 05       	cpc	r25, r1
    4dd2:	89 f0       	breq	.+34     	; 0x4df6 <EXTI_voidClearFlag+0x44>
    4dd4:	2a 81       	ldd	r18, Y+2	; 0x02
    4dd6:	3b 81       	ldd	r19, Y+3	; 0x03
    4dd8:	22 30       	cpi	r18, 0x02	; 2
    4dda:	31 05       	cpc	r19, r1
    4ddc:	a1 f0       	breq	.+40     	; 0x4e06 <EXTI_voidClearFlag+0x54>
    4dde:	8a 81       	ldd	r24, Y+2	; 0x02
    4de0:	9b 81       	ldd	r25, Y+3	; 0x03
    4de2:	00 97       	sbiw	r24, 0x00	; 0
    4de4:	b9 f4       	brne	.+46     	; 0x4e14 <EXTI_voidClearFlag+0x62>
    {
        case EXTI_LINE0: SET_BIT(GIFR, INTF0); break;
    4de6:	aa e5       	ldi	r26, 0x5A	; 90
    4de8:	b0 e0       	ldi	r27, 0x00	; 0
    4dea:	ea e5       	ldi	r30, 0x5A	; 90
    4dec:	f0 e0       	ldi	r31, 0x00	; 0
    4dee:	80 81       	ld	r24, Z
    4df0:	80 64       	ori	r24, 0x40	; 64
    4df2:	8c 93       	st	X, r24
    4df4:	0f c0       	rjmp	.+30     	; 0x4e14 <EXTI_voidClearFlag+0x62>
        case EXTI_LINE1: SET_BIT(GIFR, INTF1); break;
    4df6:	aa e5       	ldi	r26, 0x5A	; 90
    4df8:	b0 e0       	ldi	r27, 0x00	; 0
    4dfa:	ea e5       	ldi	r30, 0x5A	; 90
    4dfc:	f0 e0       	ldi	r31, 0x00	; 0
    4dfe:	80 81       	ld	r24, Z
    4e00:	80 68       	ori	r24, 0x80	; 128
    4e02:	8c 93       	st	X, r24
    4e04:	07 c0       	rjmp	.+14     	; 0x4e14 <EXTI_voidClearFlag+0x62>
        case EXTI_LINE2: SET_BIT(GIFR, INTF2); break;
    4e06:	aa e5       	ldi	r26, 0x5A	; 90
    4e08:	b0 e0       	ldi	r27, 0x00	; 0
    4e0a:	ea e5       	ldi	r30, 0x5A	; 90
    4e0c:	f0 e0       	ldi	r31, 0x00	; 0
    4e0e:	80 81       	ld	r24, Z
    4e10:	80 62       	ori	r24, 0x20	; 32
    4e12:	8c 93       	st	X, r24
    }
}
    4e14:	0f 90       	pop	r0
    4e16:	0f 90       	pop	r0
    4e18:	0f 90       	pop	r0
    4e1a:	cf 91       	pop	r28
    4e1c:	df 91       	pop	r29
    4e1e:	08 95       	ret

00004e20 <__vector_1>:



void  __vector_1(void) __attribute__((signal));
void __vector_1(void)
{
    4e20:	1f 92       	push	r1
    4e22:	0f 92       	push	r0
    4e24:	0f b6       	in	r0, 0x3f	; 63
    4e26:	0f 92       	push	r0
    4e28:	11 24       	eor	r1, r1
    4e2a:	2f 93       	push	r18
    4e2c:	3f 93       	push	r19
    4e2e:	4f 93       	push	r20
    4e30:	5f 93       	push	r21
    4e32:	6f 93       	push	r22
    4e34:	7f 93       	push	r23
    4e36:	8f 93       	push	r24
    4e38:	9f 93       	push	r25
    4e3a:	af 93       	push	r26
    4e3c:	bf 93       	push	r27
    4e3e:	ef 93       	push	r30
    4e40:	ff 93       	push	r31
    4e42:	df 93       	push	r29
    4e44:	cf 93       	push	r28
    4e46:	cd b7       	in	r28, 0x3d	; 61
    4e48:	de b7       	in	r29, 0x3e	; 62
	EXTI0_CallBackPF();
    4e4a:	e0 91 ab 01 	lds	r30, 0x01AB
    4e4e:	f0 91 ac 01 	lds	r31, 0x01AC
    4e52:	09 95       	icall
}
    4e54:	cf 91       	pop	r28
    4e56:	df 91       	pop	r29
    4e58:	ff 91       	pop	r31
    4e5a:	ef 91       	pop	r30
    4e5c:	bf 91       	pop	r27
    4e5e:	af 91       	pop	r26
    4e60:	9f 91       	pop	r25
    4e62:	8f 91       	pop	r24
    4e64:	7f 91       	pop	r23
    4e66:	6f 91       	pop	r22
    4e68:	5f 91       	pop	r21
    4e6a:	4f 91       	pop	r20
    4e6c:	3f 91       	pop	r19
    4e6e:	2f 91       	pop	r18
    4e70:	0f 90       	pop	r0
    4e72:	0f be       	out	0x3f, r0	; 63
    4e74:	0f 90       	pop	r0
    4e76:	1f 90       	pop	r1
    4e78:	18 95       	reti

00004e7a <__vector_2>:

void  __vector_2(void) __attribute__((signal));
void __vector_2(void)
{
    4e7a:	1f 92       	push	r1
    4e7c:	0f 92       	push	r0
    4e7e:	0f b6       	in	r0, 0x3f	; 63
    4e80:	0f 92       	push	r0
    4e82:	11 24       	eor	r1, r1
    4e84:	2f 93       	push	r18
    4e86:	3f 93       	push	r19
    4e88:	4f 93       	push	r20
    4e8a:	5f 93       	push	r21
    4e8c:	6f 93       	push	r22
    4e8e:	7f 93       	push	r23
    4e90:	8f 93       	push	r24
    4e92:	9f 93       	push	r25
    4e94:	af 93       	push	r26
    4e96:	bf 93       	push	r27
    4e98:	ef 93       	push	r30
    4e9a:	ff 93       	push	r31
    4e9c:	df 93       	push	r29
    4e9e:	cf 93       	push	r28
    4ea0:	cd b7       	in	r28, 0x3d	; 61
    4ea2:	de b7       	in	r29, 0x3e	; 62
	EXTI1_CallBackPF();
    4ea4:	e0 91 ad 01 	lds	r30, 0x01AD
    4ea8:	f0 91 ae 01 	lds	r31, 0x01AE
    4eac:	09 95       	icall
}
    4eae:	cf 91       	pop	r28
    4eb0:	df 91       	pop	r29
    4eb2:	ff 91       	pop	r31
    4eb4:	ef 91       	pop	r30
    4eb6:	bf 91       	pop	r27
    4eb8:	af 91       	pop	r26
    4eba:	9f 91       	pop	r25
    4ebc:	8f 91       	pop	r24
    4ebe:	7f 91       	pop	r23
    4ec0:	6f 91       	pop	r22
    4ec2:	5f 91       	pop	r21
    4ec4:	4f 91       	pop	r20
    4ec6:	3f 91       	pop	r19
    4ec8:	2f 91       	pop	r18
    4eca:	0f 90       	pop	r0
    4ecc:	0f be       	out	0x3f, r0	; 63
    4ece:	0f 90       	pop	r0
    4ed0:	1f 90       	pop	r1
    4ed2:	18 95       	reti

00004ed4 <__vector_3>:

void  __vector_3(void) __attribute__((signal));
void __vector_3(void)
{
    4ed4:	1f 92       	push	r1
    4ed6:	0f 92       	push	r0
    4ed8:	0f b6       	in	r0, 0x3f	; 63
    4eda:	0f 92       	push	r0
    4edc:	11 24       	eor	r1, r1
    4ede:	2f 93       	push	r18
    4ee0:	3f 93       	push	r19
    4ee2:	4f 93       	push	r20
    4ee4:	5f 93       	push	r21
    4ee6:	6f 93       	push	r22
    4ee8:	7f 93       	push	r23
    4eea:	8f 93       	push	r24
    4eec:	9f 93       	push	r25
    4eee:	af 93       	push	r26
    4ef0:	bf 93       	push	r27
    4ef2:	ef 93       	push	r30
    4ef4:	ff 93       	push	r31
    4ef6:	df 93       	push	r29
    4ef8:	cf 93       	push	r28
    4efa:	cd b7       	in	r28, 0x3d	; 61
    4efc:	de b7       	in	r29, 0x3e	; 62
	EXTI2_CallBackPF();
    4efe:	e0 91 af 01 	lds	r30, 0x01AF
    4f02:	f0 91 b0 01 	lds	r31, 0x01B0
    4f06:	09 95       	icall
}
    4f08:	cf 91       	pop	r28
    4f0a:	df 91       	pop	r29
    4f0c:	ff 91       	pop	r31
    4f0e:	ef 91       	pop	r30
    4f10:	bf 91       	pop	r27
    4f12:	af 91       	pop	r26
    4f14:	9f 91       	pop	r25
    4f16:	8f 91       	pop	r24
    4f18:	7f 91       	pop	r23
    4f1a:	6f 91       	pop	r22
    4f1c:	5f 91       	pop	r21
    4f1e:	4f 91       	pop	r20
    4f20:	3f 91       	pop	r19
    4f22:	2f 91       	pop	r18
    4f24:	0f 90       	pop	r0
    4f26:	0f be       	out	0x3f, r0	; 63
    4f28:	0f 90       	pop	r0
    4f2a:	1f 90       	pop	r1
    4f2c:	18 95       	reti

00004f2e <DIO_enumSetPinDirection>:




DIO_ErrorStatus DIO_enumSetPinDirection    (u8 Copy_u8PORT , u8 Copy_u8PIN , u8 Copy_u8Direction ) 
{
    4f2e:	df 93       	push	r29
    4f30:	cf 93       	push	r28
    4f32:	cd b7       	in	r28, 0x3d	; 61
    4f34:	de b7       	in	r29, 0x3e	; 62
    4f36:	28 97       	sbiw	r28, 0x08	; 8
    4f38:	0f b6       	in	r0, 0x3f	; 63
    4f3a:	f8 94       	cli
    4f3c:	de bf       	out	0x3e, r29	; 62
    4f3e:	0f be       	out	0x3f, r0	; 63
    4f40:	cd bf       	out	0x3d, r28	; 61
    4f42:	8a 83       	std	Y+2, r24	; 0x02
    4f44:	6b 83       	std	Y+3, r22	; 0x03
    4f46:	4c 83       	std	Y+4, r20	; 0x04

	DIO_ErrorStatus LOC_enumState = DIO_OK ;
    4f48:	81 e0       	ldi	r24, 0x01	; 1
    4f4a:	89 83       	std	Y+1, r24	; 0x01

	/* Make sure that the Port ID and Pin ID are in the valid range */
	if ((Copy_u8PORT <= DIO_PORTD) && (Copy_u8PIN <= DIO_PIN7))
    4f4c:	8a 81       	ldd	r24, Y+2	; 0x02
    4f4e:	84 30       	cpi	r24, 0x04	; 4
    4f50:	08 f0       	brcs	.+2      	; 0x4f54 <DIO_enumSetPinDirection+0x26>
    4f52:	f1 c0       	rjmp	.+482    	; 0x5136 <DIO_enumSetPinDirection+0x208>
    4f54:	8b 81       	ldd	r24, Y+3	; 0x03
    4f56:	88 30       	cpi	r24, 0x08	; 8
    4f58:	08 f0       	brcs	.+2      	; 0x4f5c <DIO_enumSetPinDirection+0x2e>
    4f5a:	ed c0       	rjmp	.+474    	; 0x5136 <DIO_enumSetPinDirection+0x208>
	{
		if ( Copy_u8Direction == DIO_PIN_OUTPUT )
    4f5c:	8c 81       	ldd	r24, Y+4	; 0x04
    4f5e:	81 30       	cpi	r24, 0x01	; 1
    4f60:	09 f0       	breq	.+2      	; 0x4f64 <DIO_enumSetPinDirection+0x36>
    4f62:	6f c0       	rjmp	.+222    	; 0x5042 <DIO_enumSetPinDirection+0x114>
		{
			/* Check on the Required PORT Number */
			switch (Copy_u8PORT)
    4f64:	8a 81       	ldd	r24, Y+2	; 0x02
    4f66:	28 2f       	mov	r18, r24
    4f68:	30 e0       	ldi	r19, 0x00	; 0
    4f6a:	38 87       	std	Y+8, r19	; 0x08
    4f6c:	2f 83       	std	Y+7, r18	; 0x07
    4f6e:	8f 81       	ldd	r24, Y+7	; 0x07
    4f70:	98 85       	ldd	r25, Y+8	; 0x08
    4f72:	81 30       	cpi	r24, 0x01	; 1
    4f74:	91 05       	cpc	r25, r1
    4f76:	49 f1       	breq	.+82     	; 0x4fca <DIO_enumSetPinDirection+0x9c>
    4f78:	2f 81       	ldd	r18, Y+7	; 0x07
    4f7a:	38 85       	ldd	r19, Y+8	; 0x08
    4f7c:	22 30       	cpi	r18, 0x02	; 2
    4f7e:	31 05       	cpc	r19, r1
    4f80:	2c f4       	brge	.+10     	; 0x4f8c <DIO_enumSetPinDirection+0x5e>
    4f82:	8f 81       	ldd	r24, Y+7	; 0x07
    4f84:	98 85       	ldd	r25, Y+8	; 0x08
    4f86:	00 97       	sbiw	r24, 0x00	; 0
    4f88:	61 f0       	breq	.+24     	; 0x4fa2 <DIO_enumSetPinDirection+0x74>
    4f8a:	d6 c0       	rjmp	.+428    	; 0x5138 <DIO_enumSetPinDirection+0x20a>
    4f8c:	2f 81       	ldd	r18, Y+7	; 0x07
    4f8e:	38 85       	ldd	r19, Y+8	; 0x08
    4f90:	22 30       	cpi	r18, 0x02	; 2
    4f92:	31 05       	cpc	r19, r1
    4f94:	71 f1       	breq	.+92     	; 0x4ff2 <DIO_enumSetPinDirection+0xc4>
    4f96:	8f 81       	ldd	r24, Y+7	; 0x07
    4f98:	98 85       	ldd	r25, Y+8	; 0x08
    4f9a:	83 30       	cpi	r24, 0x03	; 3
    4f9c:	91 05       	cpc	r25, r1
    4f9e:	e9 f1       	breq	.+122    	; 0x501a <DIO_enumSetPinDirection+0xec>
    4fa0:	cb c0       	rjmp	.+406    	; 0x5138 <DIO_enumSetPinDirection+0x20a>
			{
			case DIO_PORTA: SET_BIT(DDRA_Register,Copy_u8PIN); break;
    4fa2:	aa e3       	ldi	r26, 0x3A	; 58
    4fa4:	b0 e0       	ldi	r27, 0x00	; 0
    4fa6:	ea e3       	ldi	r30, 0x3A	; 58
    4fa8:	f0 e0       	ldi	r31, 0x00	; 0
    4faa:	80 81       	ld	r24, Z
    4fac:	48 2f       	mov	r20, r24
    4fae:	8b 81       	ldd	r24, Y+3	; 0x03
    4fb0:	28 2f       	mov	r18, r24
    4fb2:	30 e0       	ldi	r19, 0x00	; 0
    4fb4:	81 e0       	ldi	r24, 0x01	; 1
    4fb6:	90 e0       	ldi	r25, 0x00	; 0
    4fb8:	02 2e       	mov	r0, r18
    4fba:	02 c0       	rjmp	.+4      	; 0x4fc0 <DIO_enumSetPinDirection+0x92>
    4fbc:	88 0f       	add	r24, r24
    4fbe:	99 1f       	adc	r25, r25
    4fc0:	0a 94       	dec	r0
    4fc2:	e2 f7       	brpl	.-8      	; 0x4fbc <DIO_enumSetPinDirection+0x8e>
    4fc4:	84 2b       	or	r24, r20
    4fc6:	8c 93       	st	X, r24
    4fc8:	b7 c0       	rjmp	.+366    	; 0x5138 <DIO_enumSetPinDirection+0x20a>
			case DIO_PORTB: SET_BIT(DDRB_Register,Copy_u8PIN); break;
    4fca:	a7 e3       	ldi	r26, 0x37	; 55
    4fcc:	b0 e0       	ldi	r27, 0x00	; 0
    4fce:	e7 e3       	ldi	r30, 0x37	; 55
    4fd0:	f0 e0       	ldi	r31, 0x00	; 0
    4fd2:	80 81       	ld	r24, Z
    4fd4:	48 2f       	mov	r20, r24
    4fd6:	8b 81       	ldd	r24, Y+3	; 0x03
    4fd8:	28 2f       	mov	r18, r24
    4fda:	30 e0       	ldi	r19, 0x00	; 0
    4fdc:	81 e0       	ldi	r24, 0x01	; 1
    4fde:	90 e0       	ldi	r25, 0x00	; 0
    4fe0:	02 2e       	mov	r0, r18
    4fe2:	02 c0       	rjmp	.+4      	; 0x4fe8 <DIO_enumSetPinDirection+0xba>
    4fe4:	88 0f       	add	r24, r24
    4fe6:	99 1f       	adc	r25, r25
    4fe8:	0a 94       	dec	r0
    4fea:	e2 f7       	brpl	.-8      	; 0x4fe4 <DIO_enumSetPinDirection+0xb6>
    4fec:	84 2b       	or	r24, r20
    4fee:	8c 93       	st	X, r24
    4ff0:	a3 c0       	rjmp	.+326    	; 0x5138 <DIO_enumSetPinDirection+0x20a>
			case DIO_PORTC: SET_BIT(DDRC_Register,Copy_u8PIN); break;
    4ff2:	a4 e3       	ldi	r26, 0x34	; 52
    4ff4:	b0 e0       	ldi	r27, 0x00	; 0
    4ff6:	e4 e3       	ldi	r30, 0x34	; 52
    4ff8:	f0 e0       	ldi	r31, 0x00	; 0
    4ffa:	80 81       	ld	r24, Z
    4ffc:	48 2f       	mov	r20, r24
    4ffe:	8b 81       	ldd	r24, Y+3	; 0x03
    5000:	28 2f       	mov	r18, r24
    5002:	30 e0       	ldi	r19, 0x00	; 0
    5004:	81 e0       	ldi	r24, 0x01	; 1
    5006:	90 e0       	ldi	r25, 0x00	; 0
    5008:	02 2e       	mov	r0, r18
    500a:	02 c0       	rjmp	.+4      	; 0x5010 <DIO_enumSetPinDirection+0xe2>
    500c:	88 0f       	add	r24, r24
    500e:	99 1f       	adc	r25, r25
    5010:	0a 94       	dec	r0
    5012:	e2 f7       	brpl	.-8      	; 0x500c <DIO_enumSetPinDirection+0xde>
    5014:	84 2b       	or	r24, r20
    5016:	8c 93       	st	X, r24
    5018:	8f c0       	rjmp	.+286    	; 0x5138 <DIO_enumSetPinDirection+0x20a>
			case DIO_PORTD: SET_BIT(DDRD_Register,Copy_u8PIN); break;
    501a:	a1 e3       	ldi	r26, 0x31	; 49
    501c:	b0 e0       	ldi	r27, 0x00	; 0
    501e:	e1 e3       	ldi	r30, 0x31	; 49
    5020:	f0 e0       	ldi	r31, 0x00	; 0
    5022:	80 81       	ld	r24, Z
    5024:	48 2f       	mov	r20, r24
    5026:	8b 81       	ldd	r24, Y+3	; 0x03
    5028:	28 2f       	mov	r18, r24
    502a:	30 e0       	ldi	r19, 0x00	; 0
    502c:	81 e0       	ldi	r24, 0x01	; 1
    502e:	90 e0       	ldi	r25, 0x00	; 0
    5030:	02 2e       	mov	r0, r18
    5032:	02 c0       	rjmp	.+4      	; 0x5038 <DIO_enumSetPinDirection+0x10a>
    5034:	88 0f       	add	r24, r24
    5036:	99 1f       	adc	r25, r25
    5038:	0a 94       	dec	r0
    503a:	e2 f7       	brpl	.-8      	; 0x5034 <DIO_enumSetPinDirection+0x106>
    503c:	84 2b       	or	r24, r20
    503e:	8c 93       	st	X, r24
    5040:	7b c0       	rjmp	.+246    	; 0x5138 <DIO_enumSetPinDirection+0x20a>
			}
		}

		else if ( Copy_u8Direction == DIO_PIN_INPUT )
    5042:	8c 81       	ldd	r24, Y+4	; 0x04
    5044:	88 23       	and	r24, r24
    5046:	09 f0       	breq	.+2      	; 0x504a <DIO_enumSetPinDirection+0x11c>
    5048:	74 c0       	rjmp	.+232    	; 0x5132 <DIO_enumSetPinDirection+0x204>
		{
			/* Check on the Required PORT Number */
			switch (Copy_u8PORT)
    504a:	8a 81       	ldd	r24, Y+2	; 0x02
    504c:	28 2f       	mov	r18, r24
    504e:	30 e0       	ldi	r19, 0x00	; 0
    5050:	3e 83       	std	Y+6, r19	; 0x06
    5052:	2d 83       	std	Y+5, r18	; 0x05
    5054:	8d 81       	ldd	r24, Y+5	; 0x05
    5056:	9e 81       	ldd	r25, Y+6	; 0x06
    5058:	81 30       	cpi	r24, 0x01	; 1
    505a:	91 05       	cpc	r25, r1
    505c:	59 f1       	breq	.+86     	; 0x50b4 <DIO_enumSetPinDirection+0x186>
    505e:	2d 81       	ldd	r18, Y+5	; 0x05
    5060:	3e 81       	ldd	r19, Y+6	; 0x06
    5062:	22 30       	cpi	r18, 0x02	; 2
    5064:	31 05       	cpc	r19, r1
    5066:	2c f4       	brge	.+10     	; 0x5072 <DIO_enumSetPinDirection+0x144>
    5068:	8d 81       	ldd	r24, Y+5	; 0x05
    506a:	9e 81       	ldd	r25, Y+6	; 0x06
    506c:	00 97       	sbiw	r24, 0x00	; 0
    506e:	69 f0       	breq	.+26     	; 0x508a <DIO_enumSetPinDirection+0x15c>
    5070:	63 c0       	rjmp	.+198    	; 0x5138 <DIO_enumSetPinDirection+0x20a>
    5072:	2d 81       	ldd	r18, Y+5	; 0x05
    5074:	3e 81       	ldd	r19, Y+6	; 0x06
    5076:	22 30       	cpi	r18, 0x02	; 2
    5078:	31 05       	cpc	r19, r1
    507a:	89 f1       	breq	.+98     	; 0x50de <DIO_enumSetPinDirection+0x1b0>
    507c:	8d 81       	ldd	r24, Y+5	; 0x05
    507e:	9e 81       	ldd	r25, Y+6	; 0x06
    5080:	83 30       	cpi	r24, 0x03	; 3
    5082:	91 05       	cpc	r25, r1
    5084:	09 f4       	brne	.+2      	; 0x5088 <DIO_enumSetPinDirection+0x15a>
    5086:	40 c0       	rjmp	.+128    	; 0x5108 <DIO_enumSetPinDirection+0x1da>
    5088:	57 c0       	rjmp	.+174    	; 0x5138 <DIO_enumSetPinDirection+0x20a>
			{
			case DIO_PORTA: CLR_BIT(DDRA_Register,Copy_u8PIN); break;
    508a:	aa e3       	ldi	r26, 0x3A	; 58
    508c:	b0 e0       	ldi	r27, 0x00	; 0
    508e:	ea e3       	ldi	r30, 0x3A	; 58
    5090:	f0 e0       	ldi	r31, 0x00	; 0
    5092:	80 81       	ld	r24, Z
    5094:	48 2f       	mov	r20, r24
    5096:	8b 81       	ldd	r24, Y+3	; 0x03
    5098:	28 2f       	mov	r18, r24
    509a:	30 e0       	ldi	r19, 0x00	; 0
    509c:	81 e0       	ldi	r24, 0x01	; 1
    509e:	90 e0       	ldi	r25, 0x00	; 0
    50a0:	02 2e       	mov	r0, r18
    50a2:	02 c0       	rjmp	.+4      	; 0x50a8 <DIO_enumSetPinDirection+0x17a>
    50a4:	88 0f       	add	r24, r24
    50a6:	99 1f       	adc	r25, r25
    50a8:	0a 94       	dec	r0
    50aa:	e2 f7       	brpl	.-8      	; 0x50a4 <DIO_enumSetPinDirection+0x176>
    50ac:	80 95       	com	r24
    50ae:	84 23       	and	r24, r20
    50b0:	8c 93       	st	X, r24
    50b2:	42 c0       	rjmp	.+132    	; 0x5138 <DIO_enumSetPinDirection+0x20a>
			case DIO_PORTB: CLR_BIT(DDRB_Register,Copy_u8PIN); break;
    50b4:	a7 e3       	ldi	r26, 0x37	; 55
    50b6:	b0 e0       	ldi	r27, 0x00	; 0
    50b8:	e7 e3       	ldi	r30, 0x37	; 55
    50ba:	f0 e0       	ldi	r31, 0x00	; 0
    50bc:	80 81       	ld	r24, Z
    50be:	48 2f       	mov	r20, r24
    50c0:	8b 81       	ldd	r24, Y+3	; 0x03
    50c2:	28 2f       	mov	r18, r24
    50c4:	30 e0       	ldi	r19, 0x00	; 0
    50c6:	81 e0       	ldi	r24, 0x01	; 1
    50c8:	90 e0       	ldi	r25, 0x00	; 0
    50ca:	02 2e       	mov	r0, r18
    50cc:	02 c0       	rjmp	.+4      	; 0x50d2 <DIO_enumSetPinDirection+0x1a4>
    50ce:	88 0f       	add	r24, r24
    50d0:	99 1f       	adc	r25, r25
    50d2:	0a 94       	dec	r0
    50d4:	e2 f7       	brpl	.-8      	; 0x50ce <DIO_enumSetPinDirection+0x1a0>
    50d6:	80 95       	com	r24
    50d8:	84 23       	and	r24, r20
    50da:	8c 93       	st	X, r24
    50dc:	2d c0       	rjmp	.+90     	; 0x5138 <DIO_enumSetPinDirection+0x20a>
			case DIO_PORTC: CLR_BIT(DDRC_Register,Copy_u8PIN); break;
    50de:	a4 e3       	ldi	r26, 0x34	; 52
    50e0:	b0 e0       	ldi	r27, 0x00	; 0
    50e2:	e4 e3       	ldi	r30, 0x34	; 52
    50e4:	f0 e0       	ldi	r31, 0x00	; 0
    50e6:	80 81       	ld	r24, Z
    50e8:	48 2f       	mov	r20, r24
    50ea:	8b 81       	ldd	r24, Y+3	; 0x03
    50ec:	28 2f       	mov	r18, r24
    50ee:	30 e0       	ldi	r19, 0x00	; 0
    50f0:	81 e0       	ldi	r24, 0x01	; 1
    50f2:	90 e0       	ldi	r25, 0x00	; 0
    50f4:	02 2e       	mov	r0, r18
    50f6:	02 c0       	rjmp	.+4      	; 0x50fc <DIO_enumSetPinDirection+0x1ce>
    50f8:	88 0f       	add	r24, r24
    50fa:	99 1f       	adc	r25, r25
    50fc:	0a 94       	dec	r0
    50fe:	e2 f7       	brpl	.-8      	; 0x50f8 <DIO_enumSetPinDirection+0x1ca>
    5100:	80 95       	com	r24
    5102:	84 23       	and	r24, r20
    5104:	8c 93       	st	X, r24
    5106:	18 c0       	rjmp	.+48     	; 0x5138 <DIO_enumSetPinDirection+0x20a>
			case DIO_PORTD: CLR_BIT(DDRD_Register,Copy_u8PIN); break;
    5108:	a1 e3       	ldi	r26, 0x31	; 49
    510a:	b0 e0       	ldi	r27, 0x00	; 0
    510c:	e1 e3       	ldi	r30, 0x31	; 49
    510e:	f0 e0       	ldi	r31, 0x00	; 0
    5110:	80 81       	ld	r24, Z
    5112:	48 2f       	mov	r20, r24
    5114:	8b 81       	ldd	r24, Y+3	; 0x03
    5116:	28 2f       	mov	r18, r24
    5118:	30 e0       	ldi	r19, 0x00	; 0
    511a:	81 e0       	ldi	r24, 0x01	; 1
    511c:	90 e0       	ldi	r25, 0x00	; 0
    511e:	02 2e       	mov	r0, r18
    5120:	02 c0       	rjmp	.+4      	; 0x5126 <DIO_enumSetPinDirection+0x1f8>
    5122:	88 0f       	add	r24, r24
    5124:	99 1f       	adc	r25, r25
    5126:	0a 94       	dec	r0
    5128:	e2 f7       	brpl	.-8      	; 0x5122 <DIO_enumSetPinDirection+0x1f4>
    512a:	80 95       	com	r24
    512c:	84 23       	and	r24, r20
    512e:	8c 93       	st	X, r24
    5130:	03 c0       	rjmp	.+6      	; 0x5138 <DIO_enumSetPinDirection+0x20a>
			}
		}

		else
		{
			LOC_enumState = DIO_NOK ;
    5132:	19 82       	std	Y+1, r1	; 0x01
    5134:	01 c0       	rjmp	.+2      	; 0x5138 <DIO_enumSetPinDirection+0x20a>
		}
	}

	else
	{
		LOC_enumState = DIO_NOK ;
    5136:	19 82       	std	Y+1, r1	; 0x01
	}

	return LOC_enumState ;
    5138:	89 81       	ldd	r24, Y+1	; 0x01

}
    513a:	28 96       	adiw	r28, 0x08	; 8
    513c:	0f b6       	in	r0, 0x3f	; 63
    513e:	f8 94       	cli
    5140:	de bf       	out	0x3e, r29	; 62
    5142:	0f be       	out	0x3f, r0	; 63
    5144:	cd bf       	out	0x3d, r28	; 61
    5146:	cf 91       	pop	r28
    5148:	df 91       	pop	r29
    514a:	08 95       	ret

0000514c <DIO_enumSetPinValue>:

DIO_ErrorStatus DIO_enumSetPinValue      (u8 Copy_u8PORT , u8 Copy_u8PIN , u8 Copy_u8Value ) 
{
    514c:	df 93       	push	r29
    514e:	cf 93       	push	r28
    5150:	cd b7       	in	r28, 0x3d	; 61
    5152:	de b7       	in	r29, 0x3e	; 62
    5154:	28 97       	sbiw	r28, 0x08	; 8
    5156:	0f b6       	in	r0, 0x3f	; 63
    5158:	f8 94       	cli
    515a:	de bf       	out	0x3e, r29	; 62
    515c:	0f be       	out	0x3f, r0	; 63
    515e:	cd bf       	out	0x3d, r28	; 61
    5160:	8a 83       	std	Y+2, r24	; 0x02
    5162:	6b 83       	std	Y+3, r22	; 0x03
    5164:	4c 83       	std	Y+4, r20	; 0x04

	DIO_ErrorStatus LOC_enumState = DIO_OK ;
    5166:	81 e0       	ldi	r24, 0x01	; 1
    5168:	89 83       	std	Y+1, r24	; 0x01

	/* Make sure that the Port ID and Pin ID are in the valid range */
	if ((Copy_u8PORT <= DIO_PORTD) && (Copy_u8PIN <= DIO_PIN7))
    516a:	8a 81       	ldd	r24, Y+2	; 0x02
    516c:	84 30       	cpi	r24, 0x04	; 4
    516e:	08 f0       	brcs	.+2      	; 0x5172 <DIO_enumSetPinValue+0x26>
    5170:	f1 c0       	rjmp	.+482    	; 0x5354 <DIO_enumSetPinValue+0x208>
    5172:	8b 81       	ldd	r24, Y+3	; 0x03
    5174:	88 30       	cpi	r24, 0x08	; 8
    5176:	08 f0       	brcs	.+2      	; 0x517a <DIO_enumSetPinValue+0x2e>
    5178:	ed c0       	rjmp	.+474    	; 0x5354 <DIO_enumSetPinValue+0x208>
	{
		if (Copy_u8Value == DIO_PIN_HIGH)
    517a:	8c 81       	ldd	r24, Y+4	; 0x04
    517c:	81 30       	cpi	r24, 0x01	; 1
    517e:	09 f0       	breq	.+2      	; 0x5182 <DIO_enumSetPinValue+0x36>
    5180:	6f c0       	rjmp	.+222    	; 0x5260 <DIO_enumSetPinValue+0x114>
		{
			/* Check on the Required PORT Number */
			switch (Copy_u8PORT)
    5182:	8a 81       	ldd	r24, Y+2	; 0x02
    5184:	28 2f       	mov	r18, r24
    5186:	30 e0       	ldi	r19, 0x00	; 0
    5188:	38 87       	std	Y+8, r19	; 0x08
    518a:	2f 83       	std	Y+7, r18	; 0x07
    518c:	8f 81       	ldd	r24, Y+7	; 0x07
    518e:	98 85       	ldd	r25, Y+8	; 0x08
    5190:	81 30       	cpi	r24, 0x01	; 1
    5192:	91 05       	cpc	r25, r1
    5194:	49 f1       	breq	.+82     	; 0x51e8 <DIO_enumSetPinValue+0x9c>
    5196:	2f 81       	ldd	r18, Y+7	; 0x07
    5198:	38 85       	ldd	r19, Y+8	; 0x08
    519a:	22 30       	cpi	r18, 0x02	; 2
    519c:	31 05       	cpc	r19, r1
    519e:	2c f4       	brge	.+10     	; 0x51aa <DIO_enumSetPinValue+0x5e>
    51a0:	8f 81       	ldd	r24, Y+7	; 0x07
    51a2:	98 85       	ldd	r25, Y+8	; 0x08
    51a4:	00 97       	sbiw	r24, 0x00	; 0
    51a6:	61 f0       	breq	.+24     	; 0x51c0 <DIO_enumSetPinValue+0x74>
    51a8:	d6 c0       	rjmp	.+428    	; 0x5356 <DIO_enumSetPinValue+0x20a>
    51aa:	2f 81       	ldd	r18, Y+7	; 0x07
    51ac:	38 85       	ldd	r19, Y+8	; 0x08
    51ae:	22 30       	cpi	r18, 0x02	; 2
    51b0:	31 05       	cpc	r19, r1
    51b2:	71 f1       	breq	.+92     	; 0x5210 <DIO_enumSetPinValue+0xc4>
    51b4:	8f 81       	ldd	r24, Y+7	; 0x07
    51b6:	98 85       	ldd	r25, Y+8	; 0x08
    51b8:	83 30       	cpi	r24, 0x03	; 3
    51ba:	91 05       	cpc	r25, r1
    51bc:	e9 f1       	breq	.+122    	; 0x5238 <DIO_enumSetPinValue+0xec>
    51be:	cb c0       	rjmp	.+406    	; 0x5356 <DIO_enumSetPinValue+0x20a>
			{
			case DIO_PORTA: SET_BIT(PORTA_Register,Copy_u8PIN); break;
    51c0:	ab e3       	ldi	r26, 0x3B	; 59
    51c2:	b0 e0       	ldi	r27, 0x00	; 0
    51c4:	eb e3       	ldi	r30, 0x3B	; 59
    51c6:	f0 e0       	ldi	r31, 0x00	; 0
    51c8:	80 81       	ld	r24, Z
    51ca:	48 2f       	mov	r20, r24
    51cc:	8b 81       	ldd	r24, Y+3	; 0x03
    51ce:	28 2f       	mov	r18, r24
    51d0:	30 e0       	ldi	r19, 0x00	; 0
    51d2:	81 e0       	ldi	r24, 0x01	; 1
    51d4:	90 e0       	ldi	r25, 0x00	; 0
    51d6:	02 2e       	mov	r0, r18
    51d8:	02 c0       	rjmp	.+4      	; 0x51de <DIO_enumSetPinValue+0x92>
    51da:	88 0f       	add	r24, r24
    51dc:	99 1f       	adc	r25, r25
    51de:	0a 94       	dec	r0
    51e0:	e2 f7       	brpl	.-8      	; 0x51da <DIO_enumSetPinValue+0x8e>
    51e2:	84 2b       	or	r24, r20
    51e4:	8c 93       	st	X, r24
    51e6:	b7 c0       	rjmp	.+366    	; 0x5356 <DIO_enumSetPinValue+0x20a>
			case DIO_PORTB: SET_BIT(PORTB_Register,Copy_u8PIN); break;
    51e8:	a8 e3       	ldi	r26, 0x38	; 56
    51ea:	b0 e0       	ldi	r27, 0x00	; 0
    51ec:	e8 e3       	ldi	r30, 0x38	; 56
    51ee:	f0 e0       	ldi	r31, 0x00	; 0
    51f0:	80 81       	ld	r24, Z
    51f2:	48 2f       	mov	r20, r24
    51f4:	8b 81       	ldd	r24, Y+3	; 0x03
    51f6:	28 2f       	mov	r18, r24
    51f8:	30 e0       	ldi	r19, 0x00	; 0
    51fa:	81 e0       	ldi	r24, 0x01	; 1
    51fc:	90 e0       	ldi	r25, 0x00	; 0
    51fe:	02 2e       	mov	r0, r18
    5200:	02 c0       	rjmp	.+4      	; 0x5206 <DIO_enumSetPinValue+0xba>
    5202:	88 0f       	add	r24, r24
    5204:	99 1f       	adc	r25, r25
    5206:	0a 94       	dec	r0
    5208:	e2 f7       	brpl	.-8      	; 0x5202 <DIO_enumSetPinValue+0xb6>
    520a:	84 2b       	or	r24, r20
    520c:	8c 93       	st	X, r24
    520e:	a3 c0       	rjmp	.+326    	; 0x5356 <DIO_enumSetPinValue+0x20a>
			case DIO_PORTC: SET_BIT(PORTC_Register,Copy_u8PIN); break;
    5210:	a5 e3       	ldi	r26, 0x35	; 53
    5212:	b0 e0       	ldi	r27, 0x00	; 0
    5214:	e5 e3       	ldi	r30, 0x35	; 53
    5216:	f0 e0       	ldi	r31, 0x00	; 0
    5218:	80 81       	ld	r24, Z
    521a:	48 2f       	mov	r20, r24
    521c:	8b 81       	ldd	r24, Y+3	; 0x03
    521e:	28 2f       	mov	r18, r24
    5220:	30 e0       	ldi	r19, 0x00	; 0
    5222:	81 e0       	ldi	r24, 0x01	; 1
    5224:	90 e0       	ldi	r25, 0x00	; 0
    5226:	02 2e       	mov	r0, r18
    5228:	02 c0       	rjmp	.+4      	; 0x522e <DIO_enumSetPinValue+0xe2>
    522a:	88 0f       	add	r24, r24
    522c:	99 1f       	adc	r25, r25
    522e:	0a 94       	dec	r0
    5230:	e2 f7       	brpl	.-8      	; 0x522a <DIO_enumSetPinValue+0xde>
    5232:	84 2b       	or	r24, r20
    5234:	8c 93       	st	X, r24
    5236:	8f c0       	rjmp	.+286    	; 0x5356 <DIO_enumSetPinValue+0x20a>
			case DIO_PORTD: SET_BIT(PORTD_Register,Copy_u8PIN); break;
    5238:	a2 e3       	ldi	r26, 0x32	; 50
    523a:	b0 e0       	ldi	r27, 0x00	; 0
    523c:	e2 e3       	ldi	r30, 0x32	; 50
    523e:	f0 e0       	ldi	r31, 0x00	; 0
    5240:	80 81       	ld	r24, Z
    5242:	48 2f       	mov	r20, r24
    5244:	8b 81       	ldd	r24, Y+3	; 0x03
    5246:	28 2f       	mov	r18, r24
    5248:	30 e0       	ldi	r19, 0x00	; 0
    524a:	81 e0       	ldi	r24, 0x01	; 1
    524c:	90 e0       	ldi	r25, 0x00	; 0
    524e:	02 2e       	mov	r0, r18
    5250:	02 c0       	rjmp	.+4      	; 0x5256 <DIO_enumSetPinValue+0x10a>
    5252:	88 0f       	add	r24, r24
    5254:	99 1f       	adc	r25, r25
    5256:	0a 94       	dec	r0
    5258:	e2 f7       	brpl	.-8      	; 0x5252 <DIO_enumSetPinValue+0x106>
    525a:	84 2b       	or	r24, r20
    525c:	8c 93       	st	X, r24
    525e:	7b c0       	rjmp	.+246    	; 0x5356 <DIO_enumSetPinValue+0x20a>
			}

		}

		else if (Copy_u8Value == DIO_PIN_LOW)
    5260:	8c 81       	ldd	r24, Y+4	; 0x04
    5262:	88 23       	and	r24, r24
    5264:	09 f0       	breq	.+2      	; 0x5268 <DIO_enumSetPinValue+0x11c>
    5266:	74 c0       	rjmp	.+232    	; 0x5350 <DIO_enumSetPinValue+0x204>
		{
			/* Check on the Required PORT Number */
			switch (Copy_u8PORT)
    5268:	8a 81       	ldd	r24, Y+2	; 0x02
    526a:	28 2f       	mov	r18, r24
    526c:	30 e0       	ldi	r19, 0x00	; 0
    526e:	3e 83       	std	Y+6, r19	; 0x06
    5270:	2d 83       	std	Y+5, r18	; 0x05
    5272:	8d 81       	ldd	r24, Y+5	; 0x05
    5274:	9e 81       	ldd	r25, Y+6	; 0x06
    5276:	81 30       	cpi	r24, 0x01	; 1
    5278:	91 05       	cpc	r25, r1
    527a:	59 f1       	breq	.+86     	; 0x52d2 <DIO_enumSetPinValue+0x186>
    527c:	2d 81       	ldd	r18, Y+5	; 0x05
    527e:	3e 81       	ldd	r19, Y+6	; 0x06
    5280:	22 30       	cpi	r18, 0x02	; 2
    5282:	31 05       	cpc	r19, r1
    5284:	2c f4       	brge	.+10     	; 0x5290 <DIO_enumSetPinValue+0x144>
    5286:	8d 81       	ldd	r24, Y+5	; 0x05
    5288:	9e 81       	ldd	r25, Y+6	; 0x06
    528a:	00 97       	sbiw	r24, 0x00	; 0
    528c:	69 f0       	breq	.+26     	; 0x52a8 <DIO_enumSetPinValue+0x15c>
    528e:	63 c0       	rjmp	.+198    	; 0x5356 <DIO_enumSetPinValue+0x20a>
    5290:	2d 81       	ldd	r18, Y+5	; 0x05
    5292:	3e 81       	ldd	r19, Y+6	; 0x06
    5294:	22 30       	cpi	r18, 0x02	; 2
    5296:	31 05       	cpc	r19, r1
    5298:	89 f1       	breq	.+98     	; 0x52fc <DIO_enumSetPinValue+0x1b0>
    529a:	8d 81       	ldd	r24, Y+5	; 0x05
    529c:	9e 81       	ldd	r25, Y+6	; 0x06
    529e:	83 30       	cpi	r24, 0x03	; 3
    52a0:	91 05       	cpc	r25, r1
    52a2:	09 f4       	brne	.+2      	; 0x52a6 <DIO_enumSetPinValue+0x15a>
    52a4:	40 c0       	rjmp	.+128    	; 0x5326 <DIO_enumSetPinValue+0x1da>
    52a6:	57 c0       	rjmp	.+174    	; 0x5356 <DIO_enumSetPinValue+0x20a>
			{
			case DIO_PORTA: CLR_BIT(PORTA_Register,Copy_u8PIN); break;
    52a8:	ab e3       	ldi	r26, 0x3B	; 59
    52aa:	b0 e0       	ldi	r27, 0x00	; 0
    52ac:	eb e3       	ldi	r30, 0x3B	; 59
    52ae:	f0 e0       	ldi	r31, 0x00	; 0
    52b0:	80 81       	ld	r24, Z
    52b2:	48 2f       	mov	r20, r24
    52b4:	8b 81       	ldd	r24, Y+3	; 0x03
    52b6:	28 2f       	mov	r18, r24
    52b8:	30 e0       	ldi	r19, 0x00	; 0
    52ba:	81 e0       	ldi	r24, 0x01	; 1
    52bc:	90 e0       	ldi	r25, 0x00	; 0
    52be:	02 2e       	mov	r0, r18
    52c0:	02 c0       	rjmp	.+4      	; 0x52c6 <DIO_enumSetPinValue+0x17a>
    52c2:	88 0f       	add	r24, r24
    52c4:	99 1f       	adc	r25, r25
    52c6:	0a 94       	dec	r0
    52c8:	e2 f7       	brpl	.-8      	; 0x52c2 <DIO_enumSetPinValue+0x176>
    52ca:	80 95       	com	r24
    52cc:	84 23       	and	r24, r20
    52ce:	8c 93       	st	X, r24
    52d0:	42 c0       	rjmp	.+132    	; 0x5356 <DIO_enumSetPinValue+0x20a>
			case DIO_PORTB: CLR_BIT(PORTB_Register,Copy_u8PIN); break;
    52d2:	a8 e3       	ldi	r26, 0x38	; 56
    52d4:	b0 e0       	ldi	r27, 0x00	; 0
    52d6:	e8 e3       	ldi	r30, 0x38	; 56
    52d8:	f0 e0       	ldi	r31, 0x00	; 0
    52da:	80 81       	ld	r24, Z
    52dc:	48 2f       	mov	r20, r24
    52de:	8b 81       	ldd	r24, Y+3	; 0x03
    52e0:	28 2f       	mov	r18, r24
    52e2:	30 e0       	ldi	r19, 0x00	; 0
    52e4:	81 e0       	ldi	r24, 0x01	; 1
    52e6:	90 e0       	ldi	r25, 0x00	; 0
    52e8:	02 2e       	mov	r0, r18
    52ea:	02 c0       	rjmp	.+4      	; 0x52f0 <DIO_enumSetPinValue+0x1a4>
    52ec:	88 0f       	add	r24, r24
    52ee:	99 1f       	adc	r25, r25
    52f0:	0a 94       	dec	r0
    52f2:	e2 f7       	brpl	.-8      	; 0x52ec <DIO_enumSetPinValue+0x1a0>
    52f4:	80 95       	com	r24
    52f6:	84 23       	and	r24, r20
    52f8:	8c 93       	st	X, r24
    52fa:	2d c0       	rjmp	.+90     	; 0x5356 <DIO_enumSetPinValue+0x20a>
			case DIO_PORTC: CLR_BIT(PORTC_Register,Copy_u8PIN); break;
    52fc:	a5 e3       	ldi	r26, 0x35	; 53
    52fe:	b0 e0       	ldi	r27, 0x00	; 0
    5300:	e5 e3       	ldi	r30, 0x35	; 53
    5302:	f0 e0       	ldi	r31, 0x00	; 0
    5304:	80 81       	ld	r24, Z
    5306:	48 2f       	mov	r20, r24
    5308:	8b 81       	ldd	r24, Y+3	; 0x03
    530a:	28 2f       	mov	r18, r24
    530c:	30 e0       	ldi	r19, 0x00	; 0
    530e:	81 e0       	ldi	r24, 0x01	; 1
    5310:	90 e0       	ldi	r25, 0x00	; 0
    5312:	02 2e       	mov	r0, r18
    5314:	02 c0       	rjmp	.+4      	; 0x531a <DIO_enumSetPinValue+0x1ce>
    5316:	88 0f       	add	r24, r24
    5318:	99 1f       	adc	r25, r25
    531a:	0a 94       	dec	r0
    531c:	e2 f7       	brpl	.-8      	; 0x5316 <DIO_enumSetPinValue+0x1ca>
    531e:	80 95       	com	r24
    5320:	84 23       	and	r24, r20
    5322:	8c 93       	st	X, r24
    5324:	18 c0       	rjmp	.+48     	; 0x5356 <DIO_enumSetPinValue+0x20a>
			case DIO_PORTD: CLR_BIT(PORTD_Register,Copy_u8PIN); break;
    5326:	a2 e3       	ldi	r26, 0x32	; 50
    5328:	b0 e0       	ldi	r27, 0x00	; 0
    532a:	e2 e3       	ldi	r30, 0x32	; 50
    532c:	f0 e0       	ldi	r31, 0x00	; 0
    532e:	80 81       	ld	r24, Z
    5330:	48 2f       	mov	r20, r24
    5332:	8b 81       	ldd	r24, Y+3	; 0x03
    5334:	28 2f       	mov	r18, r24
    5336:	30 e0       	ldi	r19, 0x00	; 0
    5338:	81 e0       	ldi	r24, 0x01	; 1
    533a:	90 e0       	ldi	r25, 0x00	; 0
    533c:	02 2e       	mov	r0, r18
    533e:	02 c0       	rjmp	.+4      	; 0x5344 <DIO_enumSetPinValue+0x1f8>
    5340:	88 0f       	add	r24, r24
    5342:	99 1f       	adc	r25, r25
    5344:	0a 94       	dec	r0
    5346:	e2 f7       	brpl	.-8      	; 0x5340 <DIO_enumSetPinValue+0x1f4>
    5348:	80 95       	com	r24
    534a:	84 23       	and	r24, r20
    534c:	8c 93       	st	X, r24
    534e:	03 c0       	rjmp	.+6      	; 0x5356 <DIO_enumSetPinValue+0x20a>
			}
		}

		else
		{
			LOC_enumState = DIO_NOK ;
    5350:	19 82       	std	Y+1, r1	; 0x01
    5352:	01 c0       	rjmp	.+2      	; 0x5356 <DIO_enumSetPinValue+0x20a>
		}
	}

	else
	{
		LOC_enumState = DIO_NOK ;
    5354:	19 82       	std	Y+1, r1	; 0x01
	}

	return LOC_enumState ;
    5356:	89 81       	ldd	r24, Y+1	; 0x01

}
    5358:	28 96       	adiw	r28, 0x08	; 8
    535a:	0f b6       	in	r0, 0x3f	; 63
    535c:	f8 94       	cli
    535e:	de bf       	out	0x3e, r29	; 62
    5360:	0f be       	out	0x3f, r0	; 63
    5362:	cd bf       	out	0x3d, r28	; 61
    5364:	cf 91       	pop	r28
    5366:	df 91       	pop	r29
    5368:	08 95       	ret

0000536a <DIO_enumGetPinValue>:



DIO_ErrorStatus DIO_enumGetPinValue          (u8 Copy_u8PORT, u8 Copy_u8PIN, u8 * Copy_PtrData   )
{
    536a:	df 93       	push	r29
    536c:	cf 93       	push	r28
    536e:	cd b7       	in	r28, 0x3d	; 61
    5370:	de b7       	in	r29, 0x3e	; 62
    5372:	27 97       	sbiw	r28, 0x07	; 7
    5374:	0f b6       	in	r0, 0x3f	; 63
    5376:	f8 94       	cli
    5378:	de bf       	out	0x3e, r29	; 62
    537a:	0f be       	out	0x3f, r0	; 63
    537c:	cd bf       	out	0x3d, r28	; 61
    537e:	8a 83       	std	Y+2, r24	; 0x02
    5380:	6b 83       	std	Y+3, r22	; 0x03
    5382:	5d 83       	std	Y+5, r21	; 0x05
    5384:	4c 83       	std	Y+4, r20	; 0x04

	DIO_ErrorStatus LOC_enumState = DIO_OK ;
    5386:	81 e0       	ldi	r24, 0x01	; 1
    5388:	89 83       	std	Y+1, r24	; 0x01

	if ((Copy_u8PORT <= DIO_PORTD) && (Copy_u8PIN <= DIO_PIN7))
    538a:	8a 81       	ldd	r24, Y+2	; 0x02
    538c:	84 30       	cpi	r24, 0x04	; 4
    538e:	08 f0       	brcs	.+2      	; 0x5392 <DIO_enumGetPinValue+0x28>
    5390:	a6 c0       	rjmp	.+332    	; 0x54de <DIO_enumGetPinValue+0x174>
    5392:	8b 81       	ldd	r24, Y+3	; 0x03
    5394:	88 30       	cpi	r24, 0x08	; 8
    5396:	08 f0       	brcs	.+2      	; 0x539a <DIO_enumGetPinValue+0x30>
    5398:	a2 c0       	rjmp	.+324    	; 0x54de <DIO_enumGetPinValue+0x174>
	{
		/* Check on the Required PORT Number */
		switch (Copy_u8PORT)
    539a:	8a 81       	ldd	r24, Y+2	; 0x02
    539c:	28 2f       	mov	r18, r24
    539e:	30 e0       	ldi	r19, 0x00	; 0
    53a0:	3f 83       	std	Y+7, r19	; 0x07
    53a2:	2e 83       	std	Y+6, r18	; 0x06
    53a4:	4e 81       	ldd	r20, Y+6	; 0x06
    53a6:	5f 81       	ldd	r21, Y+7	; 0x07
    53a8:	41 30       	cpi	r20, 0x01	; 1
    53aa:	51 05       	cpc	r21, r1
    53ac:	c1 f1       	breq	.+112    	; 0x541e <DIO_enumGetPinValue+0xb4>
    53ae:	8e 81       	ldd	r24, Y+6	; 0x06
    53b0:	9f 81       	ldd	r25, Y+7	; 0x07
    53b2:	82 30       	cpi	r24, 0x02	; 2
    53b4:	91 05       	cpc	r25, r1
    53b6:	34 f4       	brge	.+12     	; 0x53c4 <DIO_enumGetPinValue+0x5a>
    53b8:	2e 81       	ldd	r18, Y+6	; 0x06
    53ba:	3f 81       	ldd	r19, Y+7	; 0x07
    53bc:	21 15       	cp	r18, r1
    53be:	31 05       	cpc	r19, r1
    53c0:	71 f0       	breq	.+28     	; 0x53de <DIO_enumGetPinValue+0x74>
    53c2:	8e c0       	rjmp	.+284    	; 0x54e0 <DIO_enumGetPinValue+0x176>
    53c4:	4e 81       	ldd	r20, Y+6	; 0x06
    53c6:	5f 81       	ldd	r21, Y+7	; 0x07
    53c8:	42 30       	cpi	r20, 0x02	; 2
    53ca:	51 05       	cpc	r21, r1
    53cc:	09 f4       	brne	.+2      	; 0x53d0 <DIO_enumGetPinValue+0x66>
    53ce:	47 c0       	rjmp	.+142    	; 0x545e <DIO_enumGetPinValue+0xf4>
    53d0:	8e 81       	ldd	r24, Y+6	; 0x06
    53d2:	9f 81       	ldd	r25, Y+7	; 0x07
    53d4:	83 30       	cpi	r24, 0x03	; 3
    53d6:	91 05       	cpc	r25, r1
    53d8:	09 f4       	brne	.+2      	; 0x53dc <DIO_enumGetPinValue+0x72>
    53da:	61 c0       	rjmp	.+194    	; 0x549e <DIO_enumGetPinValue+0x134>
    53dc:	81 c0       	rjmp	.+258    	; 0x54e0 <DIO_enumGetPinValue+0x176>
		{
		case DIO_PORTA: * Copy_PtrData = GET_BIT(PINA_Register,Copy_u8PIN); break;
    53de:	e9 e3       	ldi	r30, 0x39	; 57
    53e0:	f0 e0       	ldi	r31, 0x00	; 0
    53e2:	80 81       	ld	r24, Z
    53e4:	48 2f       	mov	r20, r24
    53e6:	50 e0       	ldi	r21, 0x00	; 0
    53e8:	8b 81       	ldd	r24, Y+3	; 0x03
    53ea:	28 2f       	mov	r18, r24
    53ec:	30 e0       	ldi	r19, 0x00	; 0
    53ee:	81 e0       	ldi	r24, 0x01	; 1
    53f0:	90 e0       	ldi	r25, 0x00	; 0
    53f2:	02 c0       	rjmp	.+4      	; 0x53f8 <DIO_enumGetPinValue+0x8e>
    53f4:	88 0f       	add	r24, r24
    53f6:	99 1f       	adc	r25, r25
    53f8:	2a 95       	dec	r18
    53fa:	e2 f7       	brpl	.-8      	; 0x53f4 <DIO_enumGetPinValue+0x8a>
    53fc:	9a 01       	movw	r18, r20
    53fe:	28 23       	and	r18, r24
    5400:	39 23       	and	r19, r25
    5402:	8b 81       	ldd	r24, Y+3	; 0x03
    5404:	88 2f       	mov	r24, r24
    5406:	90 e0       	ldi	r25, 0x00	; 0
    5408:	a9 01       	movw	r20, r18
    540a:	02 c0       	rjmp	.+4      	; 0x5410 <DIO_enumGetPinValue+0xa6>
    540c:	55 95       	asr	r21
    540e:	47 95       	ror	r20
    5410:	8a 95       	dec	r24
    5412:	e2 f7       	brpl	.-8      	; 0x540c <DIO_enumGetPinValue+0xa2>
    5414:	ca 01       	movw	r24, r20
    5416:	ec 81       	ldd	r30, Y+4	; 0x04
    5418:	fd 81       	ldd	r31, Y+5	; 0x05
    541a:	80 83       	st	Z, r24
    541c:	61 c0       	rjmp	.+194    	; 0x54e0 <DIO_enumGetPinValue+0x176>
		case DIO_PORTB: * Copy_PtrData = GET_BIT(PINB_Register,Copy_u8PIN); break;
    541e:	e6 e3       	ldi	r30, 0x36	; 54
    5420:	f0 e0       	ldi	r31, 0x00	; 0
    5422:	80 81       	ld	r24, Z
    5424:	48 2f       	mov	r20, r24
    5426:	50 e0       	ldi	r21, 0x00	; 0
    5428:	8b 81       	ldd	r24, Y+3	; 0x03
    542a:	28 2f       	mov	r18, r24
    542c:	30 e0       	ldi	r19, 0x00	; 0
    542e:	81 e0       	ldi	r24, 0x01	; 1
    5430:	90 e0       	ldi	r25, 0x00	; 0
    5432:	02 c0       	rjmp	.+4      	; 0x5438 <DIO_enumGetPinValue+0xce>
    5434:	88 0f       	add	r24, r24
    5436:	99 1f       	adc	r25, r25
    5438:	2a 95       	dec	r18
    543a:	e2 f7       	brpl	.-8      	; 0x5434 <DIO_enumGetPinValue+0xca>
    543c:	9a 01       	movw	r18, r20
    543e:	28 23       	and	r18, r24
    5440:	39 23       	and	r19, r25
    5442:	8b 81       	ldd	r24, Y+3	; 0x03
    5444:	88 2f       	mov	r24, r24
    5446:	90 e0       	ldi	r25, 0x00	; 0
    5448:	a9 01       	movw	r20, r18
    544a:	02 c0       	rjmp	.+4      	; 0x5450 <DIO_enumGetPinValue+0xe6>
    544c:	55 95       	asr	r21
    544e:	47 95       	ror	r20
    5450:	8a 95       	dec	r24
    5452:	e2 f7       	brpl	.-8      	; 0x544c <DIO_enumGetPinValue+0xe2>
    5454:	ca 01       	movw	r24, r20
    5456:	ec 81       	ldd	r30, Y+4	; 0x04
    5458:	fd 81       	ldd	r31, Y+5	; 0x05
    545a:	80 83       	st	Z, r24
    545c:	41 c0       	rjmp	.+130    	; 0x54e0 <DIO_enumGetPinValue+0x176>
		case DIO_PORTC: * Copy_PtrData = GET_BIT(PINC_Register,Copy_u8PIN); break;
    545e:	e3 e3       	ldi	r30, 0x33	; 51
    5460:	f0 e0       	ldi	r31, 0x00	; 0
    5462:	80 81       	ld	r24, Z
    5464:	48 2f       	mov	r20, r24
    5466:	50 e0       	ldi	r21, 0x00	; 0
    5468:	8b 81       	ldd	r24, Y+3	; 0x03
    546a:	28 2f       	mov	r18, r24
    546c:	30 e0       	ldi	r19, 0x00	; 0
    546e:	81 e0       	ldi	r24, 0x01	; 1
    5470:	90 e0       	ldi	r25, 0x00	; 0
    5472:	02 c0       	rjmp	.+4      	; 0x5478 <DIO_enumGetPinValue+0x10e>
    5474:	88 0f       	add	r24, r24
    5476:	99 1f       	adc	r25, r25
    5478:	2a 95       	dec	r18
    547a:	e2 f7       	brpl	.-8      	; 0x5474 <DIO_enumGetPinValue+0x10a>
    547c:	9a 01       	movw	r18, r20
    547e:	28 23       	and	r18, r24
    5480:	39 23       	and	r19, r25
    5482:	8b 81       	ldd	r24, Y+3	; 0x03
    5484:	88 2f       	mov	r24, r24
    5486:	90 e0       	ldi	r25, 0x00	; 0
    5488:	a9 01       	movw	r20, r18
    548a:	02 c0       	rjmp	.+4      	; 0x5490 <DIO_enumGetPinValue+0x126>
    548c:	55 95       	asr	r21
    548e:	47 95       	ror	r20
    5490:	8a 95       	dec	r24
    5492:	e2 f7       	brpl	.-8      	; 0x548c <DIO_enumGetPinValue+0x122>
    5494:	ca 01       	movw	r24, r20
    5496:	ec 81       	ldd	r30, Y+4	; 0x04
    5498:	fd 81       	ldd	r31, Y+5	; 0x05
    549a:	80 83       	st	Z, r24
    549c:	21 c0       	rjmp	.+66     	; 0x54e0 <DIO_enumGetPinValue+0x176>
		case DIO_PORTD: * Copy_PtrData = GET_BIT(PIND_Register,Copy_u8PIN); break;
    549e:	e0 e3       	ldi	r30, 0x30	; 48
    54a0:	f0 e0       	ldi	r31, 0x00	; 0
    54a2:	80 81       	ld	r24, Z
    54a4:	48 2f       	mov	r20, r24
    54a6:	50 e0       	ldi	r21, 0x00	; 0
    54a8:	8b 81       	ldd	r24, Y+3	; 0x03
    54aa:	28 2f       	mov	r18, r24
    54ac:	30 e0       	ldi	r19, 0x00	; 0
    54ae:	81 e0       	ldi	r24, 0x01	; 1
    54b0:	90 e0       	ldi	r25, 0x00	; 0
    54b2:	02 c0       	rjmp	.+4      	; 0x54b8 <DIO_enumGetPinValue+0x14e>
    54b4:	88 0f       	add	r24, r24
    54b6:	99 1f       	adc	r25, r25
    54b8:	2a 95       	dec	r18
    54ba:	e2 f7       	brpl	.-8      	; 0x54b4 <DIO_enumGetPinValue+0x14a>
    54bc:	9a 01       	movw	r18, r20
    54be:	28 23       	and	r18, r24
    54c0:	39 23       	and	r19, r25
    54c2:	8b 81       	ldd	r24, Y+3	; 0x03
    54c4:	88 2f       	mov	r24, r24
    54c6:	90 e0       	ldi	r25, 0x00	; 0
    54c8:	a9 01       	movw	r20, r18
    54ca:	02 c0       	rjmp	.+4      	; 0x54d0 <DIO_enumGetPinValue+0x166>
    54cc:	55 95       	asr	r21
    54ce:	47 95       	ror	r20
    54d0:	8a 95       	dec	r24
    54d2:	e2 f7       	brpl	.-8      	; 0x54cc <DIO_enumGetPinValue+0x162>
    54d4:	ca 01       	movw	r24, r20
    54d6:	ec 81       	ldd	r30, Y+4	; 0x04
    54d8:	fd 81       	ldd	r31, Y+5	; 0x05
    54da:	80 83       	st	Z, r24
    54dc:	01 c0       	rjmp	.+2      	; 0x54e0 <DIO_enumGetPinValue+0x176>
	}

	else
	{
		/* in case of error in the Pin ID or PORT ID */
		LOC_enumState = DIO_NOK ;
    54de:	19 82       	std	Y+1, r1	; 0x01
	}

	return LOC_enumState;
    54e0:	89 81       	ldd	r24, Y+1	; 0x01
}
    54e2:	27 96       	adiw	r28, 0x07	; 7
    54e4:	0f b6       	in	r0, 0x3f	; 63
    54e6:	f8 94       	cli
    54e8:	de bf       	out	0x3e, r29	; 62
    54ea:	0f be       	out	0x3f, r0	; 63
    54ec:	cd bf       	out	0x3d, r28	; 61
    54ee:	cf 91       	pop	r28
    54f0:	df 91       	pop	r29
    54f2:	08 95       	ret

000054f4 <DIO_enumTogglePinValue>:


DIO_ErrorStatus DIO_enumTogglePinValue  ( u8 Copy_u8PORT, u8 Copy_u8PIN )
{
    54f4:	df 93       	push	r29
    54f6:	cf 93       	push	r28
    54f8:	00 d0       	rcall	.+0      	; 0x54fa <DIO_enumTogglePinValue+0x6>
    54fa:	00 d0       	rcall	.+0      	; 0x54fc <DIO_enumTogglePinValue+0x8>
    54fc:	0f 92       	push	r0
    54fe:	cd b7       	in	r28, 0x3d	; 61
    5500:	de b7       	in	r29, 0x3e	; 62
    5502:	8a 83       	std	Y+2, r24	; 0x02
    5504:	6b 83       	std	Y+3, r22	; 0x03
	DIO_ErrorStatus LOC_enumState = DIO_OK ;
    5506:	81 e0       	ldi	r24, 0x01	; 1
    5508:	89 83       	std	Y+1, r24	; 0x01

	if (Copy_u8PIN <= DIO_PIN7)
    550a:	8b 81       	ldd	r24, Y+3	; 0x03
    550c:	88 30       	cpi	r24, 0x08	; 8
    550e:	08 f0       	brcs	.+2      	; 0x5512 <DIO_enumTogglePinValue+0x1e>
    5510:	6f c0       	rjmp	.+222    	; 0x55f0 <DIO_enumTogglePinValue+0xfc>
	{
		switch (Copy_u8PORT)
    5512:	8a 81       	ldd	r24, Y+2	; 0x02
    5514:	28 2f       	mov	r18, r24
    5516:	30 e0       	ldi	r19, 0x00	; 0
    5518:	3d 83       	std	Y+5, r19	; 0x05
    551a:	2c 83       	std	Y+4, r18	; 0x04
    551c:	8c 81       	ldd	r24, Y+4	; 0x04
    551e:	9d 81       	ldd	r25, Y+5	; 0x05
    5520:	81 30       	cpi	r24, 0x01	; 1
    5522:	91 05       	cpc	r25, r1
    5524:	49 f1       	breq	.+82     	; 0x5578 <DIO_enumTogglePinValue+0x84>
    5526:	2c 81       	ldd	r18, Y+4	; 0x04
    5528:	3d 81       	ldd	r19, Y+5	; 0x05
    552a:	22 30       	cpi	r18, 0x02	; 2
    552c:	31 05       	cpc	r19, r1
    552e:	2c f4       	brge	.+10     	; 0x553a <DIO_enumTogglePinValue+0x46>
    5530:	8c 81       	ldd	r24, Y+4	; 0x04
    5532:	9d 81       	ldd	r25, Y+5	; 0x05
    5534:	00 97       	sbiw	r24, 0x00	; 0
    5536:	61 f0       	breq	.+24     	; 0x5550 <DIO_enumTogglePinValue+0x5c>
    5538:	5c c0       	rjmp	.+184    	; 0x55f2 <DIO_enumTogglePinValue+0xfe>
    553a:	2c 81       	ldd	r18, Y+4	; 0x04
    553c:	3d 81       	ldd	r19, Y+5	; 0x05
    553e:	22 30       	cpi	r18, 0x02	; 2
    5540:	31 05       	cpc	r19, r1
    5542:	71 f1       	breq	.+92     	; 0x55a0 <DIO_enumTogglePinValue+0xac>
    5544:	8c 81       	ldd	r24, Y+4	; 0x04
    5546:	9d 81       	ldd	r25, Y+5	; 0x05
    5548:	83 30       	cpi	r24, 0x03	; 3
    554a:	91 05       	cpc	r25, r1
    554c:	e9 f1       	breq	.+122    	; 0x55c8 <DIO_enumTogglePinValue+0xd4>
    554e:	51 c0       	rjmp	.+162    	; 0x55f2 <DIO_enumTogglePinValue+0xfe>
		{
		case DIO_PORTA : TOG_BIT(PORTA_Register,Copy_u8PIN);
    5550:	ab e3       	ldi	r26, 0x3B	; 59
    5552:	b0 e0       	ldi	r27, 0x00	; 0
    5554:	eb e3       	ldi	r30, 0x3B	; 59
    5556:	f0 e0       	ldi	r31, 0x00	; 0
    5558:	80 81       	ld	r24, Z
    555a:	48 2f       	mov	r20, r24
    555c:	8b 81       	ldd	r24, Y+3	; 0x03
    555e:	28 2f       	mov	r18, r24
    5560:	30 e0       	ldi	r19, 0x00	; 0
    5562:	81 e0       	ldi	r24, 0x01	; 1
    5564:	90 e0       	ldi	r25, 0x00	; 0
    5566:	02 2e       	mov	r0, r18
    5568:	02 c0       	rjmp	.+4      	; 0x556e <DIO_enumTogglePinValue+0x7a>
    556a:	88 0f       	add	r24, r24
    556c:	99 1f       	adc	r25, r25
    556e:	0a 94       	dec	r0
    5570:	e2 f7       	brpl	.-8      	; 0x556a <DIO_enumTogglePinValue+0x76>
    5572:	84 27       	eor	r24, r20
    5574:	8c 93       	st	X, r24
    5576:	3d c0       	rjmp	.+122    	; 0x55f2 <DIO_enumTogglePinValue+0xfe>
		break ;
		case DIO_PORTB : TOG_BIT(PORTB_Register,Copy_u8PIN);
    5578:	a8 e3       	ldi	r26, 0x38	; 56
    557a:	b0 e0       	ldi	r27, 0x00	; 0
    557c:	e8 e3       	ldi	r30, 0x38	; 56
    557e:	f0 e0       	ldi	r31, 0x00	; 0
    5580:	80 81       	ld	r24, Z
    5582:	48 2f       	mov	r20, r24
    5584:	8b 81       	ldd	r24, Y+3	; 0x03
    5586:	28 2f       	mov	r18, r24
    5588:	30 e0       	ldi	r19, 0x00	; 0
    558a:	81 e0       	ldi	r24, 0x01	; 1
    558c:	90 e0       	ldi	r25, 0x00	; 0
    558e:	02 2e       	mov	r0, r18
    5590:	02 c0       	rjmp	.+4      	; 0x5596 <DIO_enumTogglePinValue+0xa2>
    5592:	88 0f       	add	r24, r24
    5594:	99 1f       	adc	r25, r25
    5596:	0a 94       	dec	r0
    5598:	e2 f7       	brpl	.-8      	; 0x5592 <DIO_enumTogglePinValue+0x9e>
    559a:	84 27       	eor	r24, r20
    559c:	8c 93       	st	X, r24
    559e:	29 c0       	rjmp	.+82     	; 0x55f2 <DIO_enumTogglePinValue+0xfe>
		break ;
		case DIO_PORTC : TOG_BIT(PORTC_Register,Copy_u8PIN);
    55a0:	a5 e3       	ldi	r26, 0x35	; 53
    55a2:	b0 e0       	ldi	r27, 0x00	; 0
    55a4:	e5 e3       	ldi	r30, 0x35	; 53
    55a6:	f0 e0       	ldi	r31, 0x00	; 0
    55a8:	80 81       	ld	r24, Z
    55aa:	48 2f       	mov	r20, r24
    55ac:	8b 81       	ldd	r24, Y+3	; 0x03
    55ae:	28 2f       	mov	r18, r24
    55b0:	30 e0       	ldi	r19, 0x00	; 0
    55b2:	81 e0       	ldi	r24, 0x01	; 1
    55b4:	90 e0       	ldi	r25, 0x00	; 0
    55b6:	02 2e       	mov	r0, r18
    55b8:	02 c0       	rjmp	.+4      	; 0x55be <DIO_enumTogglePinValue+0xca>
    55ba:	88 0f       	add	r24, r24
    55bc:	99 1f       	adc	r25, r25
    55be:	0a 94       	dec	r0
    55c0:	e2 f7       	brpl	.-8      	; 0x55ba <DIO_enumTogglePinValue+0xc6>
    55c2:	84 27       	eor	r24, r20
    55c4:	8c 93       	st	X, r24
    55c6:	15 c0       	rjmp	.+42     	; 0x55f2 <DIO_enumTogglePinValue+0xfe>
		break ;
		case DIO_PORTD : TOG_BIT(PORTD_Register,Copy_u8PIN);
    55c8:	a2 e3       	ldi	r26, 0x32	; 50
    55ca:	b0 e0       	ldi	r27, 0x00	; 0
    55cc:	e2 e3       	ldi	r30, 0x32	; 50
    55ce:	f0 e0       	ldi	r31, 0x00	; 0
    55d0:	80 81       	ld	r24, Z
    55d2:	48 2f       	mov	r20, r24
    55d4:	8b 81       	ldd	r24, Y+3	; 0x03
    55d6:	28 2f       	mov	r18, r24
    55d8:	30 e0       	ldi	r19, 0x00	; 0
    55da:	81 e0       	ldi	r24, 0x01	; 1
    55dc:	90 e0       	ldi	r25, 0x00	; 0
    55de:	02 2e       	mov	r0, r18
    55e0:	02 c0       	rjmp	.+4      	; 0x55e6 <DIO_enumTogglePinValue+0xf2>
    55e2:	88 0f       	add	r24, r24
    55e4:	99 1f       	adc	r25, r25
    55e6:	0a 94       	dec	r0
    55e8:	e2 f7       	brpl	.-8      	; 0x55e2 <DIO_enumTogglePinValue+0xee>
    55ea:	84 27       	eor	r24, r20
    55ec:	8c 93       	st	X, r24
    55ee:	01 c0       	rjmp	.+2      	; 0x55f2 <DIO_enumTogglePinValue+0xfe>

	}
	else
	{
		/* in case of error in the Pin ID or PORT ID */
		LOC_enumState = DIO_NOK ;
    55f0:	19 82       	std	Y+1, r1	; 0x01
	}

	return LOC_enumState;
    55f2:	89 81       	ldd	r24, Y+1	; 0x01
}
    55f4:	0f 90       	pop	r0
    55f6:	0f 90       	pop	r0
    55f8:	0f 90       	pop	r0
    55fa:	0f 90       	pop	r0
    55fc:	0f 90       	pop	r0
    55fe:	cf 91       	pop	r28
    5600:	df 91       	pop	r29
    5602:	08 95       	ret

00005604 <DIO_enumConnectPullup>:


DIO_ErrorStatus DIO_enumConnectPullup (u8 Copy_u8PORT ,u8 Copy_u8PIN, u8 Copy_u8ConnectPullup)
{
    5604:	df 93       	push	r29
    5606:	cf 93       	push	r28
    5608:	00 d0       	rcall	.+0      	; 0x560a <DIO_enumConnectPullup+0x6>
    560a:	00 d0       	rcall	.+0      	; 0x560c <DIO_enumConnectPullup+0x8>
    560c:	00 d0       	rcall	.+0      	; 0x560e <DIO_enumConnectPullup+0xa>
    560e:	cd b7       	in	r28, 0x3d	; 61
    5610:	de b7       	in	r29, 0x3e	; 62
    5612:	8a 83       	std	Y+2, r24	; 0x02
    5614:	6b 83       	std	Y+3, r22	; 0x03
    5616:	4c 83       	std	Y+4, r20	; 0x04

	DIO_ErrorStatus LOC_enumState = DIO_OK ;
    5618:	81 e0       	ldi	r24, 0x01	; 1
    561a:	89 83       	std	Y+1, r24	; 0x01

	if ((Copy_u8PORT <= DIO_PORTD) && (Copy_u8PIN <= DIO_PIN7))
    561c:	8a 81       	ldd	r24, Y+2	; 0x02
    561e:	84 30       	cpi	r24, 0x04	; 4
    5620:	08 f0       	brcs	.+2      	; 0x5624 <DIO_enumConnectPullup+0x20>
    5622:	3e c1       	rjmp	.+636    	; 0x58a0 <DIO_enumConnectPullup+0x29c>
    5624:	8b 81       	ldd	r24, Y+3	; 0x03
    5626:	88 30       	cpi	r24, 0x08	; 8
    5628:	08 f0       	brcs	.+2      	; 0x562c <DIO_enumConnectPullup+0x28>
    562a:	3a c1       	rjmp	.+628    	; 0x58a0 <DIO_enumConnectPullup+0x29c>
	{
		switch(Copy_u8PORT)
    562c:	8a 81       	ldd	r24, Y+2	; 0x02
    562e:	28 2f       	mov	r18, r24
    5630:	30 e0       	ldi	r19, 0x00	; 0
    5632:	3e 83       	std	Y+6, r19	; 0x06
    5634:	2d 83       	std	Y+5, r18	; 0x05
    5636:	8d 81       	ldd	r24, Y+5	; 0x05
    5638:	9e 81       	ldd	r25, Y+6	; 0x06
    563a:	81 30       	cpi	r24, 0x01	; 1
    563c:	91 05       	cpc	r25, r1
    563e:	09 f4       	brne	.+2      	; 0x5642 <DIO_enumConnectPullup+0x3e>
    5640:	5d c0       	rjmp	.+186    	; 0x56fc <DIO_enumConnectPullup+0xf8>
    5642:	2d 81       	ldd	r18, Y+5	; 0x05
    5644:	3e 81       	ldd	r19, Y+6	; 0x06
    5646:	22 30       	cpi	r18, 0x02	; 2
    5648:	31 05       	cpc	r19, r1
    564a:	2c f4       	brge	.+10     	; 0x5656 <DIO_enumConnectPullup+0x52>
    564c:	8d 81       	ldd	r24, Y+5	; 0x05
    564e:	9e 81       	ldd	r25, Y+6	; 0x06
    5650:	00 97       	sbiw	r24, 0x00	; 0
    5652:	71 f0       	breq	.+28     	; 0x5670 <DIO_enumConnectPullup+0x6c>
    5654:	26 c1       	rjmp	.+588    	; 0x58a2 <DIO_enumConnectPullup+0x29e>
    5656:	2d 81       	ldd	r18, Y+5	; 0x05
    5658:	3e 81       	ldd	r19, Y+6	; 0x06
    565a:	22 30       	cpi	r18, 0x02	; 2
    565c:	31 05       	cpc	r19, r1
    565e:	09 f4       	brne	.+2      	; 0x5662 <DIO_enumConnectPullup+0x5e>
    5660:	93 c0       	rjmp	.+294    	; 0x5788 <DIO_enumConnectPullup+0x184>
    5662:	8d 81       	ldd	r24, Y+5	; 0x05
    5664:	9e 81       	ldd	r25, Y+6	; 0x06
    5666:	83 30       	cpi	r24, 0x03	; 3
    5668:	91 05       	cpc	r25, r1
    566a:	09 f4       	brne	.+2      	; 0x566e <DIO_enumConnectPullup+0x6a>
    566c:	d3 c0       	rjmp	.+422    	; 0x5814 <DIO_enumConnectPullup+0x210>
    566e:	19 c1       	rjmp	.+562    	; 0x58a2 <DIO_enumConnectPullup+0x29e>
		{
		/* Connect or disconnect the pull up resistance to the given pin in port A */
		case DIO_PORTA:
			if(Copy_u8ConnectPullup==DIO_PIN_HIGH)
    5670:	8c 81       	ldd	r24, Y+4	; 0x04
    5672:	81 30       	cpi	r24, 0x01	; 1
    5674:	71 f5       	brne	.+92     	; 0x56d2 <DIO_enumConnectPullup+0xce>
			{
				CLR_BIT(SFIOR,PUD);
    5676:	a0 e5       	ldi	r26, 0x50	; 80
    5678:	b0 e0       	ldi	r27, 0x00	; 0
    567a:	e0 e5       	ldi	r30, 0x50	; 80
    567c:	f0 e0       	ldi	r31, 0x00	; 0
    567e:	80 81       	ld	r24, Z
    5680:	8b 7f       	andi	r24, 0xFB	; 251
    5682:	8c 93       	st	X, r24
				CLR_BIT(DDRA_Register,Copy_u8PIN);
    5684:	aa e3       	ldi	r26, 0x3A	; 58
    5686:	b0 e0       	ldi	r27, 0x00	; 0
    5688:	ea e3       	ldi	r30, 0x3A	; 58
    568a:	f0 e0       	ldi	r31, 0x00	; 0
    568c:	80 81       	ld	r24, Z
    568e:	48 2f       	mov	r20, r24
    5690:	8b 81       	ldd	r24, Y+3	; 0x03
    5692:	28 2f       	mov	r18, r24
    5694:	30 e0       	ldi	r19, 0x00	; 0
    5696:	81 e0       	ldi	r24, 0x01	; 1
    5698:	90 e0       	ldi	r25, 0x00	; 0
    569a:	02 c0       	rjmp	.+4      	; 0x56a0 <DIO_enumConnectPullup+0x9c>
    569c:	88 0f       	add	r24, r24
    569e:	99 1f       	adc	r25, r25
    56a0:	2a 95       	dec	r18
    56a2:	e2 f7       	brpl	.-8      	; 0x569c <DIO_enumConnectPullup+0x98>
    56a4:	80 95       	com	r24
    56a6:	84 23       	and	r24, r20
    56a8:	8c 93       	st	X, r24
				SET_BIT(PORTA_Register,Copy_u8PIN);
    56aa:	ab e3       	ldi	r26, 0x3B	; 59
    56ac:	b0 e0       	ldi	r27, 0x00	; 0
    56ae:	eb e3       	ldi	r30, 0x3B	; 59
    56b0:	f0 e0       	ldi	r31, 0x00	; 0
    56b2:	80 81       	ld	r24, Z
    56b4:	48 2f       	mov	r20, r24
    56b6:	8b 81       	ldd	r24, Y+3	; 0x03
    56b8:	28 2f       	mov	r18, r24
    56ba:	30 e0       	ldi	r19, 0x00	; 0
    56bc:	81 e0       	ldi	r24, 0x01	; 1
    56be:	90 e0       	ldi	r25, 0x00	; 0
    56c0:	02 2e       	mov	r0, r18
    56c2:	02 c0       	rjmp	.+4      	; 0x56c8 <DIO_enumConnectPullup+0xc4>
    56c4:	88 0f       	add	r24, r24
    56c6:	99 1f       	adc	r25, r25
    56c8:	0a 94       	dec	r0
    56ca:	e2 f7       	brpl	.-8      	; 0x56c4 <DIO_enumConnectPullup+0xc0>
    56cc:	84 2b       	or	r24, r20
    56ce:	8c 93       	st	X, r24
    56d0:	e8 c0       	rjmp	.+464    	; 0x58a2 <DIO_enumConnectPullup+0x29e>
			}
			else
			{
				CLR_BIT(PORTA_Register,Copy_u8PIN);
    56d2:	ab e3       	ldi	r26, 0x3B	; 59
    56d4:	b0 e0       	ldi	r27, 0x00	; 0
    56d6:	eb e3       	ldi	r30, 0x3B	; 59
    56d8:	f0 e0       	ldi	r31, 0x00	; 0
    56da:	80 81       	ld	r24, Z
    56dc:	48 2f       	mov	r20, r24
    56de:	8b 81       	ldd	r24, Y+3	; 0x03
    56e0:	28 2f       	mov	r18, r24
    56e2:	30 e0       	ldi	r19, 0x00	; 0
    56e4:	81 e0       	ldi	r24, 0x01	; 1
    56e6:	90 e0       	ldi	r25, 0x00	; 0
    56e8:	02 2e       	mov	r0, r18
    56ea:	02 c0       	rjmp	.+4      	; 0x56f0 <DIO_enumConnectPullup+0xec>
    56ec:	88 0f       	add	r24, r24
    56ee:	99 1f       	adc	r25, r25
    56f0:	0a 94       	dec	r0
    56f2:	e2 f7       	brpl	.-8      	; 0x56ec <DIO_enumConnectPullup+0xe8>
    56f4:	80 95       	com	r24
    56f6:	84 23       	and	r24, r20
    56f8:	8c 93       	st	X, r24
    56fa:	d3 c0       	rjmp	.+422    	; 0x58a2 <DIO_enumConnectPullup+0x29e>
			}
			break;
			/* Connect or disconnect the pull up resistance to the given pin in port B */
		case DIO_PORTB:
			if(Copy_u8ConnectPullup==DIO_PIN_HIGH)
    56fc:	8c 81       	ldd	r24, Y+4	; 0x04
    56fe:	81 30       	cpi	r24, 0x01	; 1
    5700:	71 f5       	brne	.+92     	; 0x575e <DIO_enumConnectPullup+0x15a>
			{
				CLR_BIT(SFIOR,PUD);
    5702:	a0 e5       	ldi	r26, 0x50	; 80
    5704:	b0 e0       	ldi	r27, 0x00	; 0
    5706:	e0 e5       	ldi	r30, 0x50	; 80
    5708:	f0 e0       	ldi	r31, 0x00	; 0
    570a:	80 81       	ld	r24, Z
    570c:	8b 7f       	andi	r24, 0xFB	; 251
    570e:	8c 93       	st	X, r24
				CLR_BIT(DDRB_Register,Copy_u8PIN);
    5710:	a7 e3       	ldi	r26, 0x37	; 55
    5712:	b0 e0       	ldi	r27, 0x00	; 0
    5714:	e7 e3       	ldi	r30, 0x37	; 55
    5716:	f0 e0       	ldi	r31, 0x00	; 0
    5718:	80 81       	ld	r24, Z
    571a:	48 2f       	mov	r20, r24
    571c:	8b 81       	ldd	r24, Y+3	; 0x03
    571e:	28 2f       	mov	r18, r24
    5720:	30 e0       	ldi	r19, 0x00	; 0
    5722:	81 e0       	ldi	r24, 0x01	; 1
    5724:	90 e0       	ldi	r25, 0x00	; 0
    5726:	02 c0       	rjmp	.+4      	; 0x572c <DIO_enumConnectPullup+0x128>
    5728:	88 0f       	add	r24, r24
    572a:	99 1f       	adc	r25, r25
    572c:	2a 95       	dec	r18
    572e:	e2 f7       	brpl	.-8      	; 0x5728 <DIO_enumConnectPullup+0x124>
    5730:	80 95       	com	r24
    5732:	84 23       	and	r24, r20
    5734:	8c 93       	st	X, r24
				SET_BIT(PORTB_Register,Copy_u8PIN);
    5736:	a8 e3       	ldi	r26, 0x38	; 56
    5738:	b0 e0       	ldi	r27, 0x00	; 0
    573a:	e8 e3       	ldi	r30, 0x38	; 56
    573c:	f0 e0       	ldi	r31, 0x00	; 0
    573e:	80 81       	ld	r24, Z
    5740:	48 2f       	mov	r20, r24
    5742:	8b 81       	ldd	r24, Y+3	; 0x03
    5744:	28 2f       	mov	r18, r24
    5746:	30 e0       	ldi	r19, 0x00	; 0
    5748:	81 e0       	ldi	r24, 0x01	; 1
    574a:	90 e0       	ldi	r25, 0x00	; 0
    574c:	02 2e       	mov	r0, r18
    574e:	02 c0       	rjmp	.+4      	; 0x5754 <DIO_enumConnectPullup+0x150>
    5750:	88 0f       	add	r24, r24
    5752:	99 1f       	adc	r25, r25
    5754:	0a 94       	dec	r0
    5756:	e2 f7       	brpl	.-8      	; 0x5750 <DIO_enumConnectPullup+0x14c>
    5758:	84 2b       	or	r24, r20
    575a:	8c 93       	st	X, r24
    575c:	a2 c0       	rjmp	.+324    	; 0x58a2 <DIO_enumConnectPullup+0x29e>
			}
			else
			{
				CLR_BIT(PORTB_Register,Copy_u8PIN);
    575e:	a8 e3       	ldi	r26, 0x38	; 56
    5760:	b0 e0       	ldi	r27, 0x00	; 0
    5762:	e8 e3       	ldi	r30, 0x38	; 56
    5764:	f0 e0       	ldi	r31, 0x00	; 0
    5766:	80 81       	ld	r24, Z
    5768:	48 2f       	mov	r20, r24
    576a:	8b 81       	ldd	r24, Y+3	; 0x03
    576c:	28 2f       	mov	r18, r24
    576e:	30 e0       	ldi	r19, 0x00	; 0
    5770:	81 e0       	ldi	r24, 0x01	; 1
    5772:	90 e0       	ldi	r25, 0x00	; 0
    5774:	02 2e       	mov	r0, r18
    5776:	02 c0       	rjmp	.+4      	; 0x577c <DIO_enumConnectPullup+0x178>
    5778:	88 0f       	add	r24, r24
    577a:	99 1f       	adc	r25, r25
    577c:	0a 94       	dec	r0
    577e:	e2 f7       	brpl	.-8      	; 0x5778 <DIO_enumConnectPullup+0x174>
    5780:	80 95       	com	r24
    5782:	84 23       	and	r24, r20
    5784:	8c 93       	st	X, r24
    5786:	8d c0       	rjmp	.+282    	; 0x58a2 <DIO_enumConnectPullup+0x29e>
			}
			break;
			/* Connect or disconnect the pull up resistance to the given pin in port C */
		case DIO_PORTC:
			if(Copy_u8ConnectPullup==DIO_PIN_HIGH)
    5788:	8c 81       	ldd	r24, Y+4	; 0x04
    578a:	81 30       	cpi	r24, 0x01	; 1
    578c:	71 f5       	brne	.+92     	; 0x57ea <DIO_enumConnectPullup+0x1e6>
			{
				CLR_BIT(SFIOR,PUD);
    578e:	a0 e5       	ldi	r26, 0x50	; 80
    5790:	b0 e0       	ldi	r27, 0x00	; 0
    5792:	e0 e5       	ldi	r30, 0x50	; 80
    5794:	f0 e0       	ldi	r31, 0x00	; 0
    5796:	80 81       	ld	r24, Z
    5798:	8b 7f       	andi	r24, 0xFB	; 251
    579a:	8c 93       	st	X, r24
				CLR_BIT(DDRC_Register,Copy_u8PIN);
    579c:	a4 e3       	ldi	r26, 0x34	; 52
    579e:	b0 e0       	ldi	r27, 0x00	; 0
    57a0:	e4 e3       	ldi	r30, 0x34	; 52
    57a2:	f0 e0       	ldi	r31, 0x00	; 0
    57a4:	80 81       	ld	r24, Z
    57a6:	48 2f       	mov	r20, r24
    57a8:	8b 81       	ldd	r24, Y+3	; 0x03
    57aa:	28 2f       	mov	r18, r24
    57ac:	30 e0       	ldi	r19, 0x00	; 0
    57ae:	81 e0       	ldi	r24, 0x01	; 1
    57b0:	90 e0       	ldi	r25, 0x00	; 0
    57b2:	02 c0       	rjmp	.+4      	; 0x57b8 <DIO_enumConnectPullup+0x1b4>
    57b4:	88 0f       	add	r24, r24
    57b6:	99 1f       	adc	r25, r25
    57b8:	2a 95       	dec	r18
    57ba:	e2 f7       	brpl	.-8      	; 0x57b4 <DIO_enumConnectPullup+0x1b0>
    57bc:	80 95       	com	r24
    57be:	84 23       	and	r24, r20
    57c0:	8c 93       	st	X, r24
				SET_BIT(PORTC_Register,Copy_u8PIN);
    57c2:	a5 e3       	ldi	r26, 0x35	; 53
    57c4:	b0 e0       	ldi	r27, 0x00	; 0
    57c6:	e5 e3       	ldi	r30, 0x35	; 53
    57c8:	f0 e0       	ldi	r31, 0x00	; 0
    57ca:	80 81       	ld	r24, Z
    57cc:	48 2f       	mov	r20, r24
    57ce:	8b 81       	ldd	r24, Y+3	; 0x03
    57d0:	28 2f       	mov	r18, r24
    57d2:	30 e0       	ldi	r19, 0x00	; 0
    57d4:	81 e0       	ldi	r24, 0x01	; 1
    57d6:	90 e0       	ldi	r25, 0x00	; 0
    57d8:	02 2e       	mov	r0, r18
    57da:	02 c0       	rjmp	.+4      	; 0x57e0 <DIO_enumConnectPullup+0x1dc>
    57dc:	88 0f       	add	r24, r24
    57de:	99 1f       	adc	r25, r25
    57e0:	0a 94       	dec	r0
    57e2:	e2 f7       	brpl	.-8      	; 0x57dc <DIO_enumConnectPullup+0x1d8>
    57e4:	84 2b       	or	r24, r20
    57e6:	8c 93       	st	X, r24
    57e8:	5c c0       	rjmp	.+184    	; 0x58a2 <DIO_enumConnectPullup+0x29e>
			}
			else
			{
				CLR_BIT(PORTC_Register,Copy_u8PIN);
    57ea:	a5 e3       	ldi	r26, 0x35	; 53
    57ec:	b0 e0       	ldi	r27, 0x00	; 0
    57ee:	e5 e3       	ldi	r30, 0x35	; 53
    57f0:	f0 e0       	ldi	r31, 0x00	; 0
    57f2:	80 81       	ld	r24, Z
    57f4:	48 2f       	mov	r20, r24
    57f6:	8b 81       	ldd	r24, Y+3	; 0x03
    57f8:	28 2f       	mov	r18, r24
    57fa:	30 e0       	ldi	r19, 0x00	; 0
    57fc:	81 e0       	ldi	r24, 0x01	; 1
    57fe:	90 e0       	ldi	r25, 0x00	; 0
    5800:	02 2e       	mov	r0, r18
    5802:	02 c0       	rjmp	.+4      	; 0x5808 <DIO_enumConnectPullup+0x204>
    5804:	88 0f       	add	r24, r24
    5806:	99 1f       	adc	r25, r25
    5808:	0a 94       	dec	r0
    580a:	e2 f7       	brpl	.-8      	; 0x5804 <DIO_enumConnectPullup+0x200>
    580c:	80 95       	com	r24
    580e:	84 23       	and	r24, r20
    5810:	8c 93       	st	X, r24
    5812:	47 c0       	rjmp	.+142    	; 0x58a2 <DIO_enumConnectPullup+0x29e>
			}
			break;
			/* Connect or disconnect the pull up resistance to the given pin in port D */
		case DIO_PORTD:
			if(Copy_u8ConnectPullup==DIO_PIN_HIGH)
    5814:	8c 81       	ldd	r24, Y+4	; 0x04
    5816:	81 30       	cpi	r24, 0x01	; 1
    5818:	71 f5       	brne	.+92     	; 0x5876 <DIO_enumConnectPullup+0x272>
			{
				CLR_BIT(SFIOR,PUD);
    581a:	a0 e5       	ldi	r26, 0x50	; 80
    581c:	b0 e0       	ldi	r27, 0x00	; 0
    581e:	e0 e5       	ldi	r30, 0x50	; 80
    5820:	f0 e0       	ldi	r31, 0x00	; 0
    5822:	80 81       	ld	r24, Z
    5824:	8b 7f       	andi	r24, 0xFB	; 251
    5826:	8c 93       	st	X, r24
				CLR_BIT(DDRD_Register,Copy_u8PIN);
    5828:	a1 e3       	ldi	r26, 0x31	; 49
    582a:	b0 e0       	ldi	r27, 0x00	; 0
    582c:	e1 e3       	ldi	r30, 0x31	; 49
    582e:	f0 e0       	ldi	r31, 0x00	; 0
    5830:	80 81       	ld	r24, Z
    5832:	48 2f       	mov	r20, r24
    5834:	8b 81       	ldd	r24, Y+3	; 0x03
    5836:	28 2f       	mov	r18, r24
    5838:	30 e0       	ldi	r19, 0x00	; 0
    583a:	81 e0       	ldi	r24, 0x01	; 1
    583c:	90 e0       	ldi	r25, 0x00	; 0
    583e:	02 c0       	rjmp	.+4      	; 0x5844 <DIO_enumConnectPullup+0x240>
    5840:	88 0f       	add	r24, r24
    5842:	99 1f       	adc	r25, r25
    5844:	2a 95       	dec	r18
    5846:	e2 f7       	brpl	.-8      	; 0x5840 <DIO_enumConnectPullup+0x23c>
    5848:	80 95       	com	r24
    584a:	84 23       	and	r24, r20
    584c:	8c 93       	st	X, r24
				SET_BIT(PORTD_Register,Copy_u8PIN);
    584e:	a2 e3       	ldi	r26, 0x32	; 50
    5850:	b0 e0       	ldi	r27, 0x00	; 0
    5852:	e2 e3       	ldi	r30, 0x32	; 50
    5854:	f0 e0       	ldi	r31, 0x00	; 0
    5856:	80 81       	ld	r24, Z
    5858:	48 2f       	mov	r20, r24
    585a:	8b 81       	ldd	r24, Y+3	; 0x03
    585c:	28 2f       	mov	r18, r24
    585e:	30 e0       	ldi	r19, 0x00	; 0
    5860:	81 e0       	ldi	r24, 0x01	; 1
    5862:	90 e0       	ldi	r25, 0x00	; 0
    5864:	02 2e       	mov	r0, r18
    5866:	02 c0       	rjmp	.+4      	; 0x586c <DIO_enumConnectPullup+0x268>
    5868:	88 0f       	add	r24, r24
    586a:	99 1f       	adc	r25, r25
    586c:	0a 94       	dec	r0
    586e:	e2 f7       	brpl	.-8      	; 0x5868 <DIO_enumConnectPullup+0x264>
    5870:	84 2b       	or	r24, r20
    5872:	8c 93       	st	X, r24
    5874:	16 c0       	rjmp	.+44     	; 0x58a2 <DIO_enumConnectPullup+0x29e>
			}
			else
			{
				CLR_BIT(PORTD_Register,Copy_u8PIN);
    5876:	a2 e3       	ldi	r26, 0x32	; 50
    5878:	b0 e0       	ldi	r27, 0x00	; 0
    587a:	e2 e3       	ldi	r30, 0x32	; 50
    587c:	f0 e0       	ldi	r31, 0x00	; 0
    587e:	80 81       	ld	r24, Z
    5880:	48 2f       	mov	r20, r24
    5882:	8b 81       	ldd	r24, Y+3	; 0x03
    5884:	28 2f       	mov	r18, r24
    5886:	30 e0       	ldi	r19, 0x00	; 0
    5888:	81 e0       	ldi	r24, 0x01	; 1
    588a:	90 e0       	ldi	r25, 0x00	; 0
    588c:	02 2e       	mov	r0, r18
    588e:	02 c0       	rjmp	.+4      	; 0x5894 <DIO_enumConnectPullup+0x290>
    5890:	88 0f       	add	r24, r24
    5892:	99 1f       	adc	r25, r25
    5894:	0a 94       	dec	r0
    5896:	e2 f7       	brpl	.-8      	; 0x5890 <DIO_enumConnectPullup+0x28c>
    5898:	80 95       	com	r24
    589a:	84 23       	and	r24, r20
    589c:	8c 93       	st	X, r24
    589e:	01 c0       	rjmp	.+2      	; 0x58a2 <DIO_enumConnectPullup+0x29e>
		}
	}

	else
	{
		LOC_enumState = DIO_NOK ;
    58a0:	19 82       	std	Y+1, r1	; 0x01
	}

	return LOC_enumState ;
    58a2:	89 81       	ldd	r24, Y+1	; 0x01


}
    58a4:	26 96       	adiw	r28, 0x06	; 6
    58a6:	0f b6       	in	r0, 0x3f	; 63
    58a8:	f8 94       	cli
    58aa:	de bf       	out	0x3e, r29	; 62
    58ac:	0f be       	out	0x3f, r0	; 63
    58ae:	cd bf       	out	0x3d, r28	; 61
    58b0:	cf 91       	pop	r28
    58b2:	df 91       	pop	r29
    58b4:	08 95       	ret

000058b6 <DIO_voidWriteHighNibbles>:




DIO_ErrorStatus DIO_voidWriteHighNibbles(u8 Copy_u8PORT,u8 Copy_u8value)
{
    58b6:	df 93       	push	r29
    58b8:	cf 93       	push	r28
    58ba:	00 d0       	rcall	.+0      	; 0x58bc <DIO_voidWriteHighNibbles+0x6>
    58bc:	00 d0       	rcall	.+0      	; 0x58be <DIO_voidWriteHighNibbles+0x8>
    58be:	0f 92       	push	r0
    58c0:	cd b7       	in	r28, 0x3d	; 61
    58c2:	de b7       	in	r29, 0x3e	; 62
    58c4:	8a 83       	std	Y+2, r24	; 0x02
    58c6:	6b 83       	std	Y+3, r22	; 0x03

	DIO_ErrorStatus LOC_enumState = DIO_OK ;
    58c8:	81 e0       	ldi	r24, 0x01	; 1
    58ca:	89 83       	std	Y+1, r24	; 0x01

	if ( (Copy_u8PORT <= DIO_PORTD))
    58cc:	8a 81       	ldd	r24, Y+2	; 0x02
    58ce:	84 30       	cpi	r24, 0x04	; 4
    58d0:	08 f0       	brcs	.+2      	; 0x58d4 <DIO_voidWriteHighNibbles+0x1e>
    58d2:	63 c0       	rjmp	.+198    	; 0x599a <DIO_voidWriteHighNibbles+0xe4>
	{
		Copy_u8value = (Copy_u8value<<4) ;
    58d4:	8b 81       	ldd	r24, Y+3	; 0x03
    58d6:	82 95       	swap	r24
    58d8:	80 7f       	andi	r24, 0xF0	; 240
    58da:	8b 83       	std	Y+3, r24	; 0x03
		switch(Copy_u8PORT)
    58dc:	8a 81       	ldd	r24, Y+2	; 0x02
    58de:	28 2f       	mov	r18, r24
    58e0:	30 e0       	ldi	r19, 0x00	; 0
    58e2:	3d 83       	std	Y+5, r19	; 0x05
    58e4:	2c 83       	std	Y+4, r18	; 0x04
    58e6:	8c 81       	ldd	r24, Y+4	; 0x04
    58e8:	9d 81       	ldd	r25, Y+5	; 0x05
    58ea:	81 30       	cpi	r24, 0x01	; 1
    58ec:	91 05       	cpc	r25, r1
    58ee:	29 f1       	breq	.+74     	; 0x593a <DIO_voidWriteHighNibbles+0x84>
    58f0:	2c 81       	ldd	r18, Y+4	; 0x04
    58f2:	3d 81       	ldd	r19, Y+5	; 0x05
    58f4:	22 30       	cpi	r18, 0x02	; 2
    58f6:	31 05       	cpc	r19, r1
    58f8:	2c f4       	brge	.+10     	; 0x5904 <DIO_voidWriteHighNibbles+0x4e>
    58fa:	8c 81       	ldd	r24, Y+4	; 0x04
    58fc:	9d 81       	ldd	r25, Y+5	; 0x05
    58fe:	00 97       	sbiw	r24, 0x00	; 0
    5900:	61 f0       	breq	.+24     	; 0x591a <DIO_voidWriteHighNibbles+0x64>
    5902:	4c c0       	rjmp	.+152    	; 0x599c <DIO_voidWriteHighNibbles+0xe6>
    5904:	2c 81       	ldd	r18, Y+4	; 0x04
    5906:	3d 81       	ldd	r19, Y+5	; 0x05
    5908:	22 30       	cpi	r18, 0x02	; 2
    590a:	31 05       	cpc	r19, r1
    590c:	31 f1       	breq	.+76     	; 0x595a <DIO_voidWriteHighNibbles+0xa4>
    590e:	8c 81       	ldd	r24, Y+4	; 0x04
    5910:	9d 81       	ldd	r25, Y+5	; 0x05
    5912:	83 30       	cpi	r24, 0x03	; 3
    5914:	91 05       	cpc	r25, r1
    5916:	89 f1       	breq	.+98     	; 0x597a <DIO_voidWriteHighNibbles+0xc4>
    5918:	41 c0       	rjmp	.+130    	; 0x599c <DIO_voidWriteHighNibbles+0xe6>
		{
		case DIO_PORTA :
			PORTA_Register&=0x0f;                   // make sure the high bits = 0000
    591a:	ab e3       	ldi	r26, 0x3B	; 59
    591c:	b0 e0       	ldi	r27, 0x00	; 0
    591e:	eb e3       	ldi	r30, 0x3B	; 59
    5920:	f0 e0       	ldi	r31, 0x00	; 0
    5922:	80 81       	ld	r24, Z
    5924:	8f 70       	andi	r24, 0x0F	; 15
    5926:	8c 93       	st	X, r24
			PORTA_Register|=Copy_u8value;			//Set only the high nibble of the port A by the given value
    5928:	ab e3       	ldi	r26, 0x3B	; 59
    592a:	b0 e0       	ldi	r27, 0x00	; 0
    592c:	eb e3       	ldi	r30, 0x3B	; 59
    592e:	f0 e0       	ldi	r31, 0x00	; 0
    5930:	90 81       	ld	r25, Z
    5932:	8b 81       	ldd	r24, Y+3	; 0x03
    5934:	89 2b       	or	r24, r25
    5936:	8c 93       	st	X, r24
    5938:	31 c0       	rjmp	.+98     	; 0x599c <DIO_voidWriteHighNibbles+0xe6>
			break ;
		case DIO_PORTB:
			PORTB_Register&=0x0f;                 //Set only the high nibble of the port B by the given value
    593a:	a8 e3       	ldi	r26, 0x38	; 56
    593c:	b0 e0       	ldi	r27, 0x00	; 0
    593e:	e8 e3       	ldi	r30, 0x38	; 56
    5940:	f0 e0       	ldi	r31, 0x00	; 0
    5942:	80 81       	ld	r24, Z
    5944:	8f 70       	andi	r24, 0x0F	; 15
    5946:	8c 93       	st	X, r24
			PORTB_Register|=Copy_u8value;
    5948:	a8 e3       	ldi	r26, 0x38	; 56
    594a:	b0 e0       	ldi	r27, 0x00	; 0
    594c:	e8 e3       	ldi	r30, 0x38	; 56
    594e:	f0 e0       	ldi	r31, 0x00	; 0
    5950:	90 81       	ld	r25, Z
    5952:	8b 81       	ldd	r24, Y+3	; 0x03
    5954:	89 2b       	or	r24, r25
    5956:	8c 93       	st	X, r24
    5958:	21 c0       	rjmp	.+66     	; 0x599c <DIO_voidWriteHighNibbles+0xe6>
			break ;
		case DIO_PORTC :
			PORTC_Register&=0x0f;                 //Set only the high nibble of the port C by the given value
    595a:	a5 e3       	ldi	r26, 0x35	; 53
    595c:	b0 e0       	ldi	r27, 0x00	; 0
    595e:	e5 e3       	ldi	r30, 0x35	; 53
    5960:	f0 e0       	ldi	r31, 0x00	; 0
    5962:	80 81       	ld	r24, Z
    5964:	8f 70       	andi	r24, 0x0F	; 15
    5966:	8c 93       	st	X, r24
			PORTC_Register|=Copy_u8value;
    5968:	a5 e3       	ldi	r26, 0x35	; 53
    596a:	b0 e0       	ldi	r27, 0x00	; 0
    596c:	e5 e3       	ldi	r30, 0x35	; 53
    596e:	f0 e0       	ldi	r31, 0x00	; 0
    5970:	90 81       	ld	r25, Z
    5972:	8b 81       	ldd	r24, Y+3	; 0x03
    5974:	89 2b       	or	r24, r25
    5976:	8c 93       	st	X, r24
    5978:	11 c0       	rjmp	.+34     	; 0x599c <DIO_voidWriteHighNibbles+0xe6>
			break ;
		case DIO_PORTD:
			PORTD_Register&=0x0f;                 //Set only the high nibble of the port D by the given value
    597a:	a2 e3       	ldi	r26, 0x32	; 50
    597c:	b0 e0       	ldi	r27, 0x00	; 0
    597e:	e2 e3       	ldi	r30, 0x32	; 50
    5980:	f0 e0       	ldi	r31, 0x00	; 0
    5982:	80 81       	ld	r24, Z
    5984:	8f 70       	andi	r24, 0x0F	; 15
    5986:	8c 93       	st	X, r24
			PORTD_Register|=Copy_u8value;
    5988:	a2 e3       	ldi	r26, 0x32	; 50
    598a:	b0 e0       	ldi	r27, 0x00	; 0
    598c:	e2 e3       	ldi	r30, 0x32	; 50
    598e:	f0 e0       	ldi	r31, 0x00	; 0
    5990:	90 81       	ld	r25, Z
    5992:	8b 81       	ldd	r24, Y+3	; 0x03
    5994:	89 2b       	or	r24, r25
    5996:	8c 93       	st	X, r24
    5998:	01 c0       	rjmp	.+2      	; 0x599c <DIO_voidWriteHighNibbles+0xe6>

		}
	}
	else
	{
		LOC_enumState = DIO_NOK;
    599a:	19 82       	std	Y+1, r1	; 0x01
	}

	return LOC_enumState ;
    599c:	89 81       	ldd	r24, Y+1	; 0x01

}
    599e:	0f 90       	pop	r0
    59a0:	0f 90       	pop	r0
    59a2:	0f 90       	pop	r0
    59a4:	0f 90       	pop	r0
    59a6:	0f 90       	pop	r0
    59a8:	cf 91       	pop	r28
    59aa:	df 91       	pop	r29
    59ac:	08 95       	ret

000059ae <DIO_enumSetPortDirection>:


DIO_ErrorStatus DIO_enumSetPortDirection   (u8 Copy_u8PORT , u8 Copy_u8Direction )
{
    59ae:	df 93       	push	r29
    59b0:	cf 93       	push	r28
    59b2:	00 d0       	rcall	.+0      	; 0x59b4 <DIO_enumSetPortDirection+0x6>
    59b4:	00 d0       	rcall	.+0      	; 0x59b6 <DIO_enumSetPortDirection+0x8>
    59b6:	0f 92       	push	r0
    59b8:	cd b7       	in	r28, 0x3d	; 61
    59ba:	de b7       	in	r29, 0x3e	; 62
    59bc:	8a 83       	std	Y+2, r24	; 0x02
    59be:	6b 83       	std	Y+3, r22	; 0x03

	DIO_ErrorStatus LOC_enumState = DIO_OK ;
    59c0:	81 e0       	ldi	r24, 0x01	; 1
    59c2:	89 83       	std	Y+1, r24	; 0x01

	if ( (Copy_u8PORT <= DIO_PORTD) )
    59c4:	8a 81       	ldd	r24, Y+2	; 0x02
    59c6:	84 30       	cpi	r24, 0x04	; 4
    59c8:	a8 f5       	brcc	.+106    	; 0x5a34 <DIO_enumSetPortDirection+0x86>
	{
		/* Check on the Required PORT Number */
		switch (Copy_u8PORT)
    59ca:	8a 81       	ldd	r24, Y+2	; 0x02
    59cc:	28 2f       	mov	r18, r24
    59ce:	30 e0       	ldi	r19, 0x00	; 0
    59d0:	3d 83       	std	Y+5, r19	; 0x05
    59d2:	2c 83       	std	Y+4, r18	; 0x04
    59d4:	8c 81       	ldd	r24, Y+4	; 0x04
    59d6:	9d 81       	ldd	r25, Y+5	; 0x05
    59d8:	81 30       	cpi	r24, 0x01	; 1
    59da:	91 05       	cpc	r25, r1
    59dc:	d1 f0       	breq	.+52     	; 0x5a12 <DIO_enumSetPortDirection+0x64>
    59de:	2c 81       	ldd	r18, Y+4	; 0x04
    59e0:	3d 81       	ldd	r19, Y+5	; 0x05
    59e2:	22 30       	cpi	r18, 0x02	; 2
    59e4:	31 05       	cpc	r19, r1
    59e6:	2c f4       	brge	.+10     	; 0x59f2 <DIO_enumSetPortDirection+0x44>
    59e8:	8c 81       	ldd	r24, Y+4	; 0x04
    59ea:	9d 81       	ldd	r25, Y+5	; 0x05
    59ec:	00 97       	sbiw	r24, 0x00	; 0
    59ee:	61 f0       	breq	.+24     	; 0x5a08 <DIO_enumSetPortDirection+0x5a>
    59f0:	1f c0       	rjmp	.+62     	; 0x5a30 <DIO_enumSetPortDirection+0x82>
    59f2:	2c 81       	ldd	r18, Y+4	; 0x04
    59f4:	3d 81       	ldd	r19, Y+5	; 0x05
    59f6:	22 30       	cpi	r18, 0x02	; 2
    59f8:	31 05       	cpc	r19, r1
    59fa:	81 f0       	breq	.+32     	; 0x5a1c <DIO_enumSetPortDirection+0x6e>
    59fc:	8c 81       	ldd	r24, Y+4	; 0x04
    59fe:	9d 81       	ldd	r25, Y+5	; 0x05
    5a00:	83 30       	cpi	r24, 0x03	; 3
    5a02:	91 05       	cpc	r25, r1
    5a04:	81 f0       	breq	.+32     	; 0x5a26 <DIO_enumSetPortDirection+0x78>
    5a06:	14 c0       	rjmp	.+40     	; 0x5a30 <DIO_enumSetPortDirection+0x82>
		{
		case     DIO_PORTA: DDRA_Register = Copy_u8Direction; break;
    5a08:	ea e3       	ldi	r30, 0x3A	; 58
    5a0a:	f0 e0       	ldi	r31, 0x00	; 0
    5a0c:	8b 81       	ldd	r24, Y+3	; 0x03
    5a0e:	80 83       	st	Z, r24
    5a10:	12 c0       	rjmp	.+36     	; 0x5a36 <DIO_enumSetPortDirection+0x88>
		case     DIO_PORTB: DDRB_Register = Copy_u8Direction; break;
    5a12:	e7 e3       	ldi	r30, 0x37	; 55
    5a14:	f0 e0       	ldi	r31, 0x00	; 0
    5a16:	8b 81       	ldd	r24, Y+3	; 0x03
    5a18:	80 83       	st	Z, r24
    5a1a:	0d c0       	rjmp	.+26     	; 0x5a36 <DIO_enumSetPortDirection+0x88>
		case     DIO_PORTC: DDRC_Register = Copy_u8Direction; break;
    5a1c:	e4 e3       	ldi	r30, 0x34	; 52
    5a1e:	f0 e0       	ldi	r31, 0x00	; 0
    5a20:	8b 81       	ldd	r24, Y+3	; 0x03
    5a22:	80 83       	st	Z, r24
    5a24:	08 c0       	rjmp	.+16     	; 0x5a36 <DIO_enumSetPortDirection+0x88>
		case     DIO_PORTD: DDRD_Register = Copy_u8Direction; break;
    5a26:	e1 e3       	ldi	r30, 0x31	; 49
    5a28:	f0 e0       	ldi	r31, 0x00	; 0
    5a2a:	8b 81       	ldd	r24, Y+3	; 0x03
    5a2c:	80 83       	st	Z, r24
    5a2e:	03 c0       	rjmp	.+6      	; 0x5a36 <DIO_enumSetPortDirection+0x88>
		default: LOC_enumState =  DIO_NOK;    break;
    5a30:	19 82       	std	Y+1, r1	; 0x01
    5a32:	01 c0       	rjmp	.+2      	; 0x5a36 <DIO_enumSetPortDirection+0x88>
		}
	}
	else
	{
		LOC_enumState = DIO_NOK;
    5a34:	19 82       	std	Y+1, r1	; 0x01
	}
	return LOC_enumState ;
    5a36:	89 81       	ldd	r24, Y+1	; 0x01
}
    5a38:	0f 90       	pop	r0
    5a3a:	0f 90       	pop	r0
    5a3c:	0f 90       	pop	r0
    5a3e:	0f 90       	pop	r0
    5a40:	0f 90       	pop	r0
    5a42:	cf 91       	pop	r28
    5a44:	df 91       	pop	r29
    5a46:	08 95       	ret

00005a48 <DIO_enumSetPortValue>:


DIO_ErrorStatus DIO_enumSetPortValue       (u8 Copy_u8PORT , u8 Copy_u8Value )
{
    5a48:	df 93       	push	r29
    5a4a:	cf 93       	push	r28
    5a4c:	00 d0       	rcall	.+0      	; 0x5a4e <DIO_enumSetPortValue+0x6>
    5a4e:	00 d0       	rcall	.+0      	; 0x5a50 <DIO_enumSetPortValue+0x8>
    5a50:	0f 92       	push	r0
    5a52:	cd b7       	in	r28, 0x3d	; 61
    5a54:	de b7       	in	r29, 0x3e	; 62
    5a56:	8a 83       	std	Y+2, r24	; 0x02
    5a58:	6b 83       	std	Y+3, r22	; 0x03

	DIO_ErrorStatus LOC_enumState = DIO_OK ;
    5a5a:	81 e0       	ldi	r24, 0x01	; 1
    5a5c:	89 83       	std	Y+1, r24	; 0x01

	if ( (Copy_u8PORT <= DIO_PORTD) && ( (Copy_u8Value<=255) || (Copy_u8Value==DIO_PORT_LOW) || (Copy_u8Value==DIO_PORT_HIGH) ) )
    5a5e:	8a 81       	ldd	r24, Y+2	; 0x02
    5a60:	84 30       	cpi	r24, 0x04	; 4
    5a62:	a8 f5       	brcc	.+106    	; 0x5ace <DIO_enumSetPortValue+0x86>
	{
		/* Check on the Required PORT Number */
		switch (Copy_u8PORT)
    5a64:	8a 81       	ldd	r24, Y+2	; 0x02
    5a66:	28 2f       	mov	r18, r24
    5a68:	30 e0       	ldi	r19, 0x00	; 0
    5a6a:	3d 83       	std	Y+5, r19	; 0x05
    5a6c:	2c 83       	std	Y+4, r18	; 0x04
    5a6e:	8c 81       	ldd	r24, Y+4	; 0x04
    5a70:	9d 81       	ldd	r25, Y+5	; 0x05
    5a72:	81 30       	cpi	r24, 0x01	; 1
    5a74:	91 05       	cpc	r25, r1
    5a76:	d1 f0       	breq	.+52     	; 0x5aac <DIO_enumSetPortValue+0x64>
    5a78:	2c 81       	ldd	r18, Y+4	; 0x04
    5a7a:	3d 81       	ldd	r19, Y+5	; 0x05
    5a7c:	22 30       	cpi	r18, 0x02	; 2
    5a7e:	31 05       	cpc	r19, r1
    5a80:	2c f4       	brge	.+10     	; 0x5a8c <DIO_enumSetPortValue+0x44>
    5a82:	8c 81       	ldd	r24, Y+4	; 0x04
    5a84:	9d 81       	ldd	r25, Y+5	; 0x05
    5a86:	00 97       	sbiw	r24, 0x00	; 0
    5a88:	61 f0       	breq	.+24     	; 0x5aa2 <DIO_enumSetPortValue+0x5a>
    5a8a:	1f c0       	rjmp	.+62     	; 0x5aca <DIO_enumSetPortValue+0x82>
    5a8c:	2c 81       	ldd	r18, Y+4	; 0x04
    5a8e:	3d 81       	ldd	r19, Y+5	; 0x05
    5a90:	22 30       	cpi	r18, 0x02	; 2
    5a92:	31 05       	cpc	r19, r1
    5a94:	81 f0       	breq	.+32     	; 0x5ab6 <DIO_enumSetPortValue+0x6e>
    5a96:	8c 81       	ldd	r24, Y+4	; 0x04
    5a98:	9d 81       	ldd	r25, Y+5	; 0x05
    5a9a:	83 30       	cpi	r24, 0x03	; 3
    5a9c:	91 05       	cpc	r25, r1
    5a9e:	81 f0       	breq	.+32     	; 0x5ac0 <DIO_enumSetPortValue+0x78>
    5aa0:	14 c0       	rjmp	.+40     	; 0x5aca <DIO_enumSetPortValue+0x82>
		{
		case     DIO_PORTA: PORTA_Register = Copy_u8Value; break;
    5aa2:	eb e3       	ldi	r30, 0x3B	; 59
    5aa4:	f0 e0       	ldi	r31, 0x00	; 0
    5aa6:	8b 81       	ldd	r24, Y+3	; 0x03
    5aa8:	80 83       	st	Z, r24
    5aaa:	12 c0       	rjmp	.+36     	; 0x5ad0 <DIO_enumSetPortValue+0x88>
		case     DIO_PORTB: PORTB_Register = Copy_u8Value; break;
    5aac:	e8 e3       	ldi	r30, 0x38	; 56
    5aae:	f0 e0       	ldi	r31, 0x00	; 0
    5ab0:	8b 81       	ldd	r24, Y+3	; 0x03
    5ab2:	80 83       	st	Z, r24
    5ab4:	0d c0       	rjmp	.+26     	; 0x5ad0 <DIO_enumSetPortValue+0x88>
		case     DIO_PORTC: PORTC_Register = Copy_u8Value; break;
    5ab6:	e5 e3       	ldi	r30, 0x35	; 53
    5ab8:	f0 e0       	ldi	r31, 0x00	; 0
    5aba:	8b 81       	ldd	r24, Y+3	; 0x03
    5abc:	80 83       	st	Z, r24
    5abe:	08 c0       	rjmp	.+16     	; 0x5ad0 <DIO_enumSetPortValue+0x88>
		case     DIO_PORTD: PORTD_Register = Copy_u8Value; break;
    5ac0:	e2 e3       	ldi	r30, 0x32	; 50
    5ac2:	f0 e0       	ldi	r31, 0x00	; 0
    5ac4:	8b 81       	ldd	r24, Y+3	; 0x03
    5ac6:	80 83       	st	Z, r24
    5ac8:	03 c0       	rjmp	.+6      	; 0x5ad0 <DIO_enumSetPortValue+0x88>
		default: LOC_enumState = DIO_NOK;       break;
    5aca:	19 82       	std	Y+1, r1	; 0x01
    5acc:	01 c0       	rjmp	.+2      	; 0x5ad0 <DIO_enumSetPortValue+0x88>
		}
	}
	else
	{
		LOC_enumState = DIO_NOK;
    5ace:	19 82       	std	Y+1, r1	; 0x01
	}
	return LOC_enumState ;
    5ad0:	89 81       	ldd	r24, Y+1	; 0x01
}
    5ad2:	0f 90       	pop	r0
    5ad4:	0f 90       	pop	r0
    5ad6:	0f 90       	pop	r0
    5ad8:	0f 90       	pop	r0
    5ada:	0f 90       	pop	r0
    5adc:	cf 91       	pop	r28
    5ade:	df 91       	pop	r29
    5ae0:	08 95       	ret

00005ae2 <__mulsi3>:
    5ae2:	62 9f       	mul	r22, r18
    5ae4:	d0 01       	movw	r26, r0
    5ae6:	73 9f       	mul	r23, r19
    5ae8:	f0 01       	movw	r30, r0
    5aea:	82 9f       	mul	r24, r18
    5aec:	e0 0d       	add	r30, r0
    5aee:	f1 1d       	adc	r31, r1
    5af0:	64 9f       	mul	r22, r20
    5af2:	e0 0d       	add	r30, r0
    5af4:	f1 1d       	adc	r31, r1
    5af6:	92 9f       	mul	r25, r18
    5af8:	f0 0d       	add	r31, r0
    5afa:	83 9f       	mul	r24, r19
    5afc:	f0 0d       	add	r31, r0
    5afe:	74 9f       	mul	r23, r20
    5b00:	f0 0d       	add	r31, r0
    5b02:	65 9f       	mul	r22, r21
    5b04:	f0 0d       	add	r31, r0
    5b06:	99 27       	eor	r25, r25
    5b08:	72 9f       	mul	r23, r18
    5b0a:	b0 0d       	add	r27, r0
    5b0c:	e1 1d       	adc	r30, r1
    5b0e:	f9 1f       	adc	r31, r25
    5b10:	63 9f       	mul	r22, r19
    5b12:	b0 0d       	add	r27, r0
    5b14:	e1 1d       	adc	r30, r1
    5b16:	f9 1f       	adc	r31, r25
    5b18:	bd 01       	movw	r22, r26
    5b1a:	cf 01       	movw	r24, r30
    5b1c:	11 24       	eor	r1, r1
    5b1e:	08 95       	ret

00005b20 <__udivmodsi4>:
    5b20:	a1 e2       	ldi	r26, 0x21	; 33
    5b22:	1a 2e       	mov	r1, r26
    5b24:	aa 1b       	sub	r26, r26
    5b26:	bb 1b       	sub	r27, r27
    5b28:	fd 01       	movw	r30, r26
    5b2a:	0d c0       	rjmp	.+26     	; 0x5b46 <__udivmodsi4_ep>

00005b2c <__udivmodsi4_loop>:
    5b2c:	aa 1f       	adc	r26, r26
    5b2e:	bb 1f       	adc	r27, r27
    5b30:	ee 1f       	adc	r30, r30
    5b32:	ff 1f       	adc	r31, r31
    5b34:	a2 17       	cp	r26, r18
    5b36:	b3 07       	cpc	r27, r19
    5b38:	e4 07       	cpc	r30, r20
    5b3a:	f5 07       	cpc	r31, r21
    5b3c:	20 f0       	brcs	.+8      	; 0x5b46 <__udivmodsi4_ep>
    5b3e:	a2 1b       	sub	r26, r18
    5b40:	b3 0b       	sbc	r27, r19
    5b42:	e4 0b       	sbc	r30, r20
    5b44:	f5 0b       	sbc	r31, r21

00005b46 <__udivmodsi4_ep>:
    5b46:	66 1f       	adc	r22, r22
    5b48:	77 1f       	adc	r23, r23
    5b4a:	88 1f       	adc	r24, r24
    5b4c:	99 1f       	adc	r25, r25
    5b4e:	1a 94       	dec	r1
    5b50:	69 f7       	brne	.-38     	; 0x5b2c <__udivmodsi4_loop>
    5b52:	60 95       	com	r22
    5b54:	70 95       	com	r23
    5b56:	80 95       	com	r24
    5b58:	90 95       	com	r25
    5b5a:	9b 01       	movw	r18, r22
    5b5c:	ac 01       	movw	r20, r24
    5b5e:	bd 01       	movw	r22, r26
    5b60:	cf 01       	movw	r24, r30
    5b62:	08 95       	ret

00005b64 <__prologue_saves__>:
    5b64:	2f 92       	push	r2
    5b66:	3f 92       	push	r3
    5b68:	4f 92       	push	r4
    5b6a:	5f 92       	push	r5
    5b6c:	6f 92       	push	r6
    5b6e:	7f 92       	push	r7
    5b70:	8f 92       	push	r8
    5b72:	9f 92       	push	r9
    5b74:	af 92       	push	r10
    5b76:	bf 92       	push	r11
    5b78:	cf 92       	push	r12
    5b7a:	df 92       	push	r13
    5b7c:	ef 92       	push	r14
    5b7e:	ff 92       	push	r15
    5b80:	0f 93       	push	r16
    5b82:	1f 93       	push	r17
    5b84:	cf 93       	push	r28
    5b86:	df 93       	push	r29
    5b88:	cd b7       	in	r28, 0x3d	; 61
    5b8a:	de b7       	in	r29, 0x3e	; 62
    5b8c:	ca 1b       	sub	r28, r26
    5b8e:	db 0b       	sbc	r29, r27
    5b90:	0f b6       	in	r0, 0x3f	; 63
    5b92:	f8 94       	cli
    5b94:	de bf       	out	0x3e, r29	; 62
    5b96:	0f be       	out	0x3f, r0	; 63
    5b98:	cd bf       	out	0x3d, r28	; 61
    5b9a:	09 94       	ijmp

00005b9c <__epilogue_restores__>:
    5b9c:	2a 88       	ldd	r2, Y+18	; 0x12
    5b9e:	39 88       	ldd	r3, Y+17	; 0x11
    5ba0:	48 88       	ldd	r4, Y+16	; 0x10
    5ba2:	5f 84       	ldd	r5, Y+15	; 0x0f
    5ba4:	6e 84       	ldd	r6, Y+14	; 0x0e
    5ba6:	7d 84       	ldd	r7, Y+13	; 0x0d
    5ba8:	8c 84       	ldd	r8, Y+12	; 0x0c
    5baa:	9b 84       	ldd	r9, Y+11	; 0x0b
    5bac:	aa 84       	ldd	r10, Y+10	; 0x0a
    5bae:	b9 84       	ldd	r11, Y+9	; 0x09
    5bb0:	c8 84       	ldd	r12, Y+8	; 0x08
    5bb2:	df 80       	ldd	r13, Y+7	; 0x07
    5bb4:	ee 80       	ldd	r14, Y+6	; 0x06
    5bb6:	fd 80       	ldd	r15, Y+5	; 0x05
    5bb8:	0c 81       	ldd	r16, Y+4	; 0x04
    5bba:	1b 81       	ldd	r17, Y+3	; 0x03
    5bbc:	aa 81       	ldd	r26, Y+2	; 0x02
    5bbe:	b9 81       	ldd	r27, Y+1	; 0x01
    5bc0:	ce 0f       	add	r28, r30
    5bc2:	d1 1d       	adc	r29, r1
    5bc4:	0f b6       	in	r0, 0x3f	; 63
    5bc6:	f8 94       	cli
    5bc8:	de bf       	out	0x3e, r29	; 62
    5bca:	0f be       	out	0x3f, r0	; 63
    5bcc:	cd bf       	out	0x3d, r28	; 61
    5bce:	ed 01       	movw	r28, r26
    5bd0:	08 95       	ret

00005bd2 <_exit>:
    5bd2:	f8 94       	cli

00005bd4 <__stop_program>:
    5bd4:	ff cf       	rjmp	.-2      	; 0x5bd4 <__stop_program>
